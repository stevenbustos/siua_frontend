{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/users/CreateUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/users/CreateUser.vue","mtime":1547157018858},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../persons/CreatePersonModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect,\n    'create-person': CreatePerson\n  },\n  data () {\n    return {\n      personSelect:\"\",\n      dependencies: [],\n      people:[],\n      roles: [],\n      cities: [],\n      document_types : [] ,\n      user_name: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      user_roles: [],\n      submitting: false,\n      modal_show: false\n    }\n  },\n  validations: {\n    personSelect:{ required },\n    user_roles: { required }, user_name: { required },\n    end_date: { required }, start_date: { required }\n  },\n  mounted () {\n    axios\n    .get(API_IP+\"/person/\")\n    .then(response => {\n      for (var k in response.data.data){\n        var user_info = {}\n        console.log(response.data.data[k]);\n        user_info[\"_id\"] = response.data.data[k]._id;\n        user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n        user_info[\"correo_electronico\"] = response.data.data[k].correo_electronico;\n\n        this.people.push(user_info);\n      }\n      axios\n      .get(API_IP+'/documentType')\n      .then(response => {\n        for (var k in response.data.data){\n          var doc = {}\n          doc[\"_id\"] = response.data.data[k]._id;\n          doc[\"name\"] = response.data.data[k].nombre;\n          this.document_types.push(doc);\n        }\n        axios\n        .get(API_IP+'/city')\n        .then(response => {\n          for (var k in response.data.data){\n            var city = {}\n            city[\"_id\"] = response.data.data[k]._id;\n            city[\"name\"] = response.data.data[k].nombre;\n            this.cities.push(city);\n          }\n          axios\n          .get(API_IP+'/dependence')\n          .then(response => {\n            for (var k in response.data.data){\n              var dependence = {}\n              dependence[\"_id\"] = response.data.data[k]._id;\n              dependence[\"name\"] = response.data.data[k].nombre;\n              this.dependencies.push(dependence);\n            }\n            axios\n            .get(API_IP+'/rol')\n            .then(response => {\n              for (var k in response.data.data){\n                var rol = {}\n                if(response.data.data[k].activo == true ){\n                  rol[\"_id\"] = response.data.data[k]._id;\n                  rol[\"name\"] = response.data.data[k].nombre;\n\n                  this.roles.push(rol);\n                }\n              }\n            });\n          });\n        });\n      });\n    });\n  },\n  methods : {\n    submit(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        var roles_usuario = []\n        for (var k in this.user_roles){\n          var rol = {}\n          rol[\"_id\"] = this.user_roles[k]._id;\n          roles_usuario.push(rol);\n        }\n\n        axios\n        .post(API_IP+\"/user/\", {\n          roles: roles_usuario,\n          nombre_usuario: this.user_name,\n          fecha_fin_contrato: this.end_date,\n          fecha_inicio_contrato: this.start_date,\n          persona: this.personSelect\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el usuario satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'users' });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'users' });\n            }\n          });\n        }\n      });\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    }\n  }\n}\n",{"version":3,"sources":["CreateUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"CreateUser.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/usuarios\">Usuarios</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Crear Usuario</li>\n          </ol>\n        </nav>\n      </div>\n      <modal name=\"create-person\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n        <create-person\n        :hide_modal=\"modal_show\"\n        @modalShow=\"closeModalCreatePerson\"\n        ></create-person>\n      </modal>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-6 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <multiselect v-model.trim=\"$v.personSelect.$model\" :options=\"people\" :multiple=\"false\"  placeholder=\"Seleccione la persona\" :show-labels=\"true\" label=\"name\" track-by=\"_id\" :searchable=\"true\" :close-on-select=\"true\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.personSelect.$dirty && !$v.personSelect.required\">Es requerida una persona</div>\n                  </div>\n                  <div class=\"col-auto\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.user_name.$error }\">\n                  <label for=\"username\">Usuario:</label>\n                  <input type=\"text\" v-model.trim=\"$v.user_name.$model\" class=\"form-control\" id=\"username\" aria-describedby=\"siaUsername\" placeholder=\"Usuario del funcionario en el sistema\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.user_name.$dirty && !$v.user_name.required\">Es requerido un nombre de usuario</div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.start_date.$error }\">\n                      <label for=\"contractStartDate\">Fecha inicio contrato:</label>\n                      <input type=\"date\" v-model.trim=\"$v.start_date.$model\" class=\"form-control\" id=\"contractStartDate\" aria-describedby=\"contractStartDate\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.start_date.$dirty && !$v.start_date.required\">Es requerida la fecha de inicio de contrato</div>\n                    </div>\n                  </div>\n                  <div class=\"col\">\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.end_date.$error }\">\n                      <label for=\"contractEndDate\">Fecha culminación contrato:</label>\n                      <input type=\"date\" v-model=\"end_date\" class=\"form-control\" id=\"contractEndDate\" aria-describedby=\"contractEndDate\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.end_date.$dirty && !$v.end_date.required\">Es requerida la fecha de finalización de contrato</div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.user_roles.$error }\">\n                  <label for=\"userRol\">Rol:</label>\n                  <multiselect v-model.trim=\"$v.user_roles.$model\" :options=\"roles\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los roles del usuario\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.user_roles.$dirty && !$v.user_roles.required\">Es requerido minímo un rol</div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear nuevo\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../persons/CreatePersonModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect,\n    'create-person': CreatePerson\n  },\n  data () {\n    return {\n      personSelect:\"\",\n      dependencies: [],\n      people:[],\n      roles: [],\n      cities: [],\n      document_types : [] ,\n      user_name: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      user_roles: [],\n      submitting: false,\n      modal_show: false\n    }\n  },\n  validations: {\n    personSelect:{ required },\n    user_roles: { required }, user_name: { required },\n    end_date: { required }, start_date: { required }\n  },\n  mounted () {\n    axios\n    .get(API_IP+\"/person/\")\n    .then(response => {\n      for (var k in response.data.data){\n        var user_info = {}\n        console.log(response.data.data[k]);\n        user_info[\"_id\"] = response.data.data[k]._id;\n        user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n        user_info[\"correo_electronico\"] = response.data.data[k].correo_electronico;\n\n        this.people.push(user_info);\n      }\n      axios\n      .get(API_IP+'/documentType')\n      .then(response => {\n        for (var k in response.data.data){\n          var doc = {}\n          doc[\"_id\"] = response.data.data[k]._id;\n          doc[\"name\"] = response.data.data[k].nombre;\n          this.document_types.push(doc);\n        }\n        axios\n        .get(API_IP+'/city')\n        .then(response => {\n          for (var k in response.data.data){\n            var city = {}\n            city[\"_id\"] = response.data.data[k]._id;\n            city[\"name\"] = response.data.data[k].nombre;\n            this.cities.push(city);\n          }\n          axios\n          .get(API_IP+'/dependence')\n          .then(response => {\n            for (var k in response.data.data){\n              var dependence = {}\n              dependence[\"_id\"] = response.data.data[k]._id;\n              dependence[\"name\"] = response.data.data[k].nombre;\n              this.dependencies.push(dependence);\n            }\n            axios\n            .get(API_IP+'/rol')\n            .then(response => {\n              for (var k in response.data.data){\n                var rol = {}\n                if(response.data.data[k].activo == true ){\n                  rol[\"_id\"] = response.data.data[k]._id;\n                  rol[\"name\"] = response.data.data[k].nombre;\n\n                  this.roles.push(rol);\n                }\n              }\n            });\n          });\n        });\n      });\n    });\n  },\n  methods : {\n    submit(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        var roles_usuario = []\n        for (var k in this.user_roles){\n          var rol = {}\n          rol[\"_id\"] = this.user_roles[k]._id;\n          roles_usuario.push(rol);\n        }\n\n        axios\n        .post(API_IP+\"/user/\", {\n          roles: roles_usuario,\n          nombre_usuario: this.user_name,\n          fecha_fin_contrato: this.end_date,\n          fecha_inicio_contrato: this.start_date,\n          persona: this.personSelect\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el usuario satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'users' });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'users' });\n            }\n          });\n        }\n      });\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    }\n  }\n}\n</script>\n"]}]}