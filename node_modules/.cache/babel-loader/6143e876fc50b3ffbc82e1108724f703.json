{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/roles/UpdateRol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/roles/UpdateRol.vue","mtime":1547157018000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      permit_options: {},\n      rol_auditoria: {},\n      modules: [],\n      permits: [],\n      rol_name: \"\",\n      rol_state: \"\",\n      rol_state_get: \"\",\n      rol_description: '',\n      states: [{\n        name: \"Activo\",\n        activo: \"true\"\n      }, {\n        name: \"Inactivo\",\n        activo: \"false\"\n      }],\n      rol_mod: [],\n      rol_url: \"\",\n      submitting: false\n    };\n  },\n  validations: {\n    rol_state: {\n      required: required\n    },\n    rol_description: {\n      required: required\n    },\n    rol_mod: {\n      required: required\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(API_IP + \"/module/\").then(function (response) {\n      for (var k in response.data.data) {\n        var mod = {};\n        mod[\"_id\"] = response.data.data[k]._id;\n        mod[\"name\"] = response.data.data[k].nombre;\n        mod[\"permits\"] = [];\n        mod[\"modulo\"] = response.data.data[k]._id;\n        _this.permit_options[response.data.data[k]._id] = [];\n\n        for (var j in response.data.data[k].permisos) {\n          var per = {};\n\n          if (response.data.data[k].activo == true) {\n            per[\"_id\"] = response.data.data[k].permisos[j]._id;\n            per[\"name\"] = response.data.data[k].permisos[j].nombre;\n            mod[\"permits\"].push(per);\n\n            _this.permit_options[response.data.data[k]._id].push(per);\n          }\n        }\n\n        _this.modules.push(mod);\n      }\n\n      axios.get(API_IP + '/rol/' + _this.$route.params.id).then(function (response) {\n        _this.rol_auditoria = response.data.data.auditoria;\n        _this.rol_name = response.data.data.nombre;\n        _this.rol_state = response.data.data.activo;\n        response.data.data.activo ? _this.rol_state_get = \"Activo\" : _this.rol_state_get = \"Inactivo\";\n        _this.rol_description = response.data.data.descripcion;\n        _this.rol_id = response.data.data._id;\n        _this.rol_url = \"/roles/\" + response.data.data._id;\n\n        for (var k in response.data.data.modulos) {\n          var mod_info = {};\n          mod_info[\"_id\"] = response.data.data.modulos[k]._id;\n          mod_info[\"modulo\"] = response.data.data.modulos[k].modulo._id;\n          mod_info[\"name\"] = response.data.data.modulos[k].modulo.nombre;\n          var mod_per = [];\n\n          for (var j in response.data.data.modulos[k].permisos) {\n            var perms = {};\n            perms[\"_id\"] = response.data.data.modulos[k].permisos[j]._id;\n            perms[\"name\"] = response.data.data.modulos[k].permisos[j].nombre;\n            mod_per.push(perms);\n\n            _this.permit_options[response.data.data.modulos[k].modulo._id].push(perms);\n          }\n\n          mod_info[\"permisos\"] = mod_per;\n\n          _this.rol_mod.push(mod_info);\n        }\n      });\n    });\n  },\n  methods: {\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios.put(API_IP + \"/rol/\" + this.$route.params.id, {\n          auditoria: this.rol_auditoria,\n          activo: this.rol_state.activo,\n          _id: this.rol_id,\n          nombre: this.rol_name,\n          descripcion: this.rol_description,\n          modulos: this.rol_mod\n        }).then(function (response) {\n          console.log(response);\n\n          _this2.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo el rol satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              _this2.submitting = false;\n\n              _this2.$router.push({\n                name: 'showrol',\n                params: {\n                  id: _this2.rol_id\n                }\n              });\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this2.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this2.submitting = false;\n        });\n      }\n    },\n    cancel: function cancel() {\n      var _this3 = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this3.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this3.$router.push({\n                name: 'showrol',\n                params: {\n                  id: _this3.rol_id\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["UpdateRol.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/roles\">Roles</a></li>\n            <li class=\"breadcrumb-item\"><a v-bind:href=\"rol_url\">{{rol_name}}</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Editar Rol</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div class=\"form-group\">\n                  <label for=\"rolName\">Nombre del rol:</label>\n                  <input type=\"text\" class=\"form-control\" id=\"rolName\" aria-describedby=\"rolName\" :placeholder=\"rol_name\" readonly>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_mod.$error }\">\n                  <label for=\"rolModules\">Modulos del rol:</label>\n                  <multiselect v-model.trim=\"$v.rol_mod.$model\" :options=\"modules\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los modulos\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_mod.$dirty && !$v.rol_mod.required\">Es requerido minimo un modúlo</div>\n                </div>\n                <div v-for='(module, index) in rol_mod' :key='index' class=\"form-group\">\n                  <label for=\"rolModules\">Permisos de {{module.name}}</label>\n                  <multiselect v-model=\"module.permisos\" :options=\"permit_options[module.modulo]\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los permisos del modulo\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_state.$error }\">\n                  <label for=\"rolStates\">Estado del rol:</label>\n                  <multiselect v-model.trim=\"$v.rol_state.$model\" :options=\"states\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un estado\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_state.$dirty && !$v.rol_state.required\">Es requerido un estado</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_description.$error }\">\n                  <label for=\"rolDescription\">Descripción:</label>\n                  <textarea v-model.trim=\"$v.rol_description.$model\" class=\"form-control\" aria-label=\"rolDescription\"\n                  placeholder=\"Descripción\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_description.$dirty && !$v.rol_description.required\">Es requerida una descripción</div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                      Guardar\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      permit_options: {},\n      rol_auditoria: {},\n      modules: [],\n      permits: [],\n      rol_name: \"\",\n      rol_state: \"\",\n      rol_state_get: \"\",\n      rol_description: '',\n      states: [\n        { name: \"Activo\", activo: \"true\" },\n        { name: \"Inactivo\", activo: \"false\" }\n      ],\n      rol_mod: [],\n      rol_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    rol_state: {\n      required\n    },\n    rol_description: {\n      required\n    },\n    rol_mod: {\n      required\n    }\n  },\n  mounted () {\n      axios\n      .get(API_IP+\"/module/\")\n      .then(response => {\n        for(var k in response.data.data){\n          var mod = {}\n          mod[\"_id\"] = response.data.data[k]._id\n          mod[\"name\"] = response.data.data[k].nombre;\n          mod[\"permits\"] = [];\n          mod[\"modulo\"] = response.data.data[k]._id;\n          this.permit_options[response.data.data[k]._id]=[]\n          for (var j in response.data.data[k].permisos){\n            var per = {}\n            if(response.data.data[k].activo == true ){\n              per[\"_id\"] = response.data.data[k].permisos[j]._id;\n              per[\"name\"] = response.data.data[k].permisos[j].nombre;\n              mod[\"permits\"].push(per);\n              this.permit_options[response.data.data[k]._id].push(per)\n            }\n          }\n          this.modules.push(mod);\n        }\n        axios\n        .get(API_IP+'/rol/'+this.$route.params.id)\n        .then(response => {\n          this.rol_auditoria = response.data.data.auditoria;\n          this.rol_name = response.data.data.nombre;\n          this.rol_state = response.data.data.activo;\n          response.data.data.activo? this.rol_state_get=\"Activo\" : this.rol_state_get=\"Inactivo\";\n          this.rol_description = response.data.data.descripcion\n          this.rol_id = response.data.data._id\n          this.rol_url = \"/roles/\"+response.data.data._id\n\n          for (var k in response.data.data.modulos){\n            var mod_info = {}\n            mod_info[\"_id\"] = response.data.data.modulos[k]._id\n            mod_info[\"modulo\"] = response.data.data.modulos[k].modulo._id\n            mod_info[\"name\"] = response.data.data.modulos[k].modulo.nombre\n            var mod_per = []\n            for (var j in response.data.data.modulos[k].permisos){\n                var perms = {}\n                perms[\"_id\"] = response.data.data.modulos[k].permisos[j]._id\n                perms[\"name\"] = response.data.data.modulos[k].permisos[j].nombre\n                mod_per.push(perms)\n                this.permit_options[response.data.data.modulos[k].modulo._id].push(perms)\n            }\n            mod_info[\"permisos\"] = mod_per\n            this.rol_mod.push(mod_info)\n          }\n      });\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+\"/rol/\"+this.$route.params.id, {\n          auditoria: this.rol_auditoria,\n          activo: this.rol_state.activo,\n          _id: this.rol_id,\n          nombre: this.rol_name,\n          descripcion: this.rol_description,\n          modulos: this.rol_mod\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo el rol satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n\n</script>\n"],"sourceRoot":"src/components/roles"}]}