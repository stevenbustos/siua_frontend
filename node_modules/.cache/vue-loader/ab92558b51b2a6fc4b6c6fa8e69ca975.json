{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestA.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestA.vue","mtime":1547157018000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../../persons/CreatePersonModal.vue'\nimport CreateClause from '../../clauses/CreateClauseModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nconst { mapActions, mapState ,mapGetters } = Vuex\n\nimport router from '../../../router'\n\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    profesores:[],\n    contratistas:[],\n    planta:[],\n    interventorStore:{},\n    contratistaStore:{},\n    responsableStore:{},\n    valuex:\"\",\n    valuey:\"\",\n    allpersonas:[],\n    personasInterventor:[],\n    personasContratista:[],\n    personasResponsable:[],\n    personasInterventorOriginal:[],\n    personasContratistaOriginal:[],\n    personasResponsableOriginal:[],\n    clauses:[],\n    causals:[],\n    types_request:[],\n    request_data:{}\n  },\n  actions: {\n    loadData({commit}) {\n      axios.get(API_IP+\"/person/\").then(response => {\n        var personas=[]\n        for (var k in response.data.data){\n          var person = {}\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n          personas.push(person);\n        }\n        commit('loadPersonas',personas);\n        axios.get(API_IP+\"/person/\",{params:\"profesor\"}).then(response => {\n          var profesores=[]\n          for (var k in response.data.data){\n            var profesor = {}\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n            profesores.push(profesor);\n          }\n          commit('loadProfesores',profesores);\n          axios.get(API_IP+\"/person/\",{params:\"contratista\"}).then(response => {\n            var contratistas=[]\n            for (var k in response.data.data){\n              var contratista = {}\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n              contratistas.push(contratista);\n            }\n            commit('loadContratistas',contratistas);\n            axios.get(API_IP+\"/person/\",{params:\"planta\"}).then(response => {\n              var plantas=[]\n              for (var k in response.data.data){\n                var planta = {}\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n                plantas.push(planta);\n              }\n              commit('loadPlanta',plantas);\n              axios\n              .get(API_IP+\"/clause/\").then(response => {\n                var clauses=[]\n                for (var k in response.data.data){\n                  var clause = {}\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"nombre\"] = response.data.data[k].nombre\n                  clauses.push(clause);\n                }\n                axios\n                .get(API_IP+'/request/'+router.currentRoute.params.id)\n                .then(response => {\n                  let request_data=response.data.data\n                  for(var k in request_data.trabajadores){\n                    let trabajador={}\n                    if (request_data.trabajadores[k].tipo == \"Interventor\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadInterventor', trabajador)\n                    } else if(request_data.trabajadores[k].tipo == \"Contratista\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadContratista', trabajador)\n                    } else if (request_data.trabajadores[k].tipo == \"Responsable\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadResponsable', trabajador)\n                    }\n                  }\n                  commit('loadRequestData',response.data.data);\n                  commit('loadClauses',clauses);\n                  axios\n                  .get(API_IP+\"/causalSelection/\").then(response => {\n                    var causals=[]\n                    for (var k in response.data.data){\n                      var causal= {}\n                      causal[\"_id\"] = response.data.data[k]._id;\n                      causal[\"nombre\"] = response.data.data[k].nombre\n                      causals.push(causal);\n                    }\n                    commit('loadCausals',causals)\n                    axios\n                    .get(API_IP+\"/requesttype/\").then(response => {\n                      var types_request=[]\n                      for (var k in response.data.data){\n                        var type= {}\n                        type[\"_id\"] = response.data.data[k]._id;\n                        type[\"nombre\"] = response.data.data[k].nombre;\n                        types_request.push(type);\n                      }\n                      commit('loadTypesRequest',types_request)\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    },\n    updateValueXAction({commit},valuex){\n      commit('updateValuex',valuex)\n    },\n    updateValueYAction({commit},valuey){\n      commit('updateValuey',valuey)\n    },\n    updatePersonasInterventorAction({commit},interventorStore){\n      commit('updatePersonasInterventor',interventorStore)\n    },\n    updatePersonasContratistaAction({commit},contratistaStore){\n      commit('updatePersonasContratista',contratistaStore)\n    },\n    updatePersonasResponsableAction({commit},responsableStore){\n      commit('updatePersonasCargo',responsableStore)\n    }\n  },\n  getters:{\n    getRequestData: (state) => {\n      return state.request_data\n    }\n  },\n  mutations:{\n    loadInterventor(state,interventor){\n      state.interventorStore=interventor\n    },\n    loadContratista(state,contratista){\n      state.contratistaStore=contratista\n    },\n    loadResponsable(state,responsable){\n      state.responsableStore=responsable\n    },\n    loadProfesores(state,profesores){\n      state.profesores=profesores\n    },\n    loadContratistas(state,contratistas){\n      state.contratistas=contratistas\n    },\n    loadPlanta(state,planta){\n      state.planta=planta\n      state.personasInterventorOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal=state.contratistas;\n      state.personasResponsableOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasInterventor=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista=state.contratistas;\n      state.personasResponsable=state.profesores.concat(state.contratistas).concat(state.planta);\n    },\n    loadClauses(state,clauses){\n      state.clauses=clauses;\n    },\n    loadCausals(state,causals){\n      state.causals=causals;\n    },\n    loadRequestData(state,request_data){\n      state.request_data=request_data\n    },\n    loadTypesRequest(state,types_request){\n      state.types_request=types_request;\n    },\n    loadPersonas(state,personas){\n      state.allpersonas=personas;\n      state.personasInterventor=personas;\n      state.personasContratista=personas;\n    },\n    updatePersonasInterventor(state,interventorStore){\n      state.interventorStore=((interventorStore != null) ? interventorStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n    updatePersonasContratista(state,contratistaStore){\n      state.contratistaStore=((contratistaStore != null) ? contratistaStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n    updatePersonasCargo(state,responsableStore){\n      state.responsableStore=((responsableStore != null) ? responsableStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  store,\n  components: {\n    Multiselect,\n    'create-person': CreatePerson,\n    'create-clause': CreateClause\n  },\n  data () {\n    return {\n      interventoresSelect:\"\",\n      contratistasSelect:\"\",\n      request_number: \"\",\n      interventor:{},\n      contratista:{},\n      person_charge:{},\n      start_request_date:\"\",\n      end_request_date:\"\",\n      total_days:\"\",\n      causal: {},\n      clausulas: [],\n      clausulas_request:[],\n      message:\"\",\n      tipo_solicitud:\"\",\n      trabajadores:[],\n      step: this.stp,\n      modal_show: false,\n      submitting: false,\n      correct_date: false\n    }\n  },\n  validations: {\n    tipo_solicitud:{required}, interventor:{required}, contratista:{required}, clausulas:{required},\n    start_request_date:{required}, end_request_date:{required},\n    causal:{required}\n  },\n  computed:{\n    ...mapGetters(['getRequestData']),\n    ...mapState(['personasInterventorOriginal','personasContratistaOriginal','personasResponsableOriginal','allpersonas','personasInterventor','valuex','valuey','contratistaStore','interventorStore','personasContratista','clauses','causals','types_request','personasResponsable','responsableStore','request_data'])\n  },\n  watch: {\n    interventorStore(){\n      this.interventor=this.$store.state.interventorStore\n      this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n    },\n    contratistaStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.contratista=this.$store.state.contratistaStore\n    },\n    responsableStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.person_charge=this.$store.state.responsableStore\n    },\n    getRequestData(requestData){\n      this.tipo_solicitud = requestData.tipo_solicitud\n      this.start_request_date= requestData.fecha_inicio.substring(0,10)\n      this.end_request_date = requestData.fecha_final.substring(0,10)\n      // Funcion para calcular el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays+1;\n      this.causal= requestData.causal_seleccion\n      this.clausulas = requestData.clausulas\n      // Parametros usados en el padre\n      this.request_id = requestData._id\n      this.request_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()+\"/\"+requestData._id\n      this.request_type_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = requestData.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      // Parametros necesarios para el update genera\n      this.request_auditoria = requestData.auditoria\n      this.request_state = requestData.estado\n      this.request_number = requestData.numero_solicitud\n      this.request_value = requestData.valor_solicitud\n      this.$emit('request_value', this.request_value)\n      // if(requestData.ciudad._id !== undefined && requestData.ciudad._id !== null){\n      //   this.request_city = requestData.ciudad._id\n      // }\n      this.request_justification = requestData.justificacion\n      this.request_aditional_justification = requestData.justificacion_adicional\n      this.request_objetivo = requestData.objetivo_general\n      this.request_obligations = requestData.obligaciones_especificas\n      this.request_especifications = requestData.especificaciones_tecnicas\n      this.request_budget = requestData.rubros\n      this.payment_amount = requestData.cantidad_pagos\n      this.payment_type = requestData.tipo_pago\n    }\n  },\n  methods:{\n    ...mapActions(['getPersonas','updatePersonasInterventorAction','updatePersonasContratistaAction','updatePersonasResponsableAction']),\n    changeEndRequestDate(){\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      if (sd > ed) {\n        this.correct_date = true\n        this.total_days=0;\n      } else {\n        this.correct_date = false\n        sd.setDate(sd.getDate()+1)\n        ed.setDate(ed.getDate()+1)\n        var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n        this.total_days=differentDays+1;\n      }\n      this.changeTotalDays();\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        for(var k in this.clausulas){\n          this.clausulas_request.push(this.clausulas[k]._id)\n        }\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          tipo_solicitud: this.tipo_solicitud._id,\n          trabajadores: [\n            {\n              persona:this.contratista._id,tipo:\"Contratista\"\n            },\n            {\n              persona:this.interventor._id,tipo:\"Interventor\"\n            },\n            {\n              persona:this.person_charge._id,tipo:\"Responsable\"\n            }\n          ],\n          fecha_inicio:this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion:this.causal._id,\n          clausulas:this.clausulas_request,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          estado:this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud:this.request_value,\n          ciudad: this.request_city,\n          justificacion:this.request_justification,\n          justificacion_adicional:this.request_aditional_justification,\n          objetivo_general:this.request_objetivo,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.step++\n              this.$emit('nextStep', this.step)\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    },\n    showModalCreateClause () {\n      this.modal_show = false;\n      this.$modal.show('create-clause');\n    },\n    closeModalCreateClause (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-clause');\n        location.reload();\n      }\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n",{"version":3,"sources":["UpdateRequestA.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+LA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateRequestA.vue","sourceRoot":"src/components/requests/update","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:50px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <modal name=\"create-person\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n          <create-person\n          :hide_modal=\"modal_show\"\n          @modalShow=\"closeModalCreatePerson\"\n          ></create-person>\n        </modal>\n        <modal name=\"create-clause\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n          <create-clause\n          :hide_modal=\"modal_show\"\n          @modalShow=\"closeModalCreateClause\"\n          ></create-clause>\n        </modal>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_solicitud.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"request_type\">Seleccione tipo de solicitud:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <input type=\"text\" class=\"form-control\" id=\"request_type\" aria-describedby=\"request_type\" :placeholder=\"tipo_solicitud.nombre\" disabled>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_solicitud.$dirty && !$v.tipo_solicitud.required\">Es requerido un tipo de solicitud</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"request_type\">Número de solicitud:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <input v-model=\"request_number\" type=\"text\" class=\"form-control\" id=\"request_type\" aria-describedby=\"request_type\" placeholder=\"Número\">\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.interventor.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Seleccione interventor:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"\" v-model.trim=\"$v.interventor.$model\" :options=\"personasInterventor\" :value=\"interventorStore\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\"  @input=\"updatePersonasInterventorAction\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.interventor.$dirty && !$v.interventor.required\">Es requerido un interventor</div>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.contratista.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"contratistas\">Seleccione contratista:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"box2\" v-model.trim=\"$v.contratista.$model\" :options=\"personasContratista\" :value=\"contratistaStore\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasContratistaAction\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.contratista.$dirty && !$v.contratista.required\">Es requerido un contratista</div>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Plazo </h3>\n              <div>&nbsp;</div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <label for=\"startDate\">Fecha inicio:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.start_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.start_request_date.$model\" class=\"form-control\" id=\"startDate\" aria-describedby=\"startDate\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.start_request_date.$dirty && !$v.start_request_date.required\">Es requerida una fecha de inicio</div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <label for=\"endDate\">Fecha final:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.end_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.end_request_date.$model\" class=\"form-control\" id=\"endDate\" aria-describedby=\"endDate\" @input=\"changeEndRequestDate\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.end_request_date.$dirty && !$v.end_request_date.required\">Es requerida una fecha final</div>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"correct_date\">La fecha final no puede ser menor a la fecha de inicio</div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"form-group\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"totalDays\">Total en dias:</label>\n                  </div>\n                  <div class=\"col-5\">\n                    <input type=\"text\" v-model=\"total_days\" class=\"form-control\" id=\"totalDays\" aria-describedby=\"totalDays\" placeholder=\"Total\" disabled>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.causal.$error }\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"selectionCausal\">Causal de selección:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model.trim=\"$v.causal.$model\" :options=\"causals\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Causal\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.causal.$dirty && !$v.causal.required\">Es requerido un causal de selección</div>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Clausulas adicionales (marcar) </h3>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.clausulas.$error }\">\n                    <multiselect v-model.trim=\"$v.clausulas.$model\" :options=\"clauses\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Escoja las clausulas\" label=\"nombre\" track-by=\"_id\" :preselect-first=\"false\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.clausulas.$dirty && !$v.clausulas.required\">Es requerida al menos una clausula</div>\n                  </div>\n                </div>\n                <div class=\"col-auto\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreateClause()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"plus\" size=\"lg\"></font-awesome-icon>\n                    Adicionar otras\n                  </button>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <h3 style=\"color:#003e1e; text-align:center;\"> Si tiene clausula de responsabilidad de bienes por favor seleccione el responsable de los bienes </h3>\n              <div>&nbsp;</div>\n              <div class=\"form-group\" >\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Personas a cargo:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model=\"person_charge\" :options=\"personasResponsable\" track-by=\"_id\" label=\"nombre\" :value=\"responsableStore\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasResponsableAction\">\n                    </multiselect>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"correct_date || submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                    Guardar y continuar\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                    Cancelar\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../../persons/CreatePersonModal.vue'\nimport CreateClause from '../../clauses/CreateClauseModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nconst { mapActions, mapState ,mapGetters } = Vuex\n\nimport router from '../../../router'\n\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    profesores:[],\n    contratistas:[],\n    planta:[],\n    interventorStore:{},\n    contratistaStore:{},\n    responsableStore:{},\n    valuex:\"\",\n    valuey:\"\",\n    allpersonas:[],\n    personasInterventor:[],\n    personasContratista:[],\n    personasResponsable:[],\n    personasInterventorOriginal:[],\n    personasContratistaOriginal:[],\n    personasResponsableOriginal:[],\n    clauses:[],\n    causals:[],\n    types_request:[],\n    request_data:{}\n  },\n  actions: {\n    loadData({commit}) {\n      axios.get(API_IP+\"/person/\").then(response => {\n        var personas=[]\n        for (var k in response.data.data){\n          var person = {}\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n          personas.push(person);\n        }\n        commit('loadPersonas',personas);\n        axios.get(API_IP+\"/person/\",{params:\"profesor\"}).then(response => {\n          var profesores=[]\n          for (var k in response.data.data){\n            var profesor = {}\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n            profesores.push(profesor);\n          }\n          commit('loadProfesores',profesores);\n          axios.get(API_IP+\"/person/\",{params:\"contratista\"}).then(response => {\n            var contratistas=[]\n            for (var k in response.data.data){\n              var contratista = {}\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n              contratistas.push(contratista);\n            }\n            commit('loadContratistas',contratistas);\n            axios.get(API_IP+\"/person/\",{params:\"planta\"}).then(response => {\n              var plantas=[]\n              for (var k in response.data.data){\n                var planta = {}\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n                plantas.push(planta);\n              }\n              commit('loadPlanta',plantas);\n              axios\n              .get(API_IP+\"/clause/\").then(response => {\n                var clauses=[]\n                for (var k in response.data.data){\n                  var clause = {}\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"nombre\"] = response.data.data[k].nombre\n                  clauses.push(clause);\n                }\n                axios\n                .get(API_IP+'/request/'+router.currentRoute.params.id)\n                .then(response => {\n                  let request_data=response.data.data\n                  for(var k in request_data.trabajadores){\n                    let trabajador={}\n                    if (request_data.trabajadores[k].tipo == \"Interventor\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadInterventor', trabajador)\n                    } else if(request_data.trabajadores[k].tipo == \"Contratista\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadContratista', trabajador)\n                    } else if (request_data.trabajadores[k].tipo == \"Responsable\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.segundo_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido+\" \"+request_data.trabajadores[k].persona.segundo_apellido\n                      commit('loadResponsable', trabajador)\n                    }\n                  }\n                  commit('loadRequestData',response.data.data);\n                  commit('loadClauses',clauses);\n                  axios\n                  .get(API_IP+\"/causalSelection/\").then(response => {\n                    var causals=[]\n                    for (var k in response.data.data){\n                      var causal= {}\n                      causal[\"_id\"] = response.data.data[k]._id;\n                      causal[\"nombre\"] = response.data.data[k].nombre\n                      causals.push(causal);\n                    }\n                    commit('loadCausals',causals)\n                    axios\n                    .get(API_IP+\"/requesttype/\").then(response => {\n                      var types_request=[]\n                      for (var k in response.data.data){\n                        var type= {}\n                        type[\"_id\"] = response.data.data[k]._id;\n                        type[\"nombre\"] = response.data.data[k].nombre;\n                        types_request.push(type);\n                      }\n                      commit('loadTypesRequest',types_request)\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    },\n    updateValueXAction({commit},valuex){\n      commit('updateValuex',valuex)\n    },\n    updateValueYAction({commit},valuey){\n      commit('updateValuey',valuey)\n    },\n    updatePersonasInterventorAction({commit},interventorStore){\n      commit('updatePersonasInterventor',interventorStore)\n    },\n    updatePersonasContratistaAction({commit},contratistaStore){\n      commit('updatePersonasContratista',contratistaStore)\n    },\n    updatePersonasResponsableAction({commit},responsableStore){\n      commit('updatePersonasCargo',responsableStore)\n    }\n  },\n  getters:{\n    getRequestData: (state) => {\n      return state.request_data\n    }\n  },\n  mutations:{\n    loadInterventor(state,interventor){\n      state.interventorStore=interventor\n    },\n    loadContratista(state,contratista){\n      state.contratistaStore=contratista\n    },\n    loadResponsable(state,responsable){\n      state.responsableStore=responsable\n    },\n    loadProfesores(state,profesores){\n      state.profesores=profesores\n    },\n    loadContratistas(state,contratistas){\n      state.contratistas=contratistas\n    },\n    loadPlanta(state,planta){\n      state.planta=planta\n      state.personasInterventorOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal=state.contratistas;\n      state.personasResponsableOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasInterventor=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista=state.contratistas;\n      state.personasResponsable=state.profesores.concat(state.contratistas).concat(state.planta);\n    },\n    loadClauses(state,clauses){\n      state.clauses=clauses;\n    },\n    loadCausals(state,causals){\n      state.causals=causals;\n    },\n    loadRequestData(state,request_data){\n      state.request_data=request_data\n    },\n    loadTypesRequest(state,types_request){\n      state.types_request=types_request;\n    },\n    loadPersonas(state,personas){\n      state.allpersonas=personas;\n      state.personasInterventor=personas;\n      state.personasContratista=personas;\n    },\n    updatePersonasInterventor(state,interventorStore){\n      state.interventorStore=((interventorStore != null) ? interventorStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n    updatePersonasContratista(state,contratistaStore){\n      state.contratistaStore=((contratistaStore != null) ? contratistaStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n    updatePersonasCargo(state,responsableStore){\n      state.responsableStore=((responsableStore != null) ? responsableStore : \"\")\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  store,\n  components: {\n    Multiselect,\n    'create-person': CreatePerson,\n    'create-clause': CreateClause\n  },\n  data () {\n    return {\n      interventoresSelect:\"\",\n      contratistasSelect:\"\",\n      request_number: \"\",\n      interventor:{},\n      contratista:{},\n      person_charge:{},\n      start_request_date:\"\",\n      end_request_date:\"\",\n      total_days:\"\",\n      causal: {},\n      clausulas: [],\n      clausulas_request:[],\n      message:\"\",\n      tipo_solicitud:\"\",\n      trabajadores:[],\n      step: this.stp,\n      modal_show: false,\n      submitting: false,\n      correct_date: false\n    }\n  },\n  validations: {\n    tipo_solicitud:{required}, interventor:{required}, contratista:{required}, clausulas:{required},\n    start_request_date:{required}, end_request_date:{required},\n    causal:{required}\n  },\n  computed:{\n    ...mapGetters(['getRequestData']),\n    ...mapState(['personasInterventorOriginal','personasContratistaOriginal','personasResponsableOriginal','allpersonas','personasInterventor','valuex','valuey','contratistaStore','interventorStore','personasContratista','clauses','causals','types_request','personasResponsable','responsableStore','request_data'])\n  },\n  watch: {\n    interventorStore(){\n      this.interventor=this.$store.state.interventorStore\n      this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n    },\n    contratistaStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.contratista=this.$store.state.contratistaStore\n    },\n    responsableStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.person_charge=this.$store.state.responsableStore\n    },\n    getRequestData(requestData){\n      this.tipo_solicitud = requestData.tipo_solicitud\n      this.start_request_date= requestData.fecha_inicio.substring(0,10)\n      this.end_request_date = requestData.fecha_final.substring(0,10)\n      // Funcion para calcular el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays+1;\n      this.causal= requestData.causal_seleccion\n      this.clausulas = requestData.clausulas\n      // Parametros usados en el padre\n      this.request_id = requestData._id\n      this.request_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()+\"/\"+requestData._id\n      this.request_type_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = requestData.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      // Parametros necesarios para el update genera\n      this.request_auditoria = requestData.auditoria\n      this.request_state = requestData.estado\n      this.request_number = requestData.numero_solicitud\n      this.request_value = requestData.valor_solicitud\n      this.$emit('request_value', this.request_value)\n      // if(requestData.ciudad._id !== undefined && requestData.ciudad._id !== null){\n      //   this.request_city = requestData.ciudad._id\n      // }\n      this.request_justification = requestData.justificacion\n      this.request_aditional_justification = requestData.justificacion_adicional\n      this.request_objetivo = requestData.objetivo_general\n      this.request_obligations = requestData.obligaciones_especificas\n      this.request_especifications = requestData.especificaciones_tecnicas\n      this.request_budget = requestData.rubros\n      this.payment_amount = requestData.cantidad_pagos\n      this.payment_type = requestData.tipo_pago\n    }\n  },\n  methods:{\n    ...mapActions(['getPersonas','updatePersonasInterventorAction','updatePersonasContratistaAction','updatePersonasResponsableAction']),\n    changeEndRequestDate(){\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      if (sd > ed) {\n        this.correct_date = true\n        this.total_days=0;\n      } else {\n        this.correct_date = false\n        sd.setDate(sd.getDate()+1)\n        ed.setDate(ed.getDate()+1)\n        var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n        this.total_days=differentDays+1;\n      }\n      this.changeTotalDays();\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        for(var k in this.clausulas){\n          this.clausulas_request.push(this.clausulas[k]._id)\n        }\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          tipo_solicitud: this.tipo_solicitud._id,\n          trabajadores: [\n            {\n              persona:this.contratista._id,tipo:\"Contratista\"\n            },\n            {\n              persona:this.interventor._id,tipo:\"Interventor\"\n            },\n            {\n              persona:this.person_charge._id,tipo:\"Responsable\"\n            }\n          ],\n          fecha_inicio:this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion:this.causal._id,\n          clausulas:this.clausulas_request,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          estado:this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud:this.request_value,\n          ciudad: this.request_city,\n          justificacion:this.request_justification,\n          justificacion_adicional:this.request_aditional_justification,\n          objetivo_general:this.request_objetivo,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.step++\n              this.$emit('nextStep', this.step)\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    },\n    showModalCreateClause () {\n      this.modal_show = false;\n      this.$modal.show('create-clause');\n    },\n    closeModalCreateClause (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-clause');\n        location.reload();\n      }\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n</script>\n"]}]}