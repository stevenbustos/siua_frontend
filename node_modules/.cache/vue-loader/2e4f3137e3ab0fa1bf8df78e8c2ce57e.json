{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/users/UpdateUser.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/users/UpdateUser.vue","mtime":1546539567538},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      dependencies: [],\n      roles: [],\n      cities: [],\n      document_types : [] ,\n      user_auditoria : {},\n      user_id : \"\",\n      user_person_auditoria: {},\n      user_person_id: \"\",\n      name_1: \"\", name_2: \"\",\n      lastname_1: \"\", lastname_2: \"\",\n      document_type: \"\", document_number: \"\",\n      city: \"\", address: \"\",\n      phone: \"\", mobil_phone: \"\", extension: \"\",\n      user_name: \"\", email: \"\", start_date: \"\", end_date: \"\",\n      dependence: {}, user_roles: [], user_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    dependence: { required }, document_number: { required }, document_type: { required },\n    name_1: { required }, name_2: { required }, lastname_1: { required },\n    lastname_2: { required }, email: { required }, city: { required },\n    address: { required }, phone: { required }, mobil_phone: { required },\n    extension: { required }, user_roles: { required }, user_name: { required },\n    end_date: { required }, start_date: { required }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/documentType')\n    .then(response => {\n      for (var k in response.data.data){\n        var doc = {}\n        doc[\"_id\"] = response.data.data[k]._id;\n        doc[\"name\"] = response.data.data[k].nombre;\n        this.document_types.push(doc);\n      }\n      axios\n      .get(API_IP+'/city')\n      .then(response => {\n        for (var k in response.data.data){\n          var city = {}\n          city[\"_id\"] = response.data.data[k]._id;\n          city[\"name\"] = response.data.data[k].nombre;\n          this.cities.push(city);\n        }\n        axios\n        .get(API_IP+'/dependence')\n        .then(response => {\n          for (var k in response.data.data){\n            var dependence = {}\n            dependence[\"_id\"] = response.data.data[k]._id;\n            dependence[\"name\"] = response.data.data[k].nombre;\n            this.dependencies.push(dependence);\n          }\n          axios\n          .get(API_IP+'/rol')\n          .then(response => {\n            for (var k in response.data.data){\n              var rol = {}\n              if(response.data.data[k].activo == true ){\n                rol[\"_id\"] = response.data.data[k]._id;\n                rol[\"name\"] = response.data.data[k].nombre;\n                this.roles.push(rol);\n              }\n            }\n          });\n        });\n      });\n    });\n    axios\n    .get(API_IP+'/user/'+this.$route.params.id)\n    .then(response => {\n      this.user_auditoria = response.data.data.auditoria\n      this.user_id = response.data.data._id\n      this.user_person_auditoria = response.data.data.persona.auditoria\n      this.user_person_id = response.data.data.persona._id\n      this.name_1 = response.data.data.persona.primer_nombre\n      this.name_2 = response.data.data.persona.segundo_nombre\n      this.lastname_1 = response.data.data.persona.primer_apellido\n      this.lastname_2 = response.data.data.persona.segundo_apellido\n      this.document_type = {\n        \"name\": response.data.data.persona.tipo_documento.nombre,\n        \"_id\": response.data.data.persona.tipo_documento._id\n      }\n      this.document_number = response.data.data.persona.numero_documento\n      this.city = {\n        \"name\" : response.data.data.persona.ciudad.nombre,\n        \"_id\": response.data.data.persona.ciudad._id\n      }\n      this.address = response.data.data.persona.direccion\n      this.phone = response.data.data.persona.telefono\n      this.mobil_phone = response.data.data.persona.celular\n      this.extension = response.data.data.persona.extension\n      this.user_name = response.data.data.nombre_usuario\n      this.email = response.data.data.persona.correo_electronico\n      this.start_date = response.data.data.fecha_inicio_contrato.substring(0,10)\n      this.end_date = response.data.data.fecha_fin_contrato.substring(0,10)\n      this.dependence = {\n        \"name\" : response.data.data.persona.dependencia.nombre,\n        \"_id\" : response.data.data.persona.dependencia._id\n      }\n      this.user_url = \"/usuarios/\"+response.data.data._id\n      for(var k in response.data.data.roles){\n        var rol = {}\n        rol[\"_id\"] = response.data.data.roles[k]._id\n        rol[\"name\"] = response.data.data.roles[k].nombre\n        this.user_roles.push(rol)\n      }\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        var person = {\n          \"auditoria\" : this.user_person_auditoria,\n          \"_id\" : this.user_person_id,\n          \"dependencia\" : this.dependence,\n          \"numero_documento\" : this.document_number,\n          \"tipo_documento\" : this.document_type,\n          \"primer_nombre\" : this.name_1,\n          \"segundo_nombre\" : this.name_2,\n          \"primer_apellido\" : this.lastname_1,\n          \"segundo_apellido\" : this.lastname_2,\n          \"correo_electronico\" : this.email,\n          \"ciudad\" : this.city,\n          \"direccion\" : this.address,\n          \"telefono\" : this.phone,\n          \"extension\" : this.mobil_phone,\n          \"celular\" : this.extension\n        }\n        axios\n        .put(API_IP+\"/user/\"+this.$route.params.id, {\n          auditoria: this.user_auditoria,\n          roles: this.user_roles ,\n          _id: this.user_id,\n          nombre_usuario: this.user_name,\n          fecha_fin_contrato: this.end_date,\n          fecha_inicio_contrato: this.start_date,\n          persona: person\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el usuario satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showuser', params: { id: this.user_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'users' });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["UpdateUser.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"UpdateUser.vue","sourceRoot":"src/components/users","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/usuarios\">Usuarios</a></li>\n            <li class=\"breadcrumb-item\"><a v-bind:href=\"user_url\">{{user_name}}</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Actualizar Usuario</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div>\n                  <label for=\"personName\">Nombres del funcionario:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.name_1.$error }\">\n                        <input v-model.trim=\"$v.name_1.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Primer Nombre\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.name_1.$dirty && !$v.name_1.required\">Es requerido un primer nombre</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.name_2.$error }\">\n                        <input v-model.trim=\"$v.name_2.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Segundo Nombre\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.name_2.$dirty && !$v.name_2.required\">Es requerido un segundo nombre</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <label for=\"personName\">Apellidos del funcionario:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.lastname_1.$error }\">\n                        <input v-model.trim=\"$v.lastname_1.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Primer Apellido\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.lastname_1.$dirty && !$v.lastname_1.required\">Es requerido un primer apellido</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.lastname_2.$error }\">\n                        <input v-model.trim=\"$v.lastname_2.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Segundo Apellido\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.lastname_2.$dirty && !$v.lastname_2.required\">Es requerido un segundo apellido</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.document_type.$error }\">\n                  <label for=\"documentType\">Tipo de documento:</label>\n                  <multiselect v-model.trim=\"$v.document_type.$model\" :options=\"document_types\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un tipo de documento\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.document_type.$dirty && !$v.document_type.required\">Es requerido un tipo de documento</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.document_number.$error }\">\n                  <label for=\"documentType\">Numero de documento:</label>\n                  <input v-model.trim=\"$v.document_number.$model\" type=\"number\" class=\"form-control\" id=\"documentNumber\" aria-describedby=\"documentNumber\" placeholder=\"Numero\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.document_number.$dirty && !$v.document_number.required\">Es requerido un numero de documento</div>\n                </div>\n                <div>\n                  <label for=\"location\">Dirección:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.city.$error }\">\n                        <multiselect v-model.trim=\"$v.city.$model\" :options=\"cities\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja una ciudad\">\n                        </multiselect>\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.city.$dirty && !$v.city.required\">Es requerida una ciudad</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.address.$error }\">\n                        <input type=\"text\" v-model.trim=\"$v.address.$model\" class=\"form-control\" id=\"userAddress\" aria-describedby=\"userAddress\" placeholder=\"Dirección\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.address.$dirty && !$v.address.required\">Es requerida una dirección</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <label for=\"contact\">Contacto:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.phone.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.phone.$model\" class=\"form-control\" id=\"userPhone\" aria-describedby=\"userPhone\" placeholder=\"Teléfono\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.phone.$dirty && !$v.phone.required\">Es requerido un numero de teléfono</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.mobil_phone.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.mobil_phone.$model\" class=\"form-control\" id=\"userMobil\" aria-describedby=\"userMobil\" placeholder=\"Celular\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.mobil_phone.$dirty && !$v.mobil_phone.required\">Es requerido un numero de celular</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.extension.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.extension.$model\" class=\"form-control\" id=\"userExtension\" aria-describedby=\"userExtension\" placeholder=\"Extensión\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.extension.$dirty && !$v.extension.required\">Es requerido un numero de extensión</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.user_name.$error }\">\n                  <label for=\"username\">Usuario:</label>\n                  <input type=\"text\" v-model.trim=\"$v.user_name.$model\" class=\"form-control\" id=\"username\" aria-describedby=\"siaUsername\" placeholder=\"Usuario del funcionario en el sistema\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.user_name.$dirty && !$v.user_name.required\">Es requerido un nombre de usuario</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.email.$error }\">\n                  <label for=\"userEmail\">Correo</label>\n                  <input type=\"email\" v-model.trim=\"$v.email.$model\" class=\"form-control\" id=\"userEmail\" aria-describedby=\"userEmail\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.email.$dirty && !$v.email.required\">Es requerido un correo</div>\n                </div>\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.start_date.$error }\">\n                      <label for=\"contractStartDate\">Fecha inicio contrato:</label>\n                      <input type=\"date\" v-model.trim=\"$v.start_date.$model\" class=\"form-control\" id=\"contractStartDate\" aria-describedby=\"contractStartDate\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.start_date.$dirty && !$v.start_date.required\">Es requerida la fecha de inicio de contrato</div>\n                    </div>\n                  </div>\n                  <div class=\"col\">\n                    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.email.$error }\">\n                      <label for=\"contractEndDate\">Fecha culminación contrato:</label>\n                      <input type=\"date\" v-model=\"end_date\" class=\"form-control\" id=\"contractEndDate\" aria-describedby=\"contractEndDate\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.email.$dirty && !$v.email.required\">Es requerida la fecha de finalización de contrato</div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.dependence.$error }\">\n                  <label for=\"userDependency\">Dependencia:</label>\n                  <multiselect v-model.trim=\"$v.dependence.$model\" :options=\"dependencies\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja una dependencia\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.dependence.$dirty && !$v.dependence.required\">Es requerido una dependencia</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.user_roles.$error }\">\n                  <label for=\"userRol\">Rol:</label>\n                  <multiselect v-model.trim=\"$v.user_roles.$model\" :options=\"roles\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los roles del usuario\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.user_roles.$dirty && !$v.user_roles.required\">Es requerido minímo un rol</div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Guardar\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-8 text-center\">\n                    <button class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"unlock\" size=\"lg\"></font-awesome-icon>\n                      Reestablecer contraseña\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      dependencies: [],\n      roles: [],\n      cities: [],\n      document_types : [] ,\n      user_auditoria : {},\n      user_id : \"\",\n      user_person_auditoria: {},\n      user_person_id: \"\",\n      name_1: \"\", name_2: \"\",\n      lastname_1: \"\", lastname_2: \"\",\n      document_type: \"\", document_number: \"\",\n      city: \"\", address: \"\",\n      phone: \"\", mobil_phone: \"\", extension: \"\",\n      user_name: \"\", email: \"\", start_date: \"\", end_date: \"\",\n      dependence: {}, user_roles: [], user_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    dependence: { required }, document_number: { required }, document_type: { required },\n    name_1: { required }, name_2: { required }, lastname_1: { required },\n    lastname_2: { required }, email: { required }, city: { required },\n    address: { required }, phone: { required }, mobil_phone: { required },\n    extension: { required }, user_roles: { required }, user_name: { required },\n    end_date: { required }, start_date: { required }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/documentType')\n    .then(response => {\n      for (var k in response.data.data){\n        var doc = {}\n        doc[\"_id\"] = response.data.data[k]._id;\n        doc[\"name\"] = response.data.data[k].nombre;\n        this.document_types.push(doc);\n      }\n      axios\n      .get(API_IP+'/city')\n      .then(response => {\n        for (var k in response.data.data){\n          var city = {}\n          city[\"_id\"] = response.data.data[k]._id;\n          city[\"name\"] = response.data.data[k].nombre;\n          this.cities.push(city);\n        }\n        axios\n        .get(API_IP+'/dependence')\n        .then(response => {\n          for (var k in response.data.data){\n            var dependence = {}\n            dependence[\"_id\"] = response.data.data[k]._id;\n            dependence[\"name\"] = response.data.data[k].nombre;\n            this.dependencies.push(dependence);\n          }\n          axios\n          .get(API_IP+'/rol')\n          .then(response => {\n            for (var k in response.data.data){\n              var rol = {}\n              if(response.data.data[k].activo == true ){\n                rol[\"_id\"] = response.data.data[k]._id;\n                rol[\"name\"] = response.data.data[k].nombre;\n                this.roles.push(rol);\n              }\n            }\n          });\n        });\n      });\n    });\n    axios\n    .get(API_IP+'/user/'+this.$route.params.id)\n    .then(response => {\n      this.user_auditoria = response.data.data.auditoria\n      this.user_id = response.data.data._id\n      this.user_person_auditoria = response.data.data.persona.auditoria\n      this.user_person_id = response.data.data.persona._id\n      this.name_1 = response.data.data.persona.primer_nombre\n      this.name_2 = response.data.data.persona.segundo_nombre\n      this.lastname_1 = response.data.data.persona.primer_apellido\n      this.lastname_2 = response.data.data.persona.segundo_apellido\n      this.document_type = {\n        \"name\": response.data.data.persona.tipo_documento.nombre,\n        \"_id\": response.data.data.persona.tipo_documento._id\n      }\n      this.document_number = response.data.data.persona.numero_documento\n      this.city = {\n        \"name\" : response.data.data.persona.ciudad.nombre,\n        \"_id\": response.data.data.persona.ciudad._id\n      }\n      this.address = response.data.data.persona.direccion\n      this.phone = response.data.data.persona.telefono\n      this.mobil_phone = response.data.data.persona.celular\n      this.extension = response.data.data.persona.extension\n      this.user_name = response.data.data.nombre_usuario\n      this.email = response.data.data.persona.correo_electronico\n      this.start_date = response.data.data.fecha_inicio_contrato.substring(0,10)\n      this.end_date = response.data.data.fecha_fin_contrato.substring(0,10)\n      this.dependence = {\n        \"name\" : response.data.data.persona.dependencia.nombre,\n        \"_id\" : response.data.data.persona.dependencia._id\n      }\n      this.user_url = \"/usuarios/\"+response.data.data._id\n      for(var k in response.data.data.roles){\n        var rol = {}\n        rol[\"_id\"] = response.data.data.roles[k]._id\n        rol[\"name\"] = response.data.data.roles[k].nombre\n        this.user_roles.push(rol)\n      }\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        var person = {\n          \"auditoria\" : this.user_person_auditoria,\n          \"_id\" : this.user_person_id,\n          \"dependencia\" : this.dependence,\n          \"numero_documento\" : this.document_number,\n          \"tipo_documento\" : this.document_type,\n          \"primer_nombre\" : this.name_1,\n          \"segundo_nombre\" : this.name_2,\n          \"primer_apellido\" : this.lastname_1,\n          \"segundo_apellido\" : this.lastname_2,\n          \"correo_electronico\" : this.email,\n          \"ciudad\" : this.city,\n          \"direccion\" : this.address,\n          \"telefono\" : this.phone,\n          \"extension\" : this.mobil_phone,\n          \"celular\" : this.extension\n        }\n        axios\n        .put(API_IP+\"/user/\"+this.$route.params.id, {\n          auditoria: this.user_auditoria,\n          roles: this.user_roles ,\n          _id: this.user_id,\n          nombre_usuario: this.user_name,\n          fecha_fin_contrato: this.end_date,\n          fecha_inicio_contrato: this.start_date,\n          persona: person\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el usuario satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showuser', params: { id: this.user_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'users' });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}