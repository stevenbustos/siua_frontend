{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue","mtime":1546444218000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      payment_types: [\"Fijo\", \"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      valor_solicitud: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: []\n    };\n  },\n  validations: {\n    tipo_pago: {\n      required: required\n    },\n    payment_number: {\n      required: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      }),\n      $each: {\n        fecha: {\n          required: required\n        },\n        valor: {\n          required: required\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(API_IP + '/request/' + this.$route.params.id).then(function (response) {\n      // Parametros necesarios en esta vista\n      _this.payment_number = response.data.data.cantidad_pagos, _this.tipo_pago = response.data.data.tipo_pago, // Necesarios para hacer el PUT\n      _this.justification = response.data.data.justificacion;\n      _this.aditional_justification = response.data.data.justificacion_adicional;\n      _this.general_objective = response.data.data.objetivo_general;\n      _this.place = response.data.data.ciudad; // Parametros necesarios para el update general\n\n      _this.tipo_solicitud = response.data.data.tipo_solicitud;\n      _this.trabajadores = response.data.data.trabajadores;\n      _this.start_request_date = response.data.data.fecha_inicio.substring(0, 10);\n      _this.end_request_date = response.data.data.fecha_final.substring(0, 10); //Funcion para el total de dias\n\n      var sd = new Date(_this.start_request_date);\n      var ed = new Date(_this.end_request_date);\n      sd.setDate(sd.getDate() + 1);\n      ed.setDate(ed.getDate() + 1);\n      var differentDays = Math.ceil(Math.abs(ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      _this.total_days = differentDays;\n      _this.causal = response.data.data.causal_seleccion;\n      _this.clausulas = response.data.data.clausulas;\n      _this.request_auditoria = response.data.data.auditoria;\n      _this.request_id = response.data.data._id;\n      _this.request_state = response.data.data.estado;\n      _this.request_number = response.data.data.numero_solicitud;\n      _this.valor_solicitud = response.data.data.valor_solicitud;\n      _this.request_obligations = response.data.data.obligaciones_especificas;\n      _this.request_especifications = response.data.data.especificaciones_tecnicas;\n      _this.request_budget = response.data.data.rubros;\n      _this.payment_amount = response.data.data.cantidad_pagos;\n      _this.payment_type = response.data.data.tipo_pago; // Parametros usados en el padre\n\n      _this.request_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase() + \"/\" + response.data.data._id;\n      _this.request_type_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase();\n      _this.request_type = response.data.data.tipo_solicitud.nombre;\n\n      _this.$emit('request_id', _this.request_id);\n\n      _this.$emit('request_url', _this.request_url);\n\n      _this.$emit('request_type', _this.request_type);\n\n      _this.$emit('request_type_url', _this.request_type_url);\n\n      axios.get(API_IP + \"/payment/\", {\n        params: _this.$route.params.id\n      }).then(function (response) {\n        for (var k in response.data) {\n          for (var j in response.data[k]) {\n            console.log(response.data[k][j]);\n            var payment = {};\n            payment[\"solicitud\"] = response.data[k][j].solicitud._id;\n            payment[\"valor\"] = response.data[k][j].valor;\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0, 10);\n            payment[\"numero\"] = response.data[k][j].numero; // payment[\"auditoria\"] = response.data[k][j].auditoria\n\n            payment[\"estado\"] = response.data[k][j].estado; // payment[\"planillas\"] = response.data[k][j].planillas\n\n            payment[\"_id\"] = response.data[k][j]._id;\n\n            _this.request_payments.push(payment);\n\n            _this.payments.push(payment);\n          }\n        }\n\n        _this.requestValueChange();\n      });\n    });\n  },\n  methods: {\n    requestValueChange: function requestValueChange() {\n      var _this2 = this;\n\n      if (this.value !== this.valor_solicitud) {\n        for (var k in this.request_payments) {\n          axios.delete(API_IP + '/payment/' + this.request_payments[k]._id).then(function (response) {\n            console.log(response);\n\n            _this2.$swal({\n              title: 'Atención!',\n              html: 'Como el valor de la solicitud cambio<br>Se borraron los pagos relacionados con la solicitud.',\n              type: 'success',\n              confirmButtonText: 'Aceptar'\n            });\n          }).catch(function (error) {\n            console.log(error);\n\n            _this2.$swal({\n              title: 'Error!',\n              text: error.response.data.msg,\n              type: 'error',\n              confirmButtonText: 'Cerrar'\n            });\n          });\n        }\n\n        this.payment_number = \"\", this.payments = [];\n      }\n    },\n    addPay: function addPay() {\n      this.payments = [];\n      var payment_value = this.valor_solicitud / this.payment_number;\n\n      if (this.tipo_pago == \"Variable\") {\n        payment_value = \"\";\n      }\n\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.request_id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i + 1\n        });\n      }\n    },\n    deletePayments: function deletePayments() {\n      var _this3 = this;\n\n      for (var k in this.request_payments) {\n        axios.delete(API_IP + '/payment/' + this.request_payments[k]._id).then(function (response) {\n          console.log(response);\n\n          _this3.$swal({\n            title: 'Exito!',\n            text: 'Se borraron los pagos correctamente',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this3.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        });\n      }\n    },\n    clearPayments: function clearPayments(tipo_pago) {\n      var _this4 = this;\n\n      if (tipo_pago == \"Variable\") {\n        this.$swal({\n          title: 'Espere!',\n          html: '¿Esta seguro que quiere cambiar el tipo de pago?<br>Al cambiar de fijo a variable se borraran los pagos ya creados de la solicitud',\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Si',\n          cancelButtonText: 'No'\n        }).then(function (result) {\n          if (result.value) {\n            _this4.deletePayments();\n\n            _this4.payment_number = \"\", _this4.payments = [];\n          } else {\n            _this4.tipo_pago = \"Fijo\";\n          }\n        });\n      }\n    },\n    saveContinue: function saveContinue() {\n      var _this5 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true; // Put a Solicitud\n\n        axios.put(API_IP + \"/request/\" + this.$route.params.id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          _id: this.request_id,\n          numero_solicitud: this.request_number,\n          tipo_solicitud: this.tipo_solicitud,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          valor_solicitud: this.valor_solicitud,\n          justificacion: this.justificacion,\n          justificacion_adicional: this.aditional_justification,\n          objetivo_general: this.general_objective,\n          especificaciones_tecnicas: this.request_especifications,\n          obligaciones_especificas: this.request_obligations,\n          rubros: this.request_budget,\n          trabajadores: this.trabajadores,\n          ciudad: this.place\n        }).then(function (response) {\n          console.log(response);\n\n          _this5.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              _this5.deletePayments();\n\n              if (_this5.tipo_pago === 'Fijo') {\n                // Post a pagos\n                axios.post(API_IP + \"/payment/\", _this5.payments).then(function (response) {\n                  console.log(response);\n                  _this5.submitting = false;\n\n                  _this5.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then(function (result) {\n                    if (result.value) {\n                      _this5.$router.push({\n                        name: 'showrequest',\n                        params: {\n                          type: _this5.tipo_solicitud.nombre.toLowerCase(),\n                          id: _this5.request_id\n                        }\n                      });\n                    }\n                  });\n                }).catch(function (error) {\n                  console.log(error);\n\n                  _this5.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n\n                  _this5.submitting = false;\n                });\n              } else {\n                _this5.submitting = false;\n\n                _this5.$router.push({\n                  name: 'showrequest',\n                  params: {\n                    type: _this5.tipo_solicitud.nombre.toLowerCase(),\n                    id: _this5.request_id\n                  }\n                });\n              }\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this5.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this5.submitting = false;\n        });\n      }\n    },\n    cancel: function cancel() {\n      var _this6 = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this6.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this6.$router.push({\n                name: 'showrequest',\n                params: {\n                  type: _this6.request_type.toLowerCase(),\n                  id: _this6.request_id\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      var _this7 = this;\n\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this7.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this7.step--;\n\n              _this7.$emit('prevStep', _this7.step);\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["UpdateRequestF.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <v-dialog/>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_pago.$error }\">\n                <div class=\"row\">\n                  <div class=\"col-auto\">\n                    <label for=\"payment_type\">Forma de pago:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect @input=\"clearPayments(tipo_pago)\" v-model.trim=\"$v.tipo_pago.$model\" :options=\"payment_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_pago.$dirty && !$v.tipo_pago.required\">Es requerido un tipo de pago</div>\n                  </div>\n                </div>\n              </div>\n              <div v-if=\"tipo_pago === 'Fijo' \">\n                <hr>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.payment_number.$error }\">\n                  <div class=\"row\">\n                    <div class=\"col-auto\">\n                      <label for=\"payment_number\">Numéro de pagos:</label>\n                    </div>\n                    <div class=\"col-6\">\n                      <input type=\"number\" @input=\"addPay()\" v-model.trim=\"$v.payment_number.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.payment_number.$dirty && !$v.payment_number.required\">Es requerido el numero de pagos</div>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"parseInt(payment_number) !== 0 && tipo_pago != ''\" class=\"form-group\">\n                  <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                    <thead style=\"background-color: #003e1e; color:white;\">\n                      <tr>\n                        <th scope=\"col\"># de pago</th>\n                        <th scope=\"col\">Valor</th>\n                        <th scope=\"col\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(payment, index) in $v.payments.$each.$iter\" :key=\"index\">\n                        <td>\n                          {{payment.$model.numero}}\n                        </td>\n                        <td>\n                          <div class=\"input-group mb-3\">\n                            <input type=\"number\" :value=\"payment.valor.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\" disabled>\n                            <div class=\"input-group-append\">\n                              <span class=\"input-group-text\">$</span>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                            <input type=\"date\" v-model.trim=\"payment.fecha.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"payment.fecha.$dirty && !payment.fecha.required\">Es requerida una fecha</div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      valor_solicitud: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: []\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      this.payment_number = response.data.data.cantidad_pagos,\n      this.tipo_pago = response.data.data.tipo_pago,\n      // Necesarios para hacer el PUT\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      // Parametros necesarios para el update general\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.valor_solicitud = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_especifications = response.data.data.especificaciones_tecnicas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      axios.\n      get(API_IP+\"/payment/\",{params:this.$route.params.id})\n      .then(response => {\n        for(var k in response.data){\n          for(var j in response.data[k]){\n            console.log(response.data[k][j]);\n            var payment = {}\n            payment[\"solicitud\"] = response.data[k][j].solicitud._id\n            payment[\"valor\"] = response.data[k][j].valor\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0,10);\n            payment[\"numero\"] = response.data[k][j].numero\n            // payment[\"auditoria\"] = response.data[k][j].auditoria\n            payment[\"estado\"] = response.data[k][j].estado\n            // payment[\"planillas\"] = response.data[k][j].planillas\n            payment[\"_id\"] = response.data[k][j]._id\n            this.request_payments.push(payment);\n            this.payments.push(payment);\n          }\n        }\n        this.requestValueChange();\n      });\n    });\n  },\n  methods: {\n    requestValueChange(){\n      if (this.value !== this.valor_solicitud){\n        for(var k in this.request_payments){\n          axios\n          .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n          .then(response => {\n            console.log(response);\n            this.$swal({\n              title: 'Atención!',\n              html: 'Como el valor de la solicitud cambio<br>Se borraron los pagos relacionados con la solicitud.',\n              type: 'success',\n              confirmButtonText: 'Aceptar'\n            })\n          })\n          .catch(error => {\n            console.log(error);\n            this.$swal({\n              title: 'Error!',\n              text: error.response.data.msg,\n              type: 'error',\n              confirmButtonText: 'Cerrar'\n            });\n          });\n        }\n        this.payment_number= \"\",\n        this.payments= []\n      }\n    },\n    addPay(){\n      this.payments = []\n      var payment_value = (this.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.request_id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    deletePayments(){\n      for(var k in this.request_payments){\n        axios\n        .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se borraron los pagos correctamente',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          })\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        });\n      }\n    },\n    clearPayments(tipo_pago){\n      if(tipo_pago == \"Variable\"){\n        this.$swal({\n          title: 'Espere!',\n          html: '¿Esta seguro que quiere cambiar el tipo de pago?<br>Al cambiar de fijo a variable se borraran los pagos ya creados de la solicitud',\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Si',\n          cancelButtonText: 'No',\n        }).then((result) => {\n          if (result.value) {\n            this.deletePayments();\n            this.payment_number= \"\",\n            this.payments= []\n          } else {\n            this.tipo_pago = \"Fijo\"\n          }\n        });\n      }\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          _id: this.request_id,\n          numero_solicitud:this.request_number,\n          tipo_solicitud:this.tipo_solicitud,\n          fecha_inicio:this.start_request_date,\n          fecha_final:this.end_request_date,\n          valor_solicitud:this.valor_solicitud,\n          justificacion:this.justificacion,\n          justificacion_adicional:this.aditional_justification,\n          objetivo_general:this.general_objective,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          trabajadores:this.trabajadores,\n          ciudad:this.place\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.deletePayments();\n              if(this.tipo_pago === 'Fijo'){\n                // Post a pagos\n                axios\n                .post(API_IP+\"/payment/\", this.payments )\n                .then(response => {\n                  console.log(response);\n                  this.submitting = false;\n                  this.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then((result) => {\n                    if (result.value) {\n                      this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n                    }\n                  });\n                })\n                .catch(error => {\n                  console.log(error);\n                  this.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n                  this.submitting = false;\n                });\n              } else {\n                this.submitting = false;\n                this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n              }\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        })\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('prevStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/update"}]}