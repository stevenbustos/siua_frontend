{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/persons/UpdatePerson.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/persons/UpdatePerson.vue","mtime":1542206861561},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      dependencies: [],\n      cities: [],\n      document_types: [],\n      programs: [],\n      person_types: ['Estudiante', 'Profesor'],\n      person_auditoria: {},\n      person_id: \"\",\n      name_1: \"\",\n      name_2: \"\",\n      lastname_1: \"\",\n      lastname_2: \"\",\n      document_type: \"\",\n      document_number: \"\",\n      city: \"\",\n      address: \"\",\n      phone: \"\",\n      mobil_phone: \"\",\n      extension: \"\",\n      person_name: \"\",\n      email: \"\",\n      start_date: \"\",\n      end_date: \"\",\n      dependence: {},\n      person_url: \"\",\n      person_type: \"\",\n      student_program: \"\",\n      teacher_type: \"\",\n      teacher_ocupation: \"\",\n      submitting: false\n    };\n  },\n  validations: {\n    dependence: {\n      required: required\n    },\n    document_number: {\n      required: required\n    },\n    document_type: {\n      required: required\n    },\n    name_1: {\n      required: required\n    },\n    name_2: {\n      required: required\n    },\n    lastname_1: {\n      required: required\n    },\n    lastname_2: {\n      required: required\n    },\n    email: {\n      required: required\n    },\n    city: {\n      required: required\n    },\n    address: {\n      required: required\n    },\n    phone: {\n      required: required\n    },\n    mobil_phone: {\n      required: required\n    },\n    extension: {\n      required: required\n    },\n    person_type: {\n      required: required\n    },\n    teacher_type: {\n      requiredIf: requiredIf(function () {\n        return this.person_type === 'Profesor';\n      })\n    },\n    teacher_ocupation: {\n      requiredIf: requiredIf(function () {\n        return this.person_type === 'Profesor';\n      })\n    },\n    student_program: {\n      requiredIf: requiredIf(function () {\n        return this.person_type === 'Estudiante';\n      })\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(API_IP + '/documentType').then(function (response) {\n      for (var k in response.data.data) {\n        var doc = {};\n        doc[\"_id\"] = response.data.data[k]._id;\n        doc[\"name\"] = response.data.data[k].nombre;\n\n        _this.document_types.push(doc);\n      }\n\n      axios.get(API_IP + '/city').then(function (response) {\n        for (var k in response.data.data) {\n          var city = {};\n          city[\"_id\"] = response.data.data[k]._id;\n          city[\"name\"] = response.data.data[k].nombre;\n\n          _this.cities.push(city);\n        }\n\n        axios.get(API_IP + '/dependence').then(function (response) {\n          for (var k in response.data.data) {\n            var dependence = {};\n            dependence[\"_id\"] = response.data.data[k]._id;\n            dependence[\"name\"] = response.data.data[k].nombre;\n\n            _this.dependencies.push(dependence);\n          }\n\n          axios.get(API_IP + '/program').then(function (response) {\n            for (var k in response.data.data) {\n              var program = {};\n              program[\"_id\"] = response.data.data[k]._id;\n              program[\"name\"] = response.data.data[k].nombre;\n\n              _this.programs.push(program);\n            }\n          });\n        });\n      });\n    });\n    axios.get(API_IP + '/person/' + this.$route.params.id).then(function (response) {\n      _this.person_auditoria = response.data.data.auditoria;\n      _this.person_id = response.data.data._id;\n      _this.name_1 = response.data.data.primer_nombre;\n      _this.name_2 = response.data.data.segundo_nombre;\n      _this.lastname_1 = response.data.data.primer_apellido;\n      _this.lastname_2 = response.data.data.segundo_apellido;\n      _this.document_type = {\n        \"name\": response.data.data.tipo_documento.nombre,\n        \"_id\": response.data.data.tipo_documento._id\n      };\n      _this.document_number = response.data.data.numero_documento;\n      _this.city = {\n        \"name\": response.data.data.ciudad.nombre,\n        \"_id\": response.data.data.ciudad._id\n      };\n      _this.address = response.data.data.direccion;\n      _this.phone = response.data.data.telefono;\n      _this.mobil_phone = response.data.data.celular;\n      _this.extension = response.data.data.extension;\n      _this.person_name = response.data.data.primer_nombre + \" \" + response.data.data.primer_apellido;\n      _this.email = response.data.data.correo_electronico;\n      _this.dependence = {\n        \"name\": response.data.data.dependencia.nombre,\n        \"_id\": response.data.data.dependencia._id\n      };\n\n      if (response.data.data.estudiante !== undefined && response.data.data.estudiante !== null) {\n        _this.student_program = {\n          \"name\": response.data.data.estudiante.programa.nombre,\n          \"_id\": response.data.data.estudiante.programa._id\n        };\n        _this.person_type = \"Estudiante\";\n      } else {\n        _this.student_program = \"\";\n        _this.person_type = \"Profesor\";\n      }\n\n      _this.teacher_type = response.data.data.profesor.tipo;\n      _this.teacher_ocupation = response.data.data.profesor.dedicacion;\n      _this.person_url = \"/personas/\" + response.data.data._id;\n    });\n  },\n  methods: {\n    submit: function submit() {\n      var _this2 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\");\n      } else {\n        axios.put(API_IP + \"/person/\" + this.$route.params.id, {\n          auditoria: this.person_auditoria,\n          _id: this.person_id,\n          dependencia: this.dependence,\n          numero_documento: this.document_number,\n          tipo_documento: this.document_type,\n          primer_nombre: this.name_1,\n          segundo_nombre: this.name_2,\n          primer_apellido: this.lastname_1,\n          segundo_apellido: this.lastname_2,\n          correo_electronico: this.email,\n          ciudad: this.city,\n          direccion: this.address,\n          telefono: this.phone,\n          extension: this.mobil_phone,\n          celular: this.extension,\n          profesor: {\n            tipo: this.teacher_type,\n            dedicacion: this.teacher_ocupation\n          },\n          estudiante: {\n            programa: this.student_program._id\n          }\n        }).then(function (response) {\n          console.log(response);\n          alert(\"Se actualizo la persona satisfactoriamente\");\n          _this2.submitting = false;\n\n          _this2.$router.push({\n            name: 'showperson',\n            params: {\n              id: _this2.person_id\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n          alert(error.response.data.error.msg);\n          _this2.submitting = false;\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["UpdatePerson.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/personas\">Personas</a></li>\n            <li class=\"breadcrumb-item\"><a v-bind:href=\"person_url\">{{person_name}}</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Actualizar Usuario</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button onclick=\"window.history.back();\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div>\n                  <label for=\"personName\">Nombres:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.name_1.$error }\">\n                        <input v-model.trim=\"$v.name_1.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Primer Nombre\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.name_1.$dirty && !$v.name_1.required\">Es requerido un primer nombre</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.name_2.$error }\">\n                        <input v-model.trim=\"$v.name_2.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Segundo Nombre\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.name_2.$dirty && !$v.name_2.required\">Es requerido un segundo nombre</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <label for=\"personName\">Apellidos:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.lastname_1.$error }\">\n                        <input v-model.trim=\"$v.lastname_1.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Primer Apellido\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.lastname_1.$dirty && !$v.lastname_1.required\">Es requerido un primer apellido</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.lastname_2.$error }\">\n                        <input v-model.trim=\"$v.lastname_2.$model\" type=\"text\" class=\"form-control\" id=\"personName\" aria-describedby=\"personName\" placeholder=\"Segundo Apellido\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.lastname_2.$dirty && !$v.lastname_2.required\">Es requerido un segundo apellido</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.document_type.$error }\">\n                  <label for=\"documentType\">Tipo de documento:</label>\n                  <multiselect v-model.trim=\"$v.document_type.$model\" :options=\"document_types\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un tipo de documento\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.document_type.$dirty && !$v.document_type.required\">Es requerido un tipo de documento</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.document_number.$error }\">\n                  <label for=\"documentType\">Numero de documento:</label>\n                  <input v-model.trim=\"$v.document_number.$model\" type=\"number\" class=\"form-control\" id=\"documentNumber\" aria-describedby=\"documentNumber\" placeholder=\"Numero\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.document_number.$dirty && !$v.document_number.required\">Es requerido un numero de documento</div>\n                </div>\n                <div>\n                  <label for=\"location\">Dirección:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.city.$error }\">\n                        <multiselect v-model.trim=\"$v.city.$model\" :options=\"cities\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja una ciudad\">\n                        </multiselect>\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.city.$dirty && !$v.city.required\">Es requerida una ciudad</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.address.$error }\">\n                        <input type=\"text\" v-model.trim=\"$v.address.$model\" class=\"form-control\" id=\"userAddress\" aria-describedby=\"userAddress\" placeholder=\"Dirección\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.address.$dirty && !$v.address.required\">Es requerida una dirección</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div>\n                  <label for=\"contact\">Contacto:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.phone.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.phone.$model\" class=\"form-control\" id=\"userPhone\" aria-describedby=\"userPhone\" placeholder=\"Teléfono\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.phone.$dirty && !$v.phone.required\">Es requerido un numero de teléfono</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.mobil_phone.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.mobil_phone.$model\" class=\"form-control\" id=\"userMobil\" aria-describedby=\"userMobil\" placeholder=\"Celular\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.mobil_phone.$dirty && !$v.mobil_phone.required\">Es requerido un numero de celular</div>\n                      </div>\n                    </div>\n                    <div class=\"col\">\n                      <div class=\"form-group\" :class=\"{ 'form-group--error': $v.extension.$error }\">\n                        <input type=\"number\" v-model.trim=\"$v.extension.$model\" class=\"form-control\" id=\"userExtension\" aria-describedby=\"userExtension\" placeholder=\"Extensión\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.extension.$dirty && !$v.extension.required\">Es requerido un numero de extensión</div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.email.$error }\">\n                  <label for=\"userEmail\">Correo</label>\n                  <input type=\"email\" v-model.trim=\"$v.email.$model\" class=\"form-control\" id=\"userEmail\" aria-describedby=\"userEmail\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.email.$dirty && !$v.email.required\">Es requerido un correo</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.dependence.$error }\">\n                  <label for=\"userDependency\">Dependencia:</label>\n                  <multiselect v-model.trim=\"$v.dependence.$model\" :options=\"dependencies\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja una dependencia\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.dependence.$dirty && !$v.dependence.required\">Es requerido una dependencia</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.person_type.$error }\">\n                  <label for=\"personType\">Tipo de persona:</label>\n                  <multiselect v-model.trim=\"$v.person_type.$model\" :options=\"person_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un tipo de persona\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.person_type.$dirty && !$v.person_type.required\">Es necesario escoger un tipo de persona</div>\n                </div>\n                <div v-if=\" person_type === 'Profesor' \">\n                  {{student_program = \"\" }}\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.teacher_type.$error }\">\n                    <label for=\"teacherType\">Tipo de profesor:</label>\n                    <input type=\"text\" v-model.trim=\"$v.teacher_type.$model\" class=\"form-control\" id=\"teacherType\" aria-describedby=\"teacherType\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.teacher_type.$dirty && !$v.teacher_type.required\">Es necesario escoger el tipo de profesor</div>\n                  </div>\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.teacher_ocupation.$error }\">\n                    <label for=\"teacherOcupation\">Dedicación:</label>\n                    <input type=\"text\" v-model.trim=\"$v.teacher_ocupation.$model\" class=\"form-control\" id=\"teacherOcupation\" aria-describedby=\"teacherOcupation\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.teacher_ocupation.$dirty && !$v.teacher_ocupation.required\">Es necesario escoger la dedicación</div>\n                  </div>\n                </div>\n                <div v-else-if=\" person_type === 'Estudiante' \">\n                  {{teacher_type = \"\"}}\n                  {{teacher_ocupation = \"\"}}\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.student_program.$error }\">\n                    <label for=\"studentProgram\">Programa:</label>\n                    <multiselect v-model.trim=\"$v.student_program.$model\" :options=\"programs\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja una programa\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.student_program.$dirty && !$v.student_program.required\">Es necesario escoger un programa</div>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Guardar\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-bind:href=\"person_url\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </a>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      dependencies: [],\n      cities: [],\n      document_types : [],\n      programs : [],\n      person_types: ['Estudiante', 'Profesor'],\n      person_auditoria : {},\n      person_id : \"\",\n      name_1: \"\", name_2: \"\",\n      lastname_1: \"\", lastname_2: \"\",\n      document_type: \"\", document_number: \"\",\n      city: \"\", address: \"\",\n      phone: \"\", mobil_phone: \"\", extension: \"\",\n      person_name: \"\", email: \"\", start_date: \"\", end_date: \"\",\n      dependence: {}, person_url: \"\",\n      person_type: \"\",\n      student_program: \"\",\n      teacher_type: \"\", teacher_ocupation: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    dependence: { required }, document_number: { required }, document_type: { required },\n    name_1: { required }, name_2: { required }, lastname_1: { required },\n    lastname_2: { required }, email: { required }, city: { required },\n    address: { required }, phone: { required }, mobil_phone: { required },\n    extension: { required }, person_type: { required },\n    teacher_type: {\n      requiredIf: requiredIf(function (){\n        return this.person_type === 'Profesor'\n      })\n    },\n    teacher_ocupation: {\n      requiredIf: requiredIf(function (){\n        return this.person_type === 'Profesor'\n      })\n    },\n    student_program: {\n      requiredIf: requiredIf(function (){\n        return this.person_type === 'Estudiante'\n      })\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/documentType')\n    .then(response => {\n      for (var k in response.data.data){\n        var doc = {}\n        doc[\"_id\"] = response.data.data[k]._id;\n        doc[\"name\"] = response.data.data[k].nombre;\n        this.document_types.push(doc);\n      }\n      axios\n      .get(API_IP+'/city')\n      .then(response => {\n        for (var k in response.data.data){\n          var city = {}\n          city[\"_id\"] = response.data.data[k]._id;\n          city[\"name\"] = response.data.data[k].nombre;\n          this.cities.push(city);\n        }\n        axios\n        .get(API_IP+'/dependence')\n        .then(response => {\n          for (var k in response.data.data){\n            var dependence = {}\n            dependence[\"_id\"] = response.data.data[k]._id;\n            dependence[\"name\"] = response.data.data[k].nombre;\n            this.dependencies.push(dependence);\n          }\n          axios\n          .get(API_IP+'/program')\n          .then(response => {\n            for (var k in response.data.data){\n              var program = {}\n              program[\"_id\"] = response.data.data[k]._id;\n              program[\"name\"] = response.data.data[k].nombre;\n              this.programs.push(program);\n            }\n          });\n        });\n      });\n    });\n\n    axios\n    .get(API_IP+'/person/'+this.$route.params.id)\n    .then(response => {\n      this.person_auditoria = response.data.data.auditoria\n      this.person_id = response.data.data._id\n      this.name_1 = response.data.data.primer_nombre\n      this.name_2 = response.data.data.segundo_nombre\n      this.lastname_1 = response.data.data.primer_apellido\n      this.lastname_2 = response.data.data.segundo_apellido\n      this.document_type = {\n        \"name\": response.data.data.tipo_documento.nombre,\n        \"_id\": response.data.data.tipo_documento._id\n      }\n      this.document_number = response.data.data.numero_documento\n      this.city = {\n        \"name\" : response.data.data.ciudad.nombre,\n        \"_id\": response.data.data.ciudad._id\n      }\n      this.address = response.data.data.direccion\n      this.phone = response.data.data.telefono\n      this.mobil_phone = response.data.data.celular\n      this.extension = response.data.data.extension\n      this.person_name = response.data.data.primer_nombre+\" \"+response.data.data.primer_apellido\n      this.email = response.data.data.correo_electronico\n      this.dependence = {\n        \"name\" : response.data.data.dependencia.nombre,\n        \"_id\" : response.data.data.dependencia._id\n      }\n      if (response.data.data.estudiante !== undefined && response.data.data.estudiante !== null) {\n        this.student_program = {\n          \"name\" : response.data.data.estudiante.programa.nombre,\n          \"_id\" : response.data.data.estudiante.programa._id\n        }\n        this.person_type = \"Estudiante\"\n      } else {\n        this.student_program = \"\"\n        this.person_type = \"Profesor\"\n      }\n      this.teacher_type = response.data.data.profesor.tipo\n      this.teacher_ocupation = response.data.data.profesor.dedicacion\n      this.person_url = \"/personas/\"+response.data.data._id\n    })\n  },\n  methods: {\n    submit: function() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\")\n      } else {\n        axios\n        .put(API_IP+\"/person/\"+this.$route.params.id, {\n          auditoria : this.person_auditoria,\n          _id : this.person_id,\n          dependencia : this.dependence,\n          numero_documento : this.document_number,\n          tipo_documento : this.document_type,\n          primer_nombre : this.name_1,\n          segundo_nombre : this.name_2,\n          primer_apellido : this.lastname_1,\n          segundo_apellido : this.lastname_2,\n          correo_electronico : this.email,\n          ciudad : this.city,\n          direccion : this.address,\n          telefono : this.phone,\n          extension : this.mobil_phone,\n          celular : this.extension,\n          profesor: {\n            tipo: this.teacher_type,\n            dedicacion: this.teacher_ocupation\n          },\n          estudiante: {\n            programa: this.student_program._id\n          }\n        })\n        .then(response => {\n          console.log(response);\n          alert(\"Se actualizo la persona satisfactoriamente\");\n          this.submitting = false;\n          this.$router.push({ name: 'showperson', params: { id: this.person_id} });\n        })\n        .catch(error => {\n          console.log(error);\n          alert(error.response.data.error.msg);\n          this.submitting = false;\n        });\n      }\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/persons"}]}