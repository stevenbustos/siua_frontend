{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestB.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestB.vue","mtime":1545321402164},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      justification: '',\n      aditional_justification: '',\n      general_objective: '',\n      place: '',\n      cities: [],\n      step: this.stp,\n      submitting: false,\n      no_aditional_justification: true\n    };\n  },\n  validations: {\n    justification: {\n      required: required\n    },\n    general_objective: {\n      required: required\n    },\n    place: {\n      required: required\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(API_IP + '/request/' + this.$route.params.id).then(function (response) {\n      // Parametros necesarios en esta vista\n      _this.justification = response.data.data.justificacion;\n      _this.aditional_justification = response.data.data.justificacion_adicional;\n      _this.general_objective = response.data.data.objetivo_general;\n      _this.place = response.data.data.ciudad; // Parametros necesarios para el update general\n\n      _this.tipo_solicitud = response.data.data.tipo_solicitud;\n      _this.trabajadores = response.data.data.trabajadores;\n      _this.start_request_date = response.data.data.fecha_inicio.substring(0, 10);\n      _this.end_request_date = response.data.data.fecha_final.substring(0, 10); //Funcion para el total de dias\n\n      var sd = new Date(_this.start_request_date);\n      var ed = new Date(_this.end_request_date);\n      sd.setDate(sd.getDate() + 1);\n      ed.setDate(ed.getDate() + 1);\n      var differentDays = Math.ceil(Math.abs(ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      _this.total_days = differentDays;\n      _this.causal = response.data.data.causal_seleccion;\n      _this.clausulas = response.data.data.clausulas;\n      _this.request_auditoria = response.data.data.auditoria;\n      _this.request_id = response.data.data._id;\n      _this.request_state = response.data.data.estado;\n      _this.request_number = response.data.data.numero_solicitud;\n      _this.request_value = response.data.data.valor_solicitud;\n      _this.request_obligations = response.data.data.obligaciones_especificas;\n      _this.request_especifications = response.data.data.especificaciones_tecnicas;\n      _this.request_budget = response.data.data.rubros;\n      _this.payment_amount = response.data.data.cantidad_pagos;\n      _this.payment_type = response.data.data.tipo_pago; // Parametros usados en el padre\n\n      _this.request_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase() + \"/\" + response.data.data._id;\n      _this.request_type_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase();\n      _this.request_type = response.data.data.tipo_solicitud.nombre;\n\n      _this.$emit('request_id', _this.request_id);\n\n      _this.$emit('request_url', _this.request_url);\n\n      _this.$emit('request_type', _this.request_type);\n\n      _this.$emit('request_type_url', _this.request_type_url);\n    });\n    axios.get(API_IP + '/city').then(function (response) {\n      for (var k in response.data.data) {\n        var city = {};\n        city[\"_id\"] = response.data.data[k]._id;\n        city[\"nombre\"] = response.data.data[k].nombre;\n\n        _this.cities.push(city);\n      }\n    });\n  },\n  methods: {\n    aditionalJustificationStatus: function aditionalJustificationStatus() {\n      var curYear = new Date();\n      var endYear = new Date();\n      var yyyy = curYear.getFullYear();\n      curYear = yyyy;\n      endYear = this.end_request_date.substring(0, 4);\n\n      if (endYear > curYear) {\n        this.no_aditional_justification = false;\n      } else {\n        this.no_aditional_justification = true;\n      }\n    },\n    saveContinue: function saveContinue() {\n      var _this2 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios.put(API_IP + '/request/' + this.$route.params.id, {\n          // Parametros enviados por esta vista\n          justificacion: this.justification,\n          justificacion_adicional: this.aditional_justification,\n          objetivo_general: this.general_objective,\n          ciudad: this.place._id,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          tipo_solicitud: this.tipo_solicitud,\n          trabajadores: this.trabajadores,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion: this.causal,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud: this.request_value,\n          especificaciones_tecnicas: this.request_especifications,\n          obligaciones_especificas: this.request_obligations,\n          rubros: this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        }).then(function (response) {\n          console.log(response);\n\n          _this2.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              _this2.submitting = false;\n              _this2.step++;\n\n              _this2.$emit('nextStep', _this2.step);\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this2.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this2.submitting = false;\n        });\n      }\n    },\n    cancel: function cancel() {\n      var _this3 = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this3.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this3.$router.push({\n                name: 'showrequest',\n                params: {\n                  type: _this3.request_type.toLowerCase(),\n                  id: _this3.request_id\n                }\n              });\n            }\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      var _this4 = this;\n\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this4.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this4.step--;\n\n              _this4.$emit('nextStep', _this4.step);\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["UpdateRequestB.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,OAAA,WAAA,MAAA,iBAAA;AACA,SAAA,KAAA,QAAA,wBAAA;AACA,SAAA,QAAA,QAAA,0BAAA;AACA,IAAA,SAAA,QAAA,GAAA,CAAA,cAAA;AAEA,eAAA;AACA,SAAA,CAAA,KAAA,CADA;AAEA,cAAA;AACA;AADA,GAFA;AAKA,MALA,kBAKA;AACA,WAAA;AACA,qBAAA,EADA;AAEA,+BAAA,EAFA;AAGA,yBAAA,EAHA;AAIA,aAAA,EAJA;AAKA,cAAA,EALA;AAMA,YAAA,KAAA,GANA;AAOA,kBAAA,KAPA;AAQA,kCAAA;AARA,KAAA;AAUA,GAhBA;AAiBA,eAAA;AACA,mBAAA;AAAA;AAAA,KADA;AAEA,uBAAA;AAAA;AAAA,KAFA;AAEA,WAAA;AAAA;AAAA;AAFA,GAjBA;AAqBA,SArBA,qBAqBA;AAAA;;AACA,UACA,GADA,CACA,SAAA,WAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA,EAEA,IAFA,CAEA,oBAAA;AACA;AACA,YAAA,aAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,aAAA;AACA,YAAA,uBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,uBAAA;AACA,YAAA,iBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,gBAAA;AACA,YAAA,KAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,MAAA,CALA,CAMA;;AACA,YAAA,cAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,cAAA;AACA,YAAA,YAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,YAAA;AACA,YAAA,kBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,YAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA;AACA,YAAA,gBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,WAAA,CAAA,SAAA,CAAA,CAAA,EAAA,EAAA,CAAA,CAVA,CAWA;;AACA,UAAA,KAAA,IAAA,IAAA,CAAA,MAAA,kBAAA,CAAA;AACA,UAAA,KAAA,IAAA,IAAA,CAAA,MAAA,gBAAA,CAAA;AACA,SAAA,OAAA,CAAA,GAAA,OAAA,KAAA,CAAA;AACA,SAAA,OAAA,CAAA,GAAA,OAAA,KAAA,CAAA;AACA,UAAA,gBAAA,KAAA,IAAA,CAAA,KAAA,GAAA,CAAA,GAAA,OAAA,KAAA,GAAA,OAAA,EAAA,KAAA,OAAA,IAAA,GAAA,EAAA,CAAA,CAAA;AACA,YAAA,UAAA,GAAA,aAAA;AACA,YAAA,MAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,gBAAA;AACA,YAAA,SAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,SAAA;AACA,YAAA,iBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,SAAA;AACA,YAAA,UAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,YAAA,aAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AACA,YAAA,cAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,gBAAA;AACA,YAAA,aAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,eAAA;AACA,YAAA,mBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,wBAAA;AACA,YAAA,uBAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,yBAAA;AACA,YAAA,cAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,MAAA;AACA,YAAA,cAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,cAAA;AACA,YAAA,YAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,SAAA,CA7BA,CA8BA;;AACA,YAAA,WAAA,GAAA,kBAAA,SAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,WAAA,EAAA,GAAA,GAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,GAAA;AACA,YAAA,gBAAA,GAAA,kBAAA,SAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AACA,YAAA,YAAA,GAAA,SAAA,IAAA,CAAA,IAAA,CAAA,cAAA,CAAA,MAAA;;AACA,YAAA,KAAA,CAAA,YAAA,EAAA,MAAA,UAAA;;AACA,YAAA,KAAA,CAAA,aAAA,EAAA,MAAA,WAAA;;AACA,YAAA,KAAA,CAAA,cAAA,EAAA,MAAA,YAAA;;AACA,YAAA,KAAA,CAAA,kBAAA,EAAA,MAAA,gBAAA;AACA,KAxCA;AAyCA,UACA,GADA,CACA,SAAA,OADA,EAEA,IAFA,CAEA,oBAAA;AACA,WAAA,IAAA,CAAA,IAAA,SAAA,IAAA,CAAA,IAAA,EAAA;AACA,YAAA,OAAA,EAAA;AACA,aAAA,KAAA,IAAA,SAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,GAAA;AACA,aAAA,QAAA,IAAA,SAAA,IAAA,CAAA,IAAA,CAAA,CAAA,EAAA,MAAA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,IAAA;AACA;AACA,KATA;AAUA,GAzEA;AA0EA,WAAA;AACA,gCADA,0CACA;AACA,UAAA,UAAA,IAAA,IAAA,EAAA;AACA,UAAA,UAAA,IAAA,IAAA,EAAA;AACA,UAAA,OAAA,QAAA,WAAA,EAAA;AACA,gBAAA,IAAA;AACA,gBAAA,KAAA,gBAAA,CAAA,SAAA,CAAA,CAAA,EAAA,CAAA,CAAA;;AACA,UAAA,UAAA,OAAA,EAAA;AACA,aAAA,0BAAA,GAAA,KAAA;AACA,OAFA,MAEA;AACA,aAAA,0BAAA,GAAA,IAAA;AACA;AACA,KAZA;AAaA,gBAbA,0BAaA;AAAA;;AACA,WAAA,EAAA,CAAA,MAAA;;AACA,UAAA,KAAA,EAAA,CAAA,QAAA,EAAA;AACA,aAAA,KAAA,CAAA;AACA,iBAAA,QADA;AAEA,gBAAA,gDAFA;AAGA,gBAAA,OAHA;AAIA,6BAAA;AAJA,SAAA;AAMA,OAPA,MAOA;AACA,aAAA,UAAA,GAAA,IAAA;AACA,cACA,GADA,CACA,SAAA,WAAA,GAAA,KAAA,MAAA,CAAA,MAAA,CAAA,EADA,EACA;AACA;AACA,yBAAA,KAAA,aAFA;AAGA,mCAAA,KAAA,uBAHA;AAIA,4BAAA,KAAA,iBAJA;AAKA,kBAAA,KAAA,KAAA,CAAA,GALA;AAMA;AACA,qBAAA,KAAA,iBAPA;AAQA,eAAA,KAAA,UARA;AASA,0BAAA,KAAA,cATA;AAUA,wBAAA,KAAA,YAVA;AAWA,wBAAA,KAAA,kBAXA;AAYA,uBAAA,KAAA,gBAZA;AAaA,4BAAA,KAAA,MAbA;AAcA,qBAAA,KAAA,SAdA;AAeA,kBAAA,KAAA,aAfA;AAgBA,4BAAA,KAAA,cAhBA;AAiBA,2BAAA,KAAA,aAjBA;AAkBA,qCAAA,KAAA,uBAlBA;AAmBA,oCAAA,KAAA,mBAnBA;AAoBA,kBAAA,KAAA,cApBA;AAqBA,0BAAA,KAAA,cArBA;AAsBA,qBAAA,KAAA;AAtBA,SADA,EAyBA,IAzBA,CAyBA,oBAAA;AACA,kBAAA,GAAA,CAAA,QAAA;;AACA,iBAAA,KAAA,CAAA;AACA,mBAAA,QADA;AAEA,kBAAA,sCAFA;AAGA,kBAAA,SAHA;AAIA,+BAAA;AAJA,WAAA,EAKA,IALA,CAKA,UAAA,MAAA,EAAA;AACA,gBAAA,OAAA,KAAA,EAAA;AACA,qBAAA,UAAA,GAAA,KAAA;AACA,qBAAA,IAAA;;AACA,qBAAA,KAAA,CAAA,UAAA,EAAA,OAAA,IAAA;AACA;AACA,WAXA;AAYA,SAvCA,EAwCA,KAxCA,CAwCA,iBAAA;AACA,kBAAA,GAAA,CAAA,KAAA;;AACA,iBAAA,KAAA,CAAA;AACA,mBAAA,QADA;AAEA,kBAAA,MAAA,QAAA,CAAA,IAAA,CAAA,KAAA,CAAA,GAFA;AAGA,kBAAA,OAHA;AAIA,+BAAA;AAJA,WAAA;;AAMA,iBAAA,UAAA,GAAA,KAAA;AACA,SAjDA;AAkDA;AACA,KA3EA;AA4EA,UA5EA,oBA4EA;AAAA;;AACA,WAAA,EAAA,CAAA,MAAA;AACA,WAAA,KAAA,CAAA;AACA,eAAA,QADA;AAEA,cAAA,gDAFA;AAGA,cAAA,SAHA;AAIA,0BAAA,IAJA;AAKA,2BAAA,IALA;AAMA,0BAAA;AANA,OAAA,EAOA,IAPA,CAOA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA;AACA,mBAAA,WADA;AAEA,kBAAA;AAFA,WAAA,EAGA,IAHA,CAGA,UAAA,MAAA,EAAA;AACA,gBAAA,OAAA,KAAA,EAAA;AACA,qBAAA,OAAA,CAAA,IAAA,CAAA;AAAA,sBAAA,aAAA;AAAA,wBAAA;AAAA,wBAAA,OAAA,YAAA,CAAA,WAAA,EAAA;AAAA,sBAAA,OAAA;AAAA;AAAA,eAAA;AACA;AACA,WAPA;AAQA;AACA,OAlBA;AAmBA,KAjGA;AAkGA,YAlGA,sBAkGA;AAAA;;AACA,WAAA,KAAA,CAAA;AACA,eAAA,QADA;AAEA,cAAA,6EAFA;AAGA,cAAA,SAHA;AAIA,0BAAA,IAJA;AAKA,2BAAA,IALA;AAMA,0BAAA;AANA,OAAA,EAOA,IAPA,CAOA,UAAA,MAAA,EAAA;AACA,YAAA,OAAA,KAAA,EAAA;AACA,iBAAA,KAAA,CAAA;AACA,mBAAA,WADA;AAEA,kBAAA;AAFA,WAAA,EAGA,IAHA,CAGA,UAAA,MAAA,EAAA;AACA,gBAAA,OAAA,KAAA,EAAA;AACA,qBAAA,IAAA;;AACA,qBAAA,KAAA,CAAA,UAAA,EAAA,OAAA,IAAA;AACA;AACA,WARA;AASA;AACA,OAnBA;AAoBA;AAvHA;AA1EA,CAAA","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:50px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.justification.$error }\">\n                <label for=\"justification\">Justificación:</label>\n                <textarea v-model.trim=\"$v.justification.$model\" class=\"form-control\" aria-label=\"justification\"\n                placeholder=\"Justificación\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.justification.$dirty && !$v.justification.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <div class=\"form-group\">\n                <label for=\"aditionalJustification\">Justificación adicional:</label>\n                <textarea v-model=\"aditional_justification\" class=\"form-control\" :disabled=\"no_aditional_justification\" aria-label=\"aditionalJustification\"\n                placeholder=\"Justificación adicional\" :rows=\"6\" :max-rows=\"10\"></textarea>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.general_objective.$error }\">\n                <label for=\"generalObjective\">Objetivo general de la contratación requerida:</label>\n                <textarea v-model.trim=\"$v.general_objective.$model\" class=\"form-control\" aria-label=\"generalObjective\"\n                placeholder=\"Objetivo general\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.general_objective.$dirty && !$v.general_objective.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.place.$error }\">\n                <label for=\"place\">Lugar de ejecución o de entrega:</label>\n                <multiselect id=\"box2\" v-model.trim=\"$v.place.$model\" :options=\"cities\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" track-by=\"_id\" label=\"nombre\" placeholder=\"Escoja un lugar\">\n                </multiselect>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.place.$dirty && !$v.place.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      justification: '',\n      aditional_justification:'',\n      general_objective:'',\n      place:'',\n      cities: [],\n      step: this.stp,\n      submitting: false,\n      no_aditional_justification: true\n    }\n  },\n  validations: {\n    justification: {required},\n    general_objective: {required}, place: {required},\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      // Parametros necesarios para el update general\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.request_value = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_especifications = response.data.data.especificaciones_tecnicas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n    });\n    axios\n    .get(API_IP+'/city')\n    .then(response => {\n      for (var k in response.data.data){\n        var city = {}\n        city[\"_id\"] = response.data.data[k]._id;\n        city[\"nombre\"] = response.data.data[k].nombre;\n        this.cities.push(city);\n      }\n    });\n  },\n  methods:{\n    aditionalJustificationStatus(){\n      var curYear = new Date();\n      var endYear = new Date();\n      var yyyy = curYear.getFullYear();\n      curYear = yyyy;\n      endYear = this.end_request_date.substring(0,4);\n      if ( endYear > curYear ){\n        this.no_aditional_justification = false\n      } else {\n        this.no_aditional_justification = true\n      }\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          justificacion: this.justification,\n          justificacion_adicional: this.aditional_justification,\n          objetivo_general: this.general_objective,\n          ciudad: this.place._id,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          tipo_solicitud: this.tipo_solicitud,\n          trabajadores: this.trabajadores,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion: this.causal,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud: this.request_value,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/update"}]}