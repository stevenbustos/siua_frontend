{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/budgets/UpdateBudget.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/budgets/UpdateBudget.vue","mtime":1547157018858},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      dependencies: [],\n      entries: [],\n      budget_name: \"\",\n      budget_dependence: {},\n      budget_value: \"\",\n      budget_year: \"\",\n      budget_entries: [],\n      budget_entries_value: [],\n      budget_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    budget_value: {\n      required\n    },\n    budget_entries: {\n      required\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/budget/'+this.$route.params.id)\n    .then(response => {\n      this.budget_auditoria = response.data.data.auditoria\n      this.budget_id = response.data.data._id\n      this.budget_name = response.data.data.nombre\n      this.budget_dependence[\"_id\"] = response.data.data.dependencia._id\n      this.budget_dependence[\"name\"] = response.data.data.dependencia.nombre\n      this.budget_year = response.data.data.año\n      this.budget_value = response.data.data.valor\n      this.budget_url = \"/presupuestos/\"+response.data.data._id\n\n      var entriesTmp = []\n      for (var j in response.data.data.rubros){\n        var entryTmp = {}\n        entryTmp[\"_id\"] = response.data.data.rubros[j]._id\n        entryTmp[\"rubro\"] = response.data.data.rubros[j].rubro._id\n        entryTmp[\"name\"] = response.data.data.rubros[j].rubro.nombre\n        entryTmp[\"valor\"] = parseInt(response.data.data.rubros[j].valor)\n        entriesTmp.push(entryTmp)\n      }\n      this.budget_entries = entriesTmp\n\n      axios\n      .get(API_IP+\"/entry/\")\n      .then(response => {\n        for (var k in response.data.data){\n          var entry = {}\n          entry[\"rubro\"] = response.data.data[k]._id;\n          entry[\"name\"] = response.data.data[k].nombre;\n          this.entries.push(entry);\n        }\n      });\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        this.budget_entries.map(obj =>{\n          var rObj = obj;\n          rObj[\"valor\"] = parseInt(obj.valor);\n          return rObj\n        })\n        axios\n        .put(API_IP+\"/budget/\"+this.$route.params.id, {\n          auditoria: this.budget_auditoria,\n          _id: this.budget_id,\n          valor: parseInt(this.budget_value),\n          rubros: this.budget_entries\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el presupuesto satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showbudget', params: { id: this.budget_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showbudget', params: { id: this.budget_id} });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["UpdateBudget.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateBudget.vue","sourceRoot":"src/components/budgets","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/presupuestos\">Presupuesto</a></li>\n            <li class=\"breadcrumb-item\"><a v-bind:href=\"budget_url\">{{budget_name}}</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Editar Presupuesto</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div class=\"form-group\">\n                  <label for=\"budgetName\">Nombre del presupuesto:</label>\n                  <input type=\"text\" class=\"form-control\" id=\"budgetName\" aria-describedby=\"budgetName\" :placeholder=\"budget_name\" readonly>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"budgetDependency\">Dependencia:</label>\n                  <input type=\"text\" class=\"form-control\" id=\"budgetDependency\" aria-describedby=\"budgetDependency\" :placeholder=\"budget_dependence.name\" readonly>\n                </div>\n                <div class=\"form-group\">\n                  <label for=\"budgetYear\">Año:</label>\n                  <input type=\"number\" class=\"form-control\" id=\"budgetYear\" aria-describedby=\"budgetYear\" :placeholder=\"budget_year\" readonly>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.budget_value.$error }\">\n                  <label for=\"budgetValue\">Valor:</label>\n                  <input v-model.trim=\"$v.budget_value.$model\" type=\"number\" class=\"form-control\" id=\"budgetValue\" aria-describedby=\"budgetValue\" placeholder=\"Valor\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.budget_value.$dirty && !$v.budget_value.required\">Es requerido un valor</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.budget_entries.$error }\">\n                  <label for=\"budgetEntries\">Rubros:</label>\n                  <multiselect v-model.trim=\"$v.budget_entries.$model\" :options=\"entries\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los rubros\" label=\"name\" track-by=\"rubro\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.budget_entries.$dirty && !$v.budget_entries.required\">Es requerido minimo un rubro</div>\n                </div>\n                <div v-for='(entrie, index) in budget_entries' :key='index' class=\"form-group\">\n                  <label for=\"entryValue\">Asignar valor a {{entrie.name}}</label>\n                  <input v-model=\"entrie.valor\" type=\"number\" class=\"form-control\" id=\"entryValue\" aria-describedby=\"entryValue\" placeholder=\"Valor del rubro\">\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                      Guardar\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      dependencies: [],\n      entries: [],\n      budget_name: \"\",\n      budget_dependence: {},\n      budget_value: \"\",\n      budget_year: \"\",\n      budget_entries: [],\n      budget_entries_value: [],\n      budget_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    budget_value: {\n      required\n    },\n    budget_entries: {\n      required\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/budget/'+this.$route.params.id)\n    .then(response => {\n      this.budget_auditoria = response.data.data.auditoria\n      this.budget_id = response.data.data._id\n      this.budget_name = response.data.data.nombre\n      this.budget_dependence[\"_id\"] = response.data.data.dependencia._id\n      this.budget_dependence[\"name\"] = response.data.data.dependencia.nombre\n      this.budget_year = response.data.data.año\n      this.budget_value = response.data.data.valor\n      this.budget_url = \"/presupuestos/\"+response.data.data._id\n\n      var entriesTmp = []\n      for (var j in response.data.data.rubros){\n        var entryTmp = {}\n        entryTmp[\"_id\"] = response.data.data.rubros[j]._id\n        entryTmp[\"rubro\"] = response.data.data.rubros[j].rubro._id\n        entryTmp[\"name\"] = response.data.data.rubros[j].rubro.nombre\n        entryTmp[\"valor\"] = parseInt(response.data.data.rubros[j].valor)\n        entriesTmp.push(entryTmp)\n      }\n      this.budget_entries = entriesTmp\n\n      axios\n      .get(API_IP+\"/entry/\")\n      .then(response => {\n        for (var k in response.data.data){\n          var entry = {}\n          entry[\"rubro\"] = response.data.data[k]._id;\n          entry[\"name\"] = response.data.data[k].nombre;\n          this.entries.push(entry);\n        }\n      });\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        this.budget_entries.map(obj =>{\n          var rObj = obj;\n          rObj[\"valor\"] = parseInt(obj.valor);\n          return rObj\n        })\n        axios\n        .put(API_IP+\"/budget/\"+this.$route.params.id, {\n          auditoria: this.budget_auditoria,\n          _id: this.budget_id,\n          valor: parseInt(this.budget_value),\n          rubros: this.budget_entries\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo el presupuesto satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showbudget', params: { id: this.budget_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showbudget', params: { id: this.budget_id} });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}