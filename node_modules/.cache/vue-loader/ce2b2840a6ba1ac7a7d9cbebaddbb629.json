{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/roles/UpdateRol.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/roles/UpdateRol.vue","mtime":1547157018858},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      permit_options: {},\n      rol_auditoria: {},\n      modules: [],\n      permits: [],\n      rol_name: \"\",\n      rol_state: \"\",\n      rol_state_get: \"\",\n      rol_description: '',\n      states: [\n        { name: \"Activo\", activo: \"true\" },\n        { name: \"Inactivo\", activo: \"false\" }\n      ],\n      rol_mod: [],\n      rol_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    rol_state: {\n      required\n    },\n    rol_description: {\n      required\n    },\n    rol_mod: {\n      required\n    }\n  },\n  mounted () {\n      axios\n      .get(API_IP+\"/module/\")\n      .then(response => {\n        for(var k in response.data.data){\n          var mod = {}\n          mod[\"_id\"] = response.data.data[k]._id\n          mod[\"name\"] = response.data.data[k].nombre;\n          mod[\"permits\"] = [];\n          mod[\"modulo\"] = response.data.data[k]._id;\n          this.permit_options[response.data.data[k]._id]=[]\n          for (var j in response.data.data[k].permisos){\n            var per = {}\n            if(response.data.data[k].activo == true ){\n              per[\"_id\"] = response.data.data[k].permisos[j]._id;\n              per[\"name\"] = response.data.data[k].permisos[j].nombre;\n              mod[\"permits\"].push(per);\n              this.permit_options[response.data.data[k]._id].push(per)\n            }\n          }\n          this.modules.push(mod);\n        }\n        axios\n        .get(API_IP+'/rol/'+this.$route.params.id)\n        .then(response => {\n          this.rol_auditoria = response.data.data.auditoria;\n          this.rol_name = response.data.data.nombre;\n          this.rol_state = response.data.data.activo;\n          response.data.data.activo? this.rol_state_get=\"Activo\" : this.rol_state_get=\"Inactivo\";\n          this.rol_description = response.data.data.descripcion\n          this.rol_id = response.data.data._id\n          this.rol_url = \"/roles/\"+response.data.data._id\n\n          for (var k in response.data.data.modulos){\n            var mod_info = {}\n            mod_info[\"_id\"] = response.data.data.modulos[k]._id\n            mod_info[\"modulo\"] = response.data.data.modulos[k].modulo._id\n            mod_info[\"name\"] = response.data.data.modulos[k].modulo.nombre\n            var mod_per = []\n            for (var j in response.data.data.modulos[k].permisos){\n                var perms = {}\n                perms[\"_id\"] = response.data.data.modulos[k].permisos[j]._id\n                perms[\"name\"] = response.data.data.modulos[k].permisos[j].nombre\n                mod_per.push(perms)\n                this.permit_options[response.data.data.modulos[k].modulo._id].push(perms)\n            }\n            mod_info[\"permisos\"] = mod_per\n            this.rol_mod.push(mod_info)\n          }\n      });\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+\"/rol/\"+this.$route.params.id, {\n          auditoria: this.rol_auditoria,\n          activo: this.rol_state.activo,\n          _id: this.rol_id,\n          nombre: this.rol_name,\n          descripcion: this.rol_description,\n          modulos: this.rol_mod\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo el rol satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n\n",{"version":3,"sources":["UpdateRol.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+EA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateRol.vue","sourceRoot":"src/components/roles","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/roles\">Roles</a></li>\n            <li class=\"breadcrumb-item\"><a v-bind:href=\"rol_url\">{{rol_name}}</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Editar Rol</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div class=\"form-group\">\n                  <label for=\"rolName\">Nombre del rol:</label>\n                  <input type=\"text\" class=\"form-control\" id=\"rolName\" aria-describedby=\"rolName\" :placeholder=\"rol_name\" readonly>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_mod.$error }\">\n                  <label for=\"rolModules\">Modulos del rol:</label>\n                  <multiselect v-model.trim=\"$v.rol_mod.$model\" :options=\"modules\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los modulos\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_mod.$dirty && !$v.rol_mod.required\">Es requerido minimo un modúlo</div>\n                </div>\n                <div v-for='(module, index) in rol_mod' :key='index' class=\"form-group\">\n                  <label for=\"rolModules\">Permisos de {{module.name}}</label>\n                  <multiselect v-model=\"module.permisos\" :options=\"permit_options[module.modulo]\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Seleccione los permisos del modulo\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                  </multiselect>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_state.$error }\">\n                  <label for=\"rolStates\">Estado del rol:</label>\n                  <multiselect v-model.trim=\"$v.rol_state.$model\" :options=\"states\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un estado\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_state.$dirty && !$v.rol_state.required\">Es requerido un estado</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.rol_description.$error }\">\n                  <label for=\"rolDescription\">Descripción:</label>\n                  <textarea v-model.trim=\"$v.rol_description.$model\" class=\"form-control\" aria-label=\"rolDescription\"\n                  placeholder=\"Descripción\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.rol_description.$dirty && !$v.rol_description.required\">Es requerida una descripción</div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                      Guardar\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n                <div>&nbsp;</div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      permit_options: {},\n      rol_auditoria: {},\n      modules: [],\n      permits: [],\n      rol_name: \"\",\n      rol_state: \"\",\n      rol_state_get: \"\",\n      rol_description: '',\n      states: [\n        { name: \"Activo\", activo: \"true\" },\n        { name: \"Inactivo\", activo: \"false\" }\n      ],\n      rol_mod: [],\n      rol_url: \"\",\n      submitting: false\n    }\n  },\n  validations: {\n    rol_state: {\n      required\n    },\n    rol_description: {\n      required\n    },\n    rol_mod: {\n      required\n    }\n  },\n  mounted () {\n      axios\n      .get(API_IP+\"/module/\")\n      .then(response => {\n        for(var k in response.data.data){\n          var mod = {}\n          mod[\"_id\"] = response.data.data[k]._id\n          mod[\"name\"] = response.data.data[k].nombre;\n          mod[\"permits\"] = [];\n          mod[\"modulo\"] = response.data.data[k]._id;\n          this.permit_options[response.data.data[k]._id]=[]\n          for (var j in response.data.data[k].permisos){\n            var per = {}\n            if(response.data.data[k].activo == true ){\n              per[\"_id\"] = response.data.data[k].permisos[j]._id;\n              per[\"name\"] = response.data.data[k].permisos[j].nombre;\n              mod[\"permits\"].push(per);\n              this.permit_options[response.data.data[k]._id].push(per)\n            }\n          }\n          this.modules.push(mod);\n        }\n        axios\n        .get(API_IP+'/rol/'+this.$route.params.id)\n        .then(response => {\n          this.rol_auditoria = response.data.data.auditoria;\n          this.rol_name = response.data.data.nombre;\n          this.rol_state = response.data.data.activo;\n          response.data.data.activo? this.rol_state_get=\"Activo\" : this.rol_state_get=\"Inactivo\";\n          this.rol_description = response.data.data.descripcion\n          this.rol_id = response.data.data._id\n          this.rol_url = \"/roles/\"+response.data.data._id\n\n          for (var k in response.data.data.modulos){\n            var mod_info = {}\n            mod_info[\"_id\"] = response.data.data.modulos[k]._id\n            mod_info[\"modulo\"] = response.data.data.modulos[k].modulo._id\n            mod_info[\"name\"] = response.data.data.modulos[k].modulo.nombre\n            var mod_per = []\n            for (var j in response.data.data.modulos[k].permisos){\n                var perms = {}\n                perms[\"_id\"] = response.data.data.modulos[k].permisos[j]._id\n                perms[\"name\"] = response.data.data.modulos[k].permisos[j].nombre\n                mod_per.push(perms)\n                this.permit_options[response.data.data.modulos[k].modulo._id].push(perms)\n            }\n            mod_info[\"permisos\"] = mod_per\n            this.rol_mod.push(mod_info)\n          }\n      });\n    })\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+\"/rol/\"+this.$route.params.id, {\n          auditoria: this.rol_auditoria,\n          activo: this.rol_state.activo,\n          _id: this.rol_id,\n          nombre: this.rol_name,\n          descripcion: this.rol_description,\n          modulos: this.rol_mod\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo el rol satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrol', params: { id: this.rol_id} });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n\n</script>\n"]}]}