{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestF.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestF.vue","mtime":1544137117538},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  props: ['stp', 'object'],\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      payment_types: [\"Fijo\", \"Variable\"],\n      obj: this.object,\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false\n    };\n  },\n  validations: {\n    tipo_pago: {\n      required: required\n    },\n    payment_number: {\n      required: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      }),\n      $each: {\n        fecha: {\n          required: required\n        },\n        valor: {\n          required: required\n        }\n      }\n    }\n  },\n  methods: {\n    addPay: function addPay() {\n      this.payments = [];\n      var payment_value = this.obj.valor_solicitud / this.payment_number;\n\n      if (this.tipo_pago == \"Variable\") {\n        payment_value = \"\";\n      }\n\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.obj._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i + 1\n        });\n      }\n    },\n    clearPayments: function clearPayments() {\n      this.payment_number = \"\", this.payments = [];\n    },\n    saveContinue: function saveContinue() {\n      var _this = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\");\n      } else {\n        this.submitting = true; // Put a Solicitud\n\n        axios.put(API_IP + \"/request/\" + this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.obj.auditoria,\n          clausulas: this.obj.clausulas,\n          estado: this.obj.estado,\n          _id: this.obj._id,\n          numero_solicitud: this.obj.numero_solicitud,\n          tipo_solicitud: this.obj.tipo_solicitud,\n          fecha_inicio: this.obj.fecha_inicio,\n          fecha_final: this.obj.fecha_final,\n          valor_solicitud: this.obj.valor_solicitud,\n          justificacion: this.obj.justificacion,\n          justificacion_adicional: this.obj.justificacion_adicional,\n          objetivo_general: this.obj.objetivo_general,\n          especificaciones_tecnicas: this.obj.especificaciones_tecnicas,\n          obligaciones_especificas: this.obligations,\n          rubros: this.obj.rubros,\n          trabajadores: this.obj.trabajadores,\n          ciudad: this.obj.ciudad\n        }).then(function (response) {\n          console.log(response);\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n\n          if (_this.tipo_pago === 'Fijo') {\n            axios.post(API_IP + \"/payment/\", _this.payments).then(function (response) {\n              console.log(response);\n              _this.submitting = false;\n              alert(\"Se crearon los pagos correctamente\");\n\n              _this.$router.push({\n                name: 'showrequest',\n                params: {\n                  type: _this.obj.tipo_solicitud.nombre.toLowerCase(),\n                  id: _this.obj._id\n                }\n              });\n            }).catch(function (error) {\n              console.log(error);\n              alert(error.response.data.msg);\n              _this.submitting = false;\n            });\n          } else {\n            _this.submitting = false;\n\n            _this.$router.push({\n              name: 'showrequest',\n              params: {\n                type: _this.obj.tipo_solicitud.nombre.toLowerCase(),\n                id: _this.obj._id\n              }\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n          alert(error.response.data.error.msg);\n          _this.submitting = false;\n        });\n      }\n    },\n    previous: function previous() {\n      this.$router.push({\n        name: 'updaterequest',\n        params: {\n          type: this.obj.tipo_solicitud.nombre.toLowerCase(),\n          id: this.obj._id\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["CreateRequestF.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_pago.$error }\">\n                <div class=\"row\">\n                  <div class=\"col-auto\">\n                    <label for=\"payment_type\">Forma de pago:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect @input=\"clearPayments\" v-model.trim=\"$v.tipo_pago.$model\" :options=\"payment_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_pago.$dirty && !$v.tipo_pago.required\">Es requerido un tipo de pago</div>\n                  </div>\n                </div>\n              </div>\n              <div v-if=\"tipo_pago === 'Fijo' \">\n                <hr>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.payment_number.$error }\">\n                  <div class=\"row\">\n                    <div class=\"col-auto\">\n                      <label for=\"payment_number\">Numéro de pagos:</label>\n                    </div>\n                    <div class=\"col-6\">\n                      <input type=\"number\" @input=\"addPay()\" v-model.trim=\"$v.payment_number.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.payment_number.$dirty && !$v.payment_number.required\">Es requerido el numero de pagos</div>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"parseInt(payment_number) !== 0 && tipo_pago != ''\" class=\"form-group\">\n                  <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                    <thead style=\"background-color: #003e1e; color:white;\">\n                      <tr>\n                        <th scope=\"col\"># de pagos</th>\n                        <th scope=\"col\">Valor</th>\n                        <th scope=\"col\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(payment, index) in $v.payments.$each.$iter\" :key=\"index\">\n                        <td>\n                          {{parseInt(index)+1}}\n                        </td>\n                        <td>\n                          <input type=\"number\" v-model=\"payment.valor.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\" disabled>\n                        </td>\n                        <td>\n                          <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                            <input type=\"date\" v-model.trim=\"payment.fecha.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"payment.fecha.$dirty && !payment.fecha.required\">Es requerida una fecha</div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"/solicitudes\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </a>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp','object'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      obj: this.object,\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  methods: {\n    addPay(){\n      this.payments = []\n      var payment_value = (this.obj.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.obj._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    clearPayments(){\n      this.payment_number= \"\",\n      this.payments= []\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\")\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria:this.obj.auditoria,\n          clausulas:this.obj.clausulas,\n          estado:this.obj.estado,\n          _id:this.obj._id,\n          numero_solicitud:this.obj.numero_solicitud,\n          tipo_solicitud:this.obj.tipo_solicitud,\n          fecha_inicio:this.obj.fecha_inicio,\n          fecha_final:this.obj.fecha_final,\n          valor_solicitud:this.obj.valor_solicitud,\n          justificacion:this.obj.justificacion,\n          justificacion_adicional:this.obj.justificacion_adicional,\n          objetivo_general:this.obj.objetivo_general,\n          especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n          obligaciones_especificas:this.obligations,\n          rubros:this.obj.rubros,\n          trabajadores:this.obj.trabajadores,\n          ciudad:this.obj.ciudad\n        })\n        .then(response => {\n          console.log(response);\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n          if(this.tipo_pago === 'Fijo'){\n            axios\n            .post(API_IP+\"/payment/\", this.payments )\n            .then(response => {\n              console.log(response);\n              this.submitting = false;\n              alert(\"Se crearon los pagos correctamente\");\n              this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n            })\n            .catch(error => {\n              console.log(error);\n              alert(error.response.data.msg);\n              this.submitting = false;\n            });\n          } else {\n            this.submitting = false;\n            this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          alert(error.response.data.error.msg);\n          this.submitting = false;\n        })\n      }\n    },\n    previous(){\n      this.$router.push({ name: 'updaterequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/create"}]}