{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestA.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestA.vue","mtime":1545321402164},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/developer/Documents/SIUA/frontend/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect';\nimport Vuex from 'vuex';\nimport { axios } from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators';\nimport CreatePerson from '../../persons/CreatePersonModal.vue';\nimport CreateClause from '../../clauses/CreateClauseModal.vue';\nvar API_IP = process.env.VUE_APP_API_IP;\nvar mapActions = Vuex.mapActions,\n    mapState = Vuex.mapState;\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    profesores: [],\n    contratistas: [],\n    planta: [],\n    interventorStore: \"\",\n    contratistaStore: \"\",\n    responsableStore: \"\",\n    valuex: \"\",\n    valuey: \"\",\n    allpersonas: [],\n    personasInterventor: [],\n    personasContratista: [],\n    personasResponsable: [],\n    personasInterventorOriginal: [],\n    personasContratistaOriginal: [],\n    personasResponsableOriginal: [],\n    clauses: [],\n    causals: [],\n    types_request: []\n  },\n  actions: {\n    loadData: function loadData(_ref) {\n      var commit = _ref.commit;\n      axios.get(API_IP + \"/person/\").then(function (response) {\n        var personas = [];\n\n        for (var k in response.data.data) {\n          var person = {};\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"name\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].segundo_nombre + \" \" + response.data.data[k].primer_apellido + \" \" + response.data.data[k].segundo_apellido;\n          personas.push(person);\n        }\n\n        commit('loadPersonas', personas);\n        axios.get(API_IP + \"/person/\", {\n          params: \"profesor\"\n        }).then(function (response) {\n          var profesores = [];\n\n          for (var k in response.data.data) {\n            var profesor = {};\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"name\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].segundo_nombre + \" \" + response.data.data[k].primer_apellido + \" \" + response.data.data[k].segundo_apellido;\n            profesores.push(profesor);\n          }\n\n          commit('loadProfesores', profesores);\n          axios.get(API_IP + \"/person/\", {\n            params: \"contratista\"\n          }).then(function (response) {\n            var contratistas = [];\n\n            for (var k in response.data.data) {\n              var contratista = {};\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"name\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].segundo_nombre + \" \" + response.data.data[k].primer_apellido + \" \" + response.data.data[k].segundo_apellido;\n              contratistas.push(contratista);\n            }\n\n            commit('loadContratistas', contratistas);\n            axios.get(API_IP + \"/person/\", {\n              params: \"planta\"\n            }).then(function (response) {\n              var plantas = [];\n\n              for (var k in response.data.data) {\n                var planta = {};\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"name\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].segundo_nombre + \" \" + response.data.data[k].primer_apellido + \" \" + response.data.data[k].segundo_apellido;\n                plantas.push(planta);\n              }\n\n              commit('loadPlanta', plantas);\n              axios.get(API_IP + \"/clause/\").then(function (response) {\n                var clauses = [];\n\n                for (var k in response.data.data) {\n                  var clause = {};\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"name\"] = response.data.data[k].nombre;\n                  clauses.push(clause);\n                }\n\n                commit('loadClauses', clauses);\n                axios.get(API_IP + \"/causalSelection/\").then(function (response) {\n                  var causals = [];\n\n                  for (var k in response.data.data) {\n                    var causal = {};\n                    causal[\"_id\"] = response.data.data[k]._id;\n                    causal[\"name\"] = response.data.data[k].nombre;\n                    causals.push(causal);\n                  }\n\n                  commit('loadCausals', causals);\n                  axios.get(API_IP + \"/requesttype/\").then(function (response) {\n                    var types_request = [];\n\n                    for (var k in response.data.data) {\n                      var type = {};\n                      type[\"_id\"] = response.data.data[k]._id;\n                      type[\"nombre\"] = response.data.data[k].nombre;\n                      types_request.push(type);\n                    }\n\n                    commit('loadTypesRequest', types_request);\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    },\n    updatePersonasInterventorAction: function updatePersonasInterventorAction(_ref2, interventorStore) {\n      var commit = _ref2.commit;\n      commit('updatePersonasInterventor', interventorStore);\n    },\n    updatePersonasContratistaAction: function updatePersonasContratistaAction(_ref3, contratistaStore) {\n      var commit = _ref3.commit;\n      commit('updatePersonasContratista', contratistaStore);\n    },\n    updatePersonasResponsableAction: function updatePersonasResponsableAction(_ref4, responsableStore) {\n      var commit = _ref4.commit;\n      commit('updatePersonasCargo', responsableStore);\n    }\n  },\n  mutations: {\n    loadContratistas: function loadContratistas(state, contratistas) {\n      state.contratistas = contratistas;\n    },\n    loadProfesores: function loadProfesores(state, profesores) {\n      state.profesores = profesores;\n    },\n    loadPlanta: function loadPlanta(state, planta) {\n      state.planta = planta;\n      state.personasInterventorOriginal = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal = state.contratistas;\n      state.personasResponsableOriginal = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasInterventor = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista = state.contratistas;\n      state.personasResponsable = state.profesores.concat(state.contratistas).concat(state.planta);\n    },\n    loadClauses: function loadClauses(state, clauses) {\n      state.clauses = clauses;\n    },\n    loadCausals: function loadCausals(state, causals) {\n      state.causals = causals;\n    },\n    loadTypesRequest: function loadTypesRequest(state, types_request) {\n      state.types_request = types_request;\n    },\n    loadPersonas: function loadPersonas(state, personas) {\n      state.allpersonas = personas;\n      state.personasInterventor = personas;\n      state.personasContratista = personas;\n    },\n    updatePersonasInterventor: function updatePersonasInterventor(state, interventorStore) {\n      state.interventorStore = interventorStore;\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person != state.contratistaStore && person != state.responsableStore;\n      });\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person != interventorStore && person != state.personaResponsable;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person != interventorStore && person != state.contratistaStore;\n      });\n    },\n    updatePersonasContratista: function updatePersonasContratista(state, contratistaStore) {\n      state.contratistaStore = contratistaStore;\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person != contratistaStore && person != state.responsableStore;\n      });\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person != state.interventorStore && person != state.personaResponsable;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person != state.interventorStore && person != contratistaStore;\n      });\n    },\n    updatePersonasCargo: function updatePersonasCargo(state, responsableStore) {\n      state.responsableStore = responsableStore;\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person != state.interventorStore && person != responsableStore;\n      });\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person != state.contratistaStore && person != responsableStore;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person != state.interventorStore && person != state.contratistaStore;\n      });\n    }\n  }\n});\nexport default {\n  props: ['stp'],\n  store: store,\n  components: {\n    Multiselect: Multiselect,\n    'create-person': CreatePerson,\n    'create-clause': CreateClause\n  },\n  data: function data() {\n    return {\n      interventoresSelect: \"\",\n      contratistasSelect: \"\",\n      interventor: \"\",\n      contratista: \"\",\n      start_request_date: \"\",\n      end_request_date: \"\",\n      total_days: \"\",\n      causal: \"\",\n      clausulas: \"\",\n      clausulas_request: [],\n      person_charge: \"\",\n      message: \"\",\n      tipo_solicitud: \"\",\n      trabajadores: [],\n      step: this.stp,\n      correct_date: false,\n      modal_show: false,\n      submitting: false\n    };\n  },\n  validations: {\n    tipo_solicitud: {\n      required: required\n    },\n    interventor: {\n      required: required\n    },\n    contratista: {\n      required: required\n    },\n    start_request_date: {\n      required: required\n    },\n    end_request_date: {\n      required: required\n    },\n    total_days: {\n      required: required\n    },\n    causal: {\n      required: required\n    },\n    person_charge: {\n      required: required\n    }\n  },\n  computed: _objectSpread({}, mapState(['allpersonas', 'personasInterventor', 'valuex', 'valuey', 'contratistaStore', 'interventorStore', 'personasContratista', 'clauses', 'causals', 'types_request', 'personasResponsable', 'responsableStore'])),\n  methods: _objectSpread({}, mapActions(['getPersonas', 'updatePersonasInterventorAction', 'updatePersonasContratistaAction', 'updatePersonasResponsableAction']), {\n    saveContinueOne: function saveContinueOne() {},\n    changeMsg: function changeMsg(event) {\n      this.message = event.target.value;\n      this.$emit('msgChanged', this.message);\n    },\n    changeInterventor: function changeInterventor() {\n      this.$emit('changeInter', this.interventor);\n    },\n    changeContratista: function changeContratista() {\n      this.$emit('changeContra', this.contratista);\n    },\n    changeStartRequestDate: function changeStartRequestDate() {\n      this.$emit('changeStartRequestD', this.start_request_date);\n    },\n    changeRequestType: function changeRequestType() {\n      this.$emit('changeRequestT', this.tipo_solicitud);\n    },\n    changeEndRequestDate: function changeEndRequestDate() {\n      var sd = new Date(this.start_request_date);\n      var ed = new Date(this.end_request_date);\n\n      if (sd > ed) {\n        this.correct_date = true;\n        this.total_days = 0;\n      } else {\n        this.correct_date = false;\n        sd.setDate(sd.getDate() + 1);\n        ed.setDate(ed.getDate() + 1);\n        var differentDays = Math.ceil(Math.abs(ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n        this.total_days = differentDays + 1;\n      }\n\n      this.changeTotalDays();\n    },\n    changeTotalDays: function changeTotalDays() {\n      this.$emit('changeTotalD', this.total_days);\n    },\n    changeCausalRequest: function changeCausalRequest() {\n      this.$emit('changeCausal', this.causal);\n    },\n    changeClausulasRequest: function changeClausulasRequest() {\n      var emitClausulas = [];\n\n      for (var k in this.clausulas) {\n        emitClausulas.push(this.clausulas[k]._id);\n      }\n\n      this.$emit('changeClausulas', emitClausulas);\n    },\n    changePersonCharge: function changePersonCharge() {\n      this.$emit('changePerson', this.person_charge);\n    },\n    cancel: function cancel() {\n      var _this = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this.$router.push({\n                name: 'requests'\n              });\n            }\n          });\n        }\n      });\n    },\n    saveContinue: function saveContinue() {\n      var _this2 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n\n        for (var k in this.clausulas) {\n          this.clausulas_request.push(this.clausulas[k]._id);\n        }\n\n        axios.post(API_IP + \"/request\", {\n          numero_solicitud: \"\",\n          tipo_solicitud: this.tipo_solicitud._id,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          valor_solicitud: 0,\n          justificacion: \"\",\n          justificacion_adicional: \"\",\n          causal_seleccion: this.causal._id,\n          objetivo_general: \"\",\n          clausulas: this.clausulas_request,\n          especificaciones_tecnicas: [],\n          obligaciones_especificas: [],\n          rubros: [],\n          trabajadores: [{\n            persona: this.contratista._id,\n            tipo: \"Contratista\"\n          }, {\n            persona: this.interventor._id,\n            tipo: \"Interventor\"\n          }, {\n            persona: this.person_charge._id,\n            tipo: \"Responsable\"\n          }]\n        }).then(function (response) {\n          console.log(response);\n\n          _this2.$swal({\n            title: 'Exito!',\n            text: 'Se creo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              _this2.$emit('saveObject', response.data);\n\n              _this2.submitting = false;\n              _this2.step++;\n\n              _this2.$emit('nextStep', _this2.step);\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this2.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this2.submitting = false;\n        });\n      }\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson: function showModalCreatePerson() {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson: function closeModalCreatePerson(value) {\n      this.modal_show = value;\n\n      if (this.modal_show === true) {\n        this.$modal.hide('create-person');\n      }\n    },\n    showModalCreateClause: function showModalCreateClause() {\n      this.modal_show = false;\n      this.$modal.show('create-clause');\n    },\n    closeModalCreateClause: function closeModalCreateClause(value) {\n      this.modal_show = value;\n\n      if (this.modal_show === true) {\n        this.$modal.hide('create-clause');\n      }\n    }\n  }),\n  created: function created() {\n    this.$store.dispatch('loadData');\n  }\n};",{"version":3,"sources":["CreateRequestA.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:50px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <modal name=\"create-person\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n          <create-person\n          :hide_modal=\"modal_show\"\n          @modalShow=\"closeModalCreatePerson\"\n          ></create-person>\n        </modal>\n        <modal name=\"create-clause\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n          <create-clause\n          :hide_modal=\"modal_show\"\n          @modalShow=\"closeModalCreateClause\"\n          ></create-clause>\n        </modal>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\">\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_solicitud.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Seleccione tipo de solicitud:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"box1\" v-model.trim=\"$v.tipo_solicitud.$model\" :options=\"types_request\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un tipo de solicitud\" @input=\"changeRequestType\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_solicitud.$dirty && !$v.tipo_solicitud.required\">Es requerido un tipo de solicitud</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.interventor.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Seleccione interventor:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"box1\" v-model.trim=\"$v.interventor.$model\" :options=\"personasInterventor\" :value=\"interventorStore\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\"  @input=\"updatePersonasInterventorAction\" @close=\"changeInterventor\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.interventor.$dirty && !$v.interventor.required\">Es requerido un interventor</div>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.contratista.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"contratistas\">Seleccione contratista:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"box2\" v-model.trim=\"$v.contratista.$model\" :options=\"personasContratista\" :value=\"contratistaStore\" track-by=\"name\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasContratistaAction\" @close=\"changeContratista\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.contratista.$dirty && !$v.contratista.required\">Es requerido un contratista</div>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Plazo </h3>\n              <div>&nbsp;</div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <label for=\"startDate\">Fecha inicio:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.start_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.start_request_date.$model\" class=\"form-control\" id=\"startDate\" aria-describedby=\"startDate\" @input=\"changeStartRequestDate\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.start_request_date.$dirty && !$v.start_request_date.required\">Es requerida una fecha de inicio</div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <label for=\"endDate\">Fecha final:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.end_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.end_request_date.$model\" class=\"form-control\" id=\"endDate\" aria-describedby=\"endDate\" @input=\"changeEndRequestDate\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.end_request_date.$dirty && !$v.end_request_date.required\">Es requerida una fecha final</div>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"correct_date\">La fecha final no puede ser menor a la fecha de inicio</div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.total_days.$error }\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"totalDays\">Total en dias:</label>\n                  </div>\n                  <div class=\"col-5\">\n                    <input type=\"text\" v-model.trim=\"$v.total_days.$model\" class=\"form-control\" id=\"totalDays\" aria-describedby=\"totalDays\" placeholder=\"Total\" disabled>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.total_days.$dirty && !$v.total_days.required\">Es requerido un total de dias</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.causal.$error }\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"selectionCausal\">Causal de selección:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model.trim=\"$v.causal.$model\" :options=\"causals\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Causal\" @input=\"changeCausalRequest\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.causal.$dirty && !$v.causal.required\">Es requerido un causal de selección</div>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Clausulas adicionales (marcar) </h3>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\">\n                    <multiselect v-model=\"clausulas\" :options=\"clauses\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Escoja las clausulas\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\" @input=\"changeClausulasRequest\">\n                    </multiselect>\n                  </div>\n                </div>\n                <div class=\"col-auto\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreateClause()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"plus\" size=\"lg\"></font-awesome-icon>\n                    Adicionar otras\n                  </button>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <h3 style=\"color:#003e1e; text-align:center;\"> Si tiene clausula de responsabilidad de bienes por favor seleccione el responsable de los bienes </h3>\n              <div>&nbsp;</div>\n              <div class=\"form-group\" >\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Personas a cargo:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model=\"person_charge\" :options=\"personasResponsable\" track-by=\"_id\" label=\"name\" :value=\"responsableStore\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasResponsableAction\" @close=\"changePersonCharge\">\n                    </multiselect>\n                  </div>\n                  <div class=\"col\">\n                    <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </button>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"correct_date || submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                    Guardar y continuar\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                    Cancelar\n                  </button>\n                </div>\n              </div>\n            </form>\n            <br>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../../persons/CreatePersonModal.vue'\nimport CreateClause from '../../clauses/CreateClauseModal.vue'\n\nvar API_IP = process.env.VUE_APP_API_IP\nconst { mapActions, mapState } = Vuex\n\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    profesores:[],\n    contratistas:[],\n    planta:[],\n    interventorStore:\"\",\n    contratistaStore:\"\",\n    responsableStore:\"\",\n    valuex:\"\",\n    valuey:\"\",\n    allpersonas:[],\n    personasInterventor:[],\n    personasContratista:[],\n    personasResponsable:[],\n    personasInterventorOriginal:[],\n    personasContratistaOriginal:[],\n    personasResponsableOriginal:[],\n    clauses:[],\n    causals:[],\n    types_request:[]\n  },\n  actions: {\n    loadData({commit}) {\n      axios.get(API_IP+\"/person/\").then(response => {\n        var personas=[]\n        for (var k in response.data.data){\n          var person = {}\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n          personas.push(person);\n        }\n        commit('loadPersonas',personas);\n        axios.get(API_IP+\"/person/\",{params:\"profesor\"}).then(response => {\n          var profesores=[]\n          for (var k in response.data.data){\n            var profesor = {}\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n            profesores.push(profesor);\n          }\n          commit('loadProfesores',profesores);\n          axios.get(API_IP+\"/person/\",{params:\"contratista\"}).then(response => {\n            var contratistas=[]\n            for (var k in response.data.data){\n              var contratista = {}\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n              contratistas.push(contratista);\n            }\n            commit('loadContratistas',contratistas);\n            axios.get(API_IP+\"/person/\",{params:\"planta\"}).then(response => {\n              var plantas=[]\n              for (var k in response.data.data){\n                var planta = {}\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n                plantas.push(planta);\n              }\n              commit('loadPlanta',plantas);\n              axios\n              .get(API_IP+\"/clause/\").then(response => {\n                var clauses=[]\n                for (var k in response.data.data){\n                  var clause = {}\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"name\"] = response.data.data[k].nombre\n                  clauses.push(clause);\n                }\n                commit('loadClauses',clauses);\n                axios\n                .get(API_IP+\"/causalSelection/\").then(response => {\n                  var causals=[]\n                  for (var k in response.data.data){\n                    var causal= {}\n                    causal[\"_id\"] = response.data.data[k]._id;\n                    causal[\"name\"] = response.data.data[k].nombre\n                    causals.push(causal);\n                  }\n                  commit('loadCausals',causals)\n                  axios\n                  .get(API_IP+\"/requesttype/\").then(response => {\n                    var types_request=[]\n                    for (var k in response.data.data){\n                      var type= {}\n                      type[\"_id\"] = response.data.data[k]._id;\n                      type[\"nombre\"] = response.data.data[k].nombre;\n                      types_request.push(type);\n                    }\n                    commit('loadTypesRequest',types_request)\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    },\n    updatePersonasInterventorAction({commit},interventorStore){\n      commit('updatePersonasInterventor',interventorStore)\n    },\n    updatePersonasContratistaAction({commit},contratistaStore){\n      commit('updatePersonasContratista',contratistaStore)\n    },\n    updatePersonasResponsableAction({commit},responsableStore){\n      commit('updatePersonasCargo',responsableStore)\n    }\n  },\n  mutations:{\n    loadContratistas(state,contratistas){\n      state.contratistas=contratistas\n    },\n    loadProfesores(state,profesores){\n      state.profesores=profesores\n    },\n    loadPlanta(state,planta){\n      state.planta=planta\n      state.personasInterventorOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal=state.contratistas;\n      state.personasResponsableOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasInterventor=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista=state.contratistas;\n      state.personasResponsable=state.profesores.concat(state.contratistas).concat(state.planta);\n\n    },\n    loadClauses(state,clauses){\n      state.clauses=clauses;\n    },\n    loadCausals(state,causals){\n      state.causals=causals;\n    },\n    loadTypesRequest(state,types_request){\n      state.types_request=types_request;\n    },\n    loadPersonas(state,personas){\n      state.allpersonas=personas;\n      state.personasInterventor=personas;\n      state.personasContratista=personas;\n    },\n    updatePersonasInterventor(state,interventorStore){\n      state.interventorStore=interventorStore\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person!=state.contratistaStore && person!=state.responsableStore));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person!=interventorStore && person!=state.personaResponsable));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person!=interventorStore && person!=state.contratistaStore));\n    },\n    updatePersonasContratista(state,contratistaStore){\n      state.contratistaStore=contratistaStore\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person!=contratistaStore && person!=state.responsableStore));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person!=state.interventorStore && person!=state.personaResponsable));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person!=state.interventorStore && person!=contratistaStore));\n    },\n    updatePersonasCargo(state,responsableStore){\n      state.responsableStore=responsableStore\n      state.personasContratista=state.personasContratistaOriginal.filter(person=>(person!=state.interventorStore && person!=responsableStore));\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=>(person!=state.contratistaStore && person!=responsableStore ));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person!=state.interventorStore && person!=state.contratistaStore));\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  store,\n  components: {\n    Multiselect,\n    'create-person': CreatePerson,\n    'create-clause': CreateClause\n  },\n  data () {\n    return {\n      interventoresSelect:\"\",\n      contratistasSelect:\"\",\n      interventor:\"\",\n      contratista:\"\",\n      start_request_date:\"\",\n      end_request_date:\"\",\n      total_days:\"\",\n      causal: \"\",\n      clausulas: \"\",\n      clausulas_request:[],\n      person_charge:\"\",\n      message:\"\",\n      tipo_solicitud:\"\",\n      trabajadores:[],\n      step: this.stp,\n      correct_date: false,\n      modal_show: false,\n      submitting: false\n    }\n  },\n  validations: {\n    tipo_solicitud:{required}, interventor:{required}, contratista:{required},\n    start_request_date:{required}, end_request_date:{required},\n    total_days:{required}, causal:{required}, person_charge: {required}\n  },\n  computed:{\n    ...mapState(['allpersonas','personasInterventor','valuex','valuey','contratistaStore','interventorStore','personasContratista','clauses','causals','types_request','personasResponsable','responsableStore'])\n  },\n  methods:{\n    ...mapActions(['getPersonas','updatePersonasInterventorAction','updatePersonasContratistaAction','updatePersonasResponsableAction']),\n    saveContinueOne(){},\n    changeMsg(event){\n      this.message=event.target.value;\n      this.$emit('msgChanged', this.message);\n    },\n    changeInterventor(){\n      this.$emit('changeInter', this.interventor);\n    },\n    changeContratista(){\n      this.$emit('changeContra', this.contratista);\n    },\n    changeStartRequestDate(){\n      this.$emit('changeStartRequestD', this.start_request_date);\n    },\n    changeRequestType(){\n      this.$emit('changeRequestT', this.tipo_solicitud);\n    },\n    changeEndRequestDate(){\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      if (sd > ed) {\n        this.correct_date = true\n        this.total_days=0;\n      } else {\n        this.correct_date = false\n        sd.setDate(sd.getDate()+1)\n        ed.setDate(ed.getDate()+1)\n        var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n        this.total_days=differentDays+1;\n      }\n      this.changeTotalDays();\n    },\n    changeTotalDays(){\n      this.$emit('changeTotalD',this.total_days)\n    },\n    changeCausalRequest(){\n      this.$emit('changeCausal',this.causal)\n    },\n    changeClausulasRequest(){\n      var emitClausulas=[]\n      for(var k in this.clausulas){\n        emitClausulas.push(this.clausulas[k]._id)\n      }\n      this.$emit('changeClausulas',emitClausulas)\n    },\n    changePersonCharge(){\n      this.$emit('changePerson',this.person_charge)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        for(var k in this.clausulas){\n          this.clausulas_request.push(this.clausulas[k]._id)\n        }\n        axios\n        .post(API_IP+\"/request\", {\n          numero_solicitud: \"\",\n          tipo_solicitud:this.tipo_solicitud._id,\n          fecha_inicio:this.start_request_date,\n          fecha_final: this.end_request_date,\n          valor_solicitud:0,\n          justificacion:\"\",\n          justificacion_adicional:\"\",\n          causal_seleccion:this.causal._id,\n          objetivo_general:\"\",\n          clausulas:this.clausulas_request,\n          especificaciones_tecnicas:[],\n          obligaciones_especificas:[],\n          rubros:[],\n          trabajadores:[{persona:this.contratista._id,tipo:\"Contratista\"},{persona:this.interventor._id,tipo:\"Interventor\"},{persona:this.person_charge._id,tipo:\"Responsable\"}]\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.$emit('saveObject',response.data);\n              this.submitting = false;\n              this.step++\n              this.$emit('nextStep', this.step)\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n      }\n    },\n    showModalCreateClause () {\n      this.modal_show = false;\n      this.$modal.show('create-clause');\n    },\n    closeModalCreateClause (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-clause');\n      }\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/create"}]}