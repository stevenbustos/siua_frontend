{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestE.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestE.vue","mtime":1546444218008},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex';\nimport router from '../../../router'\nimport { required } from 'vuelidate/lib/validators'\nimport { mapGetters } from 'vuex'\nimport {axios} from '../../../helpers/axios';\n\nvar API_IP = process.env.VUE_APP_API_IP\n\nfunction initialState(){\n  var initialState={\n    allbudgets:[],\n    showrub:false,\n    rubrosOptions:[],\n    request:{},\n    request_budgets:[]\n  };\n  return initialState\n}\nconst { mapActions, mapState } = Vuex\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:initialState,\n  getters:{\n    getRequestData: state =>{\n      return state.request;\n    },\n    getRequestBudgets: state =>{\n      return state.request_budgets;\n    }\n  },\n  actions: {\n    loadData({commit}) {\n      commit('reset')\n      axios\n      .get(API_IP+'/budget')\n      .then(response => {\n        var budgets=[]\n        for(var k in response.data.data) {\n          var budget = {}\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"]=[]\n          budget[\"activeRub\"]=false\n          for(var j in budget.rubros){\n            var bud={}\n            bud[\"_id\"]=budget.rubros[j].rubro._id;\n            bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n            bud[\"saldo\"]=budget.rubros[j].saldo;\n            bud[\"egreso\"]=budget.rubros[j].egreso;\n            budget.optionBudget.push(bud)\n          }\n          budget.activeRub=true\n          budgets.push(budget);\n        }\n        commit('loadBudgets',budgets);\n\n        axios\n        .get(API_IP+'/request/'+router.currentRoute.params.id)\n        .then(response => {\n          var requestData = {}\n          // Parametros necesarios en esta vista\n          requestData['obligations'] = response.data.data.obligaciones_especificas\n          // Parametros necesarios para el update general\n          requestData['justification'] = response.data.data.justificacion\n          requestData['aditional_justification'] = response.data.data.justificacion_adicional\n          requestData['general_objective'] = response.data.data.objetivo_general\n          requestData['place'] = response.data.data.ciudad\n          requestData['tipo_solicitud'] = response.data.data.tipo_solicitud\n          requestData['trabajadores'] = response.data.data.trabajadores\n          requestData['start_request_date']= response.data.data.fecha_inicio.substring(0,10)\n          requestData['end_request_date'] = response.data.data.fecha_final.substring(0,10)\n          //Funcion para el total de dias\n          requestData['total_days']=response.data.data.total_dias;\n          requestData['causal']= response.data.data.causal_seleccion\n          requestData['clausulas'] = response.data.data.clausulas\n          requestData['request_auditoria'] = response.data.data.auditoria\n          requestData['request_id'] = response.data.data._id\n          requestData['request_state'] = response.data.data.estado\n          requestData['request_number'] = response.data.data.numero_solicitud\n          requestData['request_value'] = response.data.data.valor_solicitud\n          requestData['especifications'] = response.data.data.especificaciones_tecnicas\n          requestData['request_budget'] = response.data.data.rubros\n          requestData['payment_amount'] = response.data.data.cantidad_pagos\n          requestData['payment_type'] = response.data.data.tipo_pago\n          // Parametros usados en el padre\n          requestData['request_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n          requestData['request_type_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n\n          commit('loadRequest',requestData);\n        });\n      })\n    },\n    updateShowRub({commit},showrub){\n      commit('toggleRub',showrub)\n    },\n    addOptionRubro({commit},rub){\n      commit('addRub',rub)\n    },\n    removeOptionRubro({commit},bud){\n      commit('removeRub',bud)\n    }\n  },\n  mutations:{\n    reset(state){\n      const s = initialState()\n      Object.keys(s).forEach(key => {\n        state[key] = s[key]\n      })\n    },\n    loadRequest(state,request){\n      state.request=request;\n      for(var k in state.request.request_budget){\n        var budget = state.request.request_budget[k]\n        budget[\"presupuesto_name\"] = request.request_budget[k].presupuesto.nombre\n        budget[\"rubro_name\"] = request.request_budget[k].rubro.nombre\n        state.request_budgets.push(budget)\n      }\n      console.log(state.request_budgets);\n    },\n    loadBudgets(state,budgets){\n      state.allbudgets=budgets;\n    },\n    toggleRub(state){\n      state.showrub=true\n    },\n    addRub(state,rub){\n      var found = state.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      console.log(found);\n      if (found != undefined && found != -1) {\n        state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n      }\n    },\n    removeRub(state,budget){\n      var found = state.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect\n  },\n  store,\n  data () {\n    return {\n      currentRequest:{},\n      shared_options: [\"Si\",\"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      allRequestData:{},\n      budget_request: [],\n      request_value: \"\",\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      newBudget2:{\n        presupuesto2: '',\n        value2: '',\n        rubros2:[],\n      },\n      step: this.stp,\n      submitting: false\n    }\n  },\n  validations: {\n    request_value: { required }\n  },\n  computed:{\n    ...mapState(['allbudgets','showrub','rubrosOptions','request','request_budgets']),\n    ...mapGetters(['getRequestData','getRequestBudgets'])\n  },\n  mounted(){\n  },\n  watch:{\n    getRequestData(newValue){\n      this.currentRequest = newValue;\n      this.request_value=newValue.request_value\n      // console.log(this.currentRequest);\n    },\n    getRequestBudgets(newValue){\n      this.budget_request=newValue;\n    }\n  },\n  methods:{\n    ...mapActions(['updateShowRub','addOptionRubro']),\n\n    relo(){\n      console.log(this.$store.state.rubrosOptions);\n      this.$store.state.rubrosOptions=[]\n      console.log(this.$store.state.rubrosOptions);\n    },\n    remove(index,idbudget,idrub,namerub){\n      var rub={}\n      rub[\"presupuesto\"]=idbudget\n      rub[\"_id\"]=idrub\n      rub[\"nombre\"]=namerub\n      this.budget_request.splice(index,1)\n      this.$store.dispatch('addOptionRubro',rub)\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          auditoria: this.currentRequest.request_auditoria,\n          clausulas: this.currentRequest.clausulas,\n          estado: this.currentRequest.request_state,\n          _id: this.currentRequest.request_id,\n          numero_solicitud: this.currentRequest.request_number,\n          tipo_solicitud: this.currentRequest.tipo_solicitud,\n          fecha_inicio: this.currentRequest.start_request_date,\n          fecha_final: this.currentRequest.end_request_date,\n          valor_solicitud: (this.request_value != \"\")? parseInt(this.request_value) : parseInt(this.currentRequest.request_value),\n          justificacion: this.currentRequest.justification,\n          justificacion_adicional:this.currentRequest.aditional_justification,\n          objetivo_general:this.currentRequest.general_objective,\n          especificaciones_tecnicas:this.currentRequest.especifications,\n          obligaciones_especificas:this.currentRequest.obligations,\n          rubros:this.budget_request,\n          trabajadores: this.currentRequest.trabajadores,\n          ciudad:this.currentRequest.place\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.$emit('saveObject',response.data)\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value)\n      && this.newBudget.rubros.value !== \"\") {\n        if(this.newBudget.rubros.value < this.newBudget.rubros.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n          budget[\"rubro\"] = this.newBudget.rubros._id\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value)\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso)\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo)\n\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value)\n      && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value < this.newBudget2.rubros2.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name\n          budget[\"rubro\"] = this.newBudget2.rubros2._id\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value)\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray(){\n      this.no_value = false\n      if(this.budget_request.length != 0){\n        for(var k in this.budget_request){\n          var rub={}\n          rub[\"presupuesto\"]=this.budget_request[k].presupuesto\n          rub[\"_id\"]=this.budget_request[k].rubro\n          rub[\"nombre\"]=this.budget_request[k].rubro_name\n          this.$store.dispatch('addOptionRubro',rub)\n        }\n        this.budget_request = []\n      }\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.getRequestData.tipo_solicitud.nombre.toLowerCase() ,id: this.getRequestData.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n",{"version":3,"sources":["UpdateRequestE.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmfile":"UpdateRequestE.vue","sourceRoot":"src/components/requests/update","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.request_value.$error }\">\n                    <label for=\"number\">Valor de la solicitud:</label>\n                    <div class=\"input-group mb-3\">\n                      <input v-model=\"request_value\" type=\"number\" class=\"form-control\"  aria-describedby=\"number\" placeholder=\"Valor de solicitud\" @input=\"changeValueRequest\">\n                      <div class=\"input-group-append\">\n                        <span class=\"input-group-text\">$</span>\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.request_value.$dirty && !$v.request_value.required\">Es requerido el valor de la solicitud</div>\n                    </div>\n                  </div>\n                  <p>\n                    ¿Esta orden se hara con recursos compartidos?\n                  </p>\n                  <div class=\"form-group\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <multiselect v-model=\"shared_resources\" :options=\"shared_options\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                        </multiselect>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: Si -->\n                  <div v-if=\"shared_resources === 'Si' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <br>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h5>\n                      Dependencia aportante\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget2.presupuesto2\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget2.rubros2=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget2.presupuesto2.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget2.presupuesto2.name}}:</label>\n                          <multiselect v-model=\"newBudget2.rubros2\" :options=\"newBudget2.presupuesto2.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget2.rubros2.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget2.rubros2.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget2.rubros2.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>}\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget2\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: No -->\n                  <div v-if=\"shared_resources === 'No' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <hr>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <br>\n        <div class=\"row\">\n          <div class=\"col\">\n            <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n              <thead style=\"background-color: #003e1e; color:white;\">\n                <tr>\n                  <th scope=\"col\">Presupuesto</th>\n                  <th scope=\"col\">Rubro</th>\n                  <th scope=\"col\">Valor</th>\n                  <th scope=\"col\">Acción</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for='(budget, index) in (budget_request)' :key='index'>\n                  <td>{{budget.presupuesto_name}}</td>\n                  <td>{{budget.rubro_name}}</td>\n                  <td>{{budget.valor}}$</td>\n                  <td>\n                    <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"remove(index,budget.presupuesto,budget.rubro,budget.rubro_name)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex';\nimport router from '../../../router'\nimport { required } from 'vuelidate/lib/validators'\nimport { mapGetters } from 'vuex'\nimport {axios} from '../../../helpers/axios';\n\nvar API_IP = process.env.VUE_APP_API_IP\n\nfunction initialState(){\n  var initialState={\n    allbudgets:[],\n    showrub:false,\n    rubrosOptions:[],\n    request:{},\n    request_budgets:[]\n  };\n  return initialState\n}\nconst { mapActions, mapState } = Vuex\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:initialState,\n  getters:{\n    getRequestData: state =>{\n      return state.request;\n    },\n    getRequestBudgets: state =>{\n      return state.request_budgets;\n    }\n  },\n  actions: {\n    loadData({commit}) {\n      commit('reset')\n      axios\n      .get(API_IP+'/budget')\n      .then(response => {\n        var budgets=[]\n        for(var k in response.data.data) {\n          var budget = {}\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"]=[]\n          budget[\"activeRub\"]=false\n          for(var j in budget.rubros){\n            var bud={}\n            bud[\"_id\"]=budget.rubros[j].rubro._id;\n            bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n            bud[\"saldo\"]=budget.rubros[j].saldo;\n            bud[\"egreso\"]=budget.rubros[j].egreso;\n            budget.optionBudget.push(bud)\n          }\n          budget.activeRub=true\n          budgets.push(budget);\n        }\n        commit('loadBudgets',budgets);\n\n        axios\n        .get(API_IP+'/request/'+router.currentRoute.params.id)\n        .then(response => {\n          var requestData = {}\n          // Parametros necesarios en esta vista\n          requestData['obligations'] = response.data.data.obligaciones_especificas\n          // Parametros necesarios para el update general\n          requestData['justification'] = response.data.data.justificacion\n          requestData['aditional_justification'] = response.data.data.justificacion_adicional\n          requestData['general_objective'] = response.data.data.objetivo_general\n          requestData['place'] = response.data.data.ciudad\n          requestData['tipo_solicitud'] = response.data.data.tipo_solicitud\n          requestData['trabajadores'] = response.data.data.trabajadores\n          requestData['start_request_date']= response.data.data.fecha_inicio.substring(0,10)\n          requestData['end_request_date'] = response.data.data.fecha_final.substring(0,10)\n          //Funcion para el total de dias\n          requestData['total_days']=response.data.data.total_dias;\n          requestData['causal']= response.data.data.causal_seleccion\n          requestData['clausulas'] = response.data.data.clausulas\n          requestData['request_auditoria'] = response.data.data.auditoria\n          requestData['request_id'] = response.data.data._id\n          requestData['request_state'] = response.data.data.estado\n          requestData['request_number'] = response.data.data.numero_solicitud\n          requestData['request_value'] = response.data.data.valor_solicitud\n          requestData['especifications'] = response.data.data.especificaciones_tecnicas\n          requestData['request_budget'] = response.data.data.rubros\n          requestData['payment_amount'] = response.data.data.cantidad_pagos\n          requestData['payment_type'] = response.data.data.tipo_pago\n          // Parametros usados en el padre\n          requestData['request_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n          requestData['request_type_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n\n          commit('loadRequest',requestData);\n        });\n      })\n    },\n    updateShowRub({commit},showrub){\n      commit('toggleRub',showrub)\n    },\n    addOptionRubro({commit},rub){\n      commit('addRub',rub)\n    },\n    removeOptionRubro({commit},bud){\n      commit('removeRub',bud)\n    }\n  },\n  mutations:{\n    reset(state){\n      const s = initialState()\n      Object.keys(s).forEach(key => {\n        state[key] = s[key]\n      })\n    },\n    loadRequest(state,request){\n      state.request=request;\n      for(var k in state.request.request_budget){\n        var budget = state.request.request_budget[k]\n        budget[\"presupuesto_name\"] = request.request_budget[k].presupuesto.nombre\n        budget[\"rubro_name\"] = request.request_budget[k].rubro.nombre\n        state.request_budgets.push(budget)\n      }\n      console.log(state.request_budgets);\n    },\n    loadBudgets(state,budgets){\n      state.allbudgets=budgets;\n    },\n    toggleRub(state){\n      state.showrub=true\n    },\n    addRub(state,rub){\n      var found = state.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      console.log(found);\n      if (found != undefined && found != -1) {\n        state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n      }\n    },\n    removeRub(state,budget){\n      var found = state.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect\n  },\n  store,\n  data () {\n    return {\n      currentRequest:{},\n      shared_options: [\"Si\",\"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      allRequestData:{},\n      budget_request: [],\n      request_value: \"\",\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      newBudget2:{\n        presupuesto2: '',\n        value2: '',\n        rubros2:[],\n      },\n      step: this.stp,\n      submitting: false\n    }\n  },\n  validations: {\n    request_value: { required }\n  },\n  computed:{\n    ...mapState(['allbudgets','showrub','rubrosOptions','request','request_budgets']),\n    ...mapGetters(['getRequestData','getRequestBudgets'])\n  },\n  mounted(){\n  },\n  watch:{\n    getRequestData(newValue){\n      this.currentRequest = newValue;\n      this.request_value=newValue.request_value\n      // console.log(this.currentRequest);\n    },\n    getRequestBudgets(newValue){\n      this.budget_request=newValue;\n    }\n  },\n  methods:{\n    ...mapActions(['updateShowRub','addOptionRubro']),\n\n    relo(){\n      console.log(this.$store.state.rubrosOptions);\n      this.$store.state.rubrosOptions=[]\n      console.log(this.$store.state.rubrosOptions);\n    },\n    remove(index,idbudget,idrub,namerub){\n      var rub={}\n      rub[\"presupuesto\"]=idbudget\n      rub[\"_id\"]=idrub\n      rub[\"nombre\"]=namerub\n      this.budget_request.splice(index,1)\n      this.$store.dispatch('addOptionRubro',rub)\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          auditoria: this.currentRequest.request_auditoria,\n          clausulas: this.currentRequest.clausulas,\n          estado: this.currentRequest.request_state,\n          _id: this.currentRequest.request_id,\n          numero_solicitud: this.currentRequest.request_number,\n          tipo_solicitud: this.currentRequest.tipo_solicitud,\n          fecha_inicio: this.currentRequest.start_request_date,\n          fecha_final: this.currentRequest.end_request_date,\n          valor_solicitud: (this.request_value != \"\")? parseInt(this.request_value) : parseInt(this.currentRequest.request_value),\n          justificacion: this.currentRequest.justification,\n          justificacion_adicional:this.currentRequest.aditional_justification,\n          objetivo_general:this.currentRequest.general_objective,\n          especificaciones_tecnicas:this.currentRequest.especifications,\n          obligaciones_especificas:this.currentRequest.obligations,\n          rubros:this.budget_request,\n          trabajadores: this.currentRequest.trabajadores,\n          ciudad:this.currentRequest.place\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.$emit('saveObject',response.data)\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value)\n      && this.newBudget.rubros.value !== \"\") {\n        if(this.newBudget.rubros.value < this.newBudget.rubros.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n          budget[\"rubro\"] = this.newBudget.rubros._id\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value)\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso)\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo)\n\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value)\n      && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value < this.newBudget2.rubros2.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name\n          budget[\"rubro\"] = this.newBudget2.rubros2._id\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value)\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray(){\n      this.no_value = false\n      if(this.budget_request.length != 0){\n        for(var k in this.budget_request){\n          var rub={}\n          rub[\"presupuesto\"]=this.budget_request[k].presupuesto\n          rub[\"_id\"]=this.budget_request[k].rubro\n          rub[\"nombre\"]=this.budget_request[k].rubro_name\n          this.$store.dispatch('addOptionRubro',rub)\n        }\n        this.budget_request = []\n      }\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.getRequestData.tipo_solicitud.nombre.toLowerCase() ,id: this.getRequestData.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n</script>\n"]}]}