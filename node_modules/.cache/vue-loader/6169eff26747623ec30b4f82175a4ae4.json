{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestD.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestD.vue","mtime":1548798409253},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {axios,verifyPermits,putModulePermit} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'object'],\n  data () {\n    return {\n      numMod:\"\",\n      permitAll:[0,1,2,3,4],\n      permitsRequest:[],\n      obligations: [{\n        descripcion: '',\n        numero: ''\n      }],\n      step: this.stp,\n      obj:this.object,\n      submitting: false\n    }\n  },\n  validations: {\n    obligations: {\n      required,\n      $each: {\n        descripcion: { required },\n        numero: { required }\n      }\n    }\n  },\n  mounted(){\n    this.loadData()\n  },\n  methods: {\n    async loadData(){\n      let tipo = this.obj.tipo_solicitud\n      if (tipo.nombre === \"ODS\") {\n        this.numMod = 9\n        this.permitsRequest=await verifyPermits(9,this.permitAll)\n      }\n      else if (tipo.nombre === \"ODC\") {\n        this.numMod = 10\n        this.permitsRequest=await verifyPermits(10,this.permitAll)\n      }\n      else if (tipo.nombre === \"ATI\") {\n        this.numMod = 11\n        this.permitsRequest=await verifyPermits(11,this.permitAll)\n      }\n    },\n    addForm() {\n      let newObject = {\n        descripcion: '',\n        numero: ''\n      }\n      this.obligations.push(newObject)\n    },\n    delForm(index) {\n      this.obligations.splice(index,1)\n    },\n    changeObligations(){\n      this.$emit('changeObliga', this.obligations);\n    },\n    async saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n\n        if (this.permitsRequest[3]) {\n          this.submitting = true;\n          let data = {\n            auditoria:this.obj.auditoria,\n            clausulas:this.obj.clausulas,\n            estado:this.obj.estado,\n            _id:this.obj._id,\n            numero_solicitud:this.obj.numero_solicitud,\n            tipo_solicitud:this.obj.tipo_solicitud,\n            fecha_inicio:this.obj.fecha_inicio,\n            fecha_final:this.obj.fecha_final,\n            valor_solicitud:this.obj.valor_solicitud,\n            justificacion:this.obj.justificacion,\n            justificacion_adicional:this.obj.justificacion_adicional,\n            objetivo_general:this.obj.objetivo_general,\n            especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n            obligaciones_especificas:this.obligations,\n            rubros:this.obj.rubros,\n            trabajadores:this.obj.trabajadores,\n            ciudad:this.obj.ciudad\n          }\n\n          let res = await putModulePermit(this.numMod,3,this.obj._id,data)\n          if (res != undefined && res != null){\n            if (res.res) {\n              this.$swal({\n                title: 'Exito!',\n                text: 'Se actualizo la solicitud con exito.',\n                type: 'success',\n                confirmButtonText: 'Aceptar'\n              }).then((result) => {\n                if (result.value) {\n                  this.$emit('saveObject',res);\n                  this.submitting = false;\n                  this.step++\n                  this.$emit('nextStep', this.step)\n                }\n              });\n            }\n            else if (res.error) {\n              this.$swal({\n                 title: 'Error!',\n                 text: res.error.error.msg,\n                 type: 'error',\n                 confirmButtonText: 'Cerrar'\n               });\n               this.submitting = false;\n            }\n          }\n        }\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["CreateRequestD.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateRequestD.vue","sourceRoot":"src/components/requests/create","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"card text-center\" style=\"background-color: rgba(255, 255, 255, 0.4);\">\n          <div class=\"card-body\">\n            <h1 class=\"card-title\">Obligaciones específicas del contratista.</h1>\n            <p class=\"card-text\">NOTA: Deben ser puntuales y estar directamente relacionadas con el objeto general a ejecutar.</p>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <form v-on:submit.prevent=\"saveContinue\" novalidate>\n          <div v-for=\"(ob, index) in $v.obligations.$each.$iter\" :key=\"index\" class=\"row\">\n            <div class=\"col\">\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                <label for=\"description\">Descripción:</label>\n                <textarea v-model=\"ob.descripcion.$model\" class=\"form-control\" aria-label=\"description\"\n                placeholder=\"Descripción\" :rows=\"6\" :max-rows=\"10\" @input=\"changeObligations\"></textarea>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"ob.descripcion.$dirty && !ob.descripcion.required\">Es requerida una fecha de inicio</div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                <label for=\"number\">Número:</label>\n                <input :value=\"ob.numero.$model = parseInt(index)+1\" type=\"number\" class=\"form-control\" id=\"number\" aria-describedby=\"number\" placeholder=\"Número\" @input=\"changeObligations\" disabled>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"ob.numero.$dirty && !ob.numero.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <button type=\"button\" v-if=\"obligations.length > 1\" class=\"btn btn-primary\" v-on:click=\"delForm(index)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                Quitar obligación especifica\n              </button>\n            </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"addForm\" style=\"background:#003e1e;border-color:#003e1e;\">\n            Añadir obligación especifica\n          </button>\n          <div>&nbsp;</div>\n          <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n              <div class=\"card\" style=\"background-color: rgba(0, 0, 255, 0.2;\">\n                <div class=\"card-body\">\n                  <h1 class=\"card-title text-center\">Nota:</h1>\n                  <p class=\"card-text\">\n                    <ul>\n                      <li>\n                        La solicitud debe tener mínimo una obligación especifica.\n                      </li>\n                      <li>\n                        En el reporte se mantendra las primeras 5  obligaciones, las demás se presentaran en una hoja como anexo.\n                      </li>\n                    </ul>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-8 align-self-center\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                    Cancelar\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                    Anterior\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                    Guardar y continuar\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {axios,verifyPermits,putModulePermit} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'object'],\n  data () {\n    return {\n      numMod:\"\",\n      permitAll:[0,1,2,3,4],\n      permitsRequest:[],\n      obligations: [{\n        descripcion: '',\n        numero: ''\n      }],\n      step: this.stp,\n      obj:this.object,\n      submitting: false\n    }\n  },\n  validations: {\n    obligations: {\n      required,\n      $each: {\n        descripcion: { required },\n        numero: { required }\n      }\n    }\n  },\n  mounted(){\n    this.loadData()\n  },\n  methods: {\n    async loadData(){\n      let tipo = this.obj.tipo_solicitud\n      if (tipo.nombre === \"ODS\") {\n        this.numMod = 9\n        this.permitsRequest=await verifyPermits(9,this.permitAll)\n      }\n      else if (tipo.nombre === \"ODC\") {\n        this.numMod = 10\n        this.permitsRequest=await verifyPermits(10,this.permitAll)\n      }\n      else if (tipo.nombre === \"ATI\") {\n        this.numMod = 11\n        this.permitsRequest=await verifyPermits(11,this.permitAll)\n      }\n    },\n    addForm() {\n      let newObject = {\n        descripcion: '',\n        numero: ''\n      }\n      this.obligations.push(newObject)\n    },\n    delForm(index) {\n      this.obligations.splice(index,1)\n    },\n    changeObligations(){\n      this.$emit('changeObliga', this.obligations);\n    },\n    async saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n\n        if (this.permitsRequest[3]) {\n          this.submitting = true;\n          let data = {\n            auditoria:this.obj.auditoria,\n            clausulas:this.obj.clausulas,\n            estado:this.obj.estado,\n            _id:this.obj._id,\n            numero_solicitud:this.obj.numero_solicitud,\n            tipo_solicitud:this.obj.tipo_solicitud,\n            fecha_inicio:this.obj.fecha_inicio,\n            fecha_final:this.obj.fecha_final,\n            valor_solicitud:this.obj.valor_solicitud,\n            justificacion:this.obj.justificacion,\n            justificacion_adicional:this.obj.justificacion_adicional,\n            objetivo_general:this.obj.objetivo_general,\n            especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n            obligaciones_especificas:this.obligations,\n            rubros:this.obj.rubros,\n            trabajadores:this.obj.trabajadores,\n            ciudad:this.obj.ciudad\n          }\n\n          let res = await putModulePermit(this.numMod,3,this.obj._id,data)\n          if (res != undefined && res != null){\n            if (res.res) {\n              this.$swal({\n                title: 'Exito!',\n                text: 'Se actualizo la solicitud con exito.',\n                type: 'success',\n                confirmButtonText: 'Aceptar'\n              }).then((result) => {\n                if (result.value) {\n                  this.$emit('saveObject',res);\n                  this.submitting = false;\n                  this.step++\n                  this.$emit('nextStep', this.step)\n                }\n              });\n            }\n            else if (res.error) {\n              this.$swal({\n                 title: 'Error!',\n                 text: res.error.error.msg,\n                 type: 'error',\n                 confirmButtonText: 'Cerrar'\n               });\n               this.submitting = false;\n            }\n          }\n        }\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}