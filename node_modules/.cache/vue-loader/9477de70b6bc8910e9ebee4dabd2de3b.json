{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue","mtime":1546444218000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      valor_solicitud: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: []\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      this.payment_number = response.data.data.cantidad_pagos,\n      this.tipo_pago = response.data.data.tipo_pago,\n      // Necesarios para hacer el PUT\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      // Parametros necesarios para el update general\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.valor_solicitud = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_especifications = response.data.data.especificaciones_tecnicas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      axios.\n      get(API_IP+\"/payment/\",{params:this.$route.params.id})\n      .then(response => {\n        for(var k in response.data){\n          for(var j in response.data[k]){\n            console.log(response.data[k][j]);\n            var payment = {}\n            payment[\"solicitud\"] = response.data[k][j].solicitud._id\n            payment[\"valor\"] = response.data[k][j].valor\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0,10);\n            payment[\"numero\"] = response.data[k][j].numero\n            // payment[\"auditoria\"] = response.data[k][j].auditoria\n            payment[\"estado\"] = response.data[k][j].estado\n            // payment[\"planillas\"] = response.data[k][j].planillas\n            payment[\"_id\"] = response.data[k][j]._id\n            this.request_payments.push(payment);\n            this.payments.push(payment);\n          }\n        }\n        this.requestValueChange();\n      });\n    });\n  },\n  methods: {\n    requestValueChange(){\n      if (this.value !== this.valor_solicitud){\n        for(var k in this.request_payments){\n          axios\n          .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n          .then(response => {\n            console.log(response);\n            this.$swal({\n              title: 'Atención!',\n              html: 'Como el valor de la solicitud cambio<br>Se borraron los pagos relacionados con la solicitud.',\n              type: 'success',\n              confirmButtonText: 'Aceptar'\n            })\n          })\n          .catch(error => {\n            console.log(error);\n            this.$swal({\n              title: 'Error!',\n              text: error.response.data.msg,\n              type: 'error',\n              confirmButtonText: 'Cerrar'\n            });\n          });\n        }\n        this.payment_number= \"\",\n        this.payments= []\n      }\n    },\n    addPay(){\n      this.payments = []\n      var payment_value = (this.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.request_id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    deletePayments(){\n      for(var k in this.request_payments){\n        axios\n        .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se borraron los pagos correctamente',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          })\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        });\n      }\n    },\n    clearPayments(tipo_pago){\n      if(tipo_pago == \"Variable\"){\n        this.$swal({\n          title: 'Espere!',\n          html: '¿Esta seguro que quiere cambiar el tipo de pago?<br>Al cambiar de fijo a variable se borraran los pagos ya creados de la solicitud',\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Si',\n          cancelButtonText: 'No',\n        }).then((result) => {\n          if (result.value) {\n            this.deletePayments();\n            this.payment_number= \"\",\n            this.payments= []\n          } else {\n            this.tipo_pago = \"Fijo\"\n          }\n        });\n      }\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          _id: this.request_id,\n          numero_solicitud:this.request_number,\n          tipo_solicitud:this.tipo_solicitud,\n          fecha_inicio:this.start_request_date,\n          fecha_final:this.end_request_date,\n          valor_solicitud:this.valor_solicitud,\n          justificacion:this.justificacion,\n          justificacion_adicional:this.aditional_justification,\n          objetivo_general:this.general_objective,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          trabajadores:this.trabajadores,\n          ciudad:this.place\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.deletePayments();\n              if(this.tipo_pago === 'Fijo'){\n                // Post a pagos\n                axios\n                .post(API_IP+\"/payment/\", this.payments )\n                .then(response => {\n                  console.log(response);\n                  this.submitting = false;\n                  this.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then((result) => {\n                    if (result.value) {\n                      this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n                    }\n                  });\n                })\n                .catch(error => {\n                  console.log(error);\n                  this.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n                  this.submitting = false;\n                });\n              } else {\n                this.submitting = false;\n                this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n              }\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        })\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('prevStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["UpdateRequestF.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4GA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"UpdateRequestF.vue","sourceRoot":"src/components/requests/update","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <v-dialog/>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_pago.$error }\">\n                <div class=\"row\">\n                  <div class=\"col-auto\">\n                    <label for=\"payment_type\">Forma de pago:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect @input=\"clearPayments(tipo_pago)\" v-model.trim=\"$v.tipo_pago.$model\" :options=\"payment_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_pago.$dirty && !$v.tipo_pago.required\">Es requerido un tipo de pago</div>\n                  </div>\n                </div>\n              </div>\n              <div v-if=\"tipo_pago === 'Fijo' \">\n                <hr>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.payment_number.$error }\">\n                  <div class=\"row\">\n                    <div class=\"col-auto\">\n                      <label for=\"payment_number\">Numéro de pagos:</label>\n                    </div>\n                    <div class=\"col-6\">\n                      <input type=\"number\" @input=\"addPay()\" v-model.trim=\"$v.payment_number.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.payment_number.$dirty && !$v.payment_number.required\">Es requerido el numero de pagos</div>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"parseInt(payment_number) !== 0 && tipo_pago != ''\" class=\"form-group\">\n                  <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                    <thead style=\"background-color: #003e1e; color:white;\">\n                      <tr>\n                        <th scope=\"col\"># de pago</th>\n                        <th scope=\"col\">Valor</th>\n                        <th scope=\"col\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(payment, index) in $v.payments.$each.$iter\" :key=\"index\">\n                        <td>\n                          {{payment.$model.numero}}\n                        </td>\n                        <td>\n                          <div class=\"input-group mb-3\">\n                            <input type=\"number\" :value=\"payment.valor.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\" disabled>\n                            <div class=\"input-group-append\">\n                              <span class=\"input-group-text\">$</span>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                            <input type=\"date\" v-model.trim=\"payment.fecha.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"payment.fecha.$dirty && !payment.fecha.required\">Es requerida una fecha</div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      valor_solicitud: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: []\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      this.payment_number = response.data.data.cantidad_pagos,\n      this.tipo_pago = response.data.data.tipo_pago,\n      // Necesarios para hacer el PUT\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      // Parametros necesarios para el update general\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.valor_solicitud = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_especifications = response.data.data.especificaciones_tecnicas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      axios.\n      get(API_IP+\"/payment/\",{params:this.$route.params.id})\n      .then(response => {\n        for(var k in response.data){\n          for(var j in response.data[k]){\n            console.log(response.data[k][j]);\n            var payment = {}\n            payment[\"solicitud\"] = response.data[k][j].solicitud._id\n            payment[\"valor\"] = response.data[k][j].valor\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0,10);\n            payment[\"numero\"] = response.data[k][j].numero\n            // payment[\"auditoria\"] = response.data[k][j].auditoria\n            payment[\"estado\"] = response.data[k][j].estado\n            // payment[\"planillas\"] = response.data[k][j].planillas\n            payment[\"_id\"] = response.data[k][j]._id\n            this.request_payments.push(payment);\n            this.payments.push(payment);\n          }\n        }\n        this.requestValueChange();\n      });\n    });\n  },\n  methods: {\n    requestValueChange(){\n      if (this.value !== this.valor_solicitud){\n        for(var k in this.request_payments){\n          axios\n          .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n          .then(response => {\n            console.log(response);\n            this.$swal({\n              title: 'Atención!',\n              html: 'Como el valor de la solicitud cambio<br>Se borraron los pagos relacionados con la solicitud.',\n              type: 'success',\n              confirmButtonText: 'Aceptar'\n            })\n          })\n          .catch(error => {\n            console.log(error);\n            this.$swal({\n              title: 'Error!',\n              text: error.response.data.msg,\n              type: 'error',\n              confirmButtonText: 'Cerrar'\n            });\n          });\n        }\n        this.payment_number= \"\",\n        this.payments= []\n      }\n    },\n    addPay(){\n      this.payments = []\n      var payment_value = (this.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.request_id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    deletePayments(){\n      for(var k in this.request_payments){\n        axios\n        .delete(API_IP+'/payment/'+this.request_payments[k]._id)\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se borraron los pagos correctamente',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          })\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        });\n      }\n    },\n    clearPayments(tipo_pago){\n      if(tipo_pago == \"Variable\"){\n        this.$swal({\n          title: 'Espere!',\n          html: '¿Esta seguro que quiere cambiar el tipo de pago?<br>Al cambiar de fijo a variable se borraran los pagos ya creados de la solicitud',\n          type: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Si',\n          cancelButtonText: 'No',\n        }).then((result) => {\n          if (result.value) {\n            this.deletePayments();\n            this.payment_number= \"\",\n            this.payments= []\n          } else {\n            this.tipo_pago = \"Fijo\"\n          }\n        });\n      }\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          clausulas: this.clausulas,\n          estado: this.request_state,\n          _id: this.request_id,\n          numero_solicitud:this.request_number,\n          tipo_solicitud:this.tipo_solicitud,\n          fecha_inicio:this.start_request_date,\n          fecha_final:this.end_request_date,\n          valor_solicitud:this.valor_solicitud,\n          justificacion:this.justificacion,\n          justificacion_adicional:this.aditional_justification,\n          objetivo_general:this.general_objective,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          trabajadores:this.trabajadores,\n          ciudad:this.place\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.deletePayments();\n              if(this.tipo_pago === 'Fijo'){\n                // Post a pagos\n                axios\n                .post(API_IP+\"/payment/\", this.payments )\n                .then(response => {\n                  console.log(response);\n                  this.submitting = false;\n                  this.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then((result) => {\n                    if (result.value) {\n                      this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n                    }\n                  });\n                })\n                .catch(error => {\n                  console.log(error);\n                  this.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n                  this.submitting = false;\n                });\n              } else {\n                this.submitting = false;\n                this.$router.push({ name: 'showrequest', params: { type: this.tipo_solicitud.nombre.toLowerCase() ,id: this.request_id } });\n              }\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        })\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('prevStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}