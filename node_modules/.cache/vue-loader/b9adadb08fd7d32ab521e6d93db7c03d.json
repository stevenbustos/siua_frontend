{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestE.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestE.vue","mtime":1548805204453},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios,requestModulePermit} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\nconst { mapActions, mapState } = Vuex\n\nVue.use(Vuex)\n// const store = new Vuex.Store({\n//   state:{\n//     allbudgets:[],\n//     showrub:false,\n//     rubrosOptions:[]\n//   },\n//   actions: {\n//     loadData({ commit }, id_params) {\n//       console.log(id_params);\n//       axios\n//       .get(API_IP+'/budget')\n//       .then(response => {\n//         var budgets=[]\n//         for(var k in response.data.data) {\n//           var budget = {}\n//           budget[\"_id\"] = response.data.data[k]._id;\n//           budget[\"name\"] = response.data.data[k].nombre;\n//           budget[\"rubros\"] = response.data.data[k].rubros;\n//           budget[\"optionBudget\"]=[]\n//           budget[\"activeRub\"]=false\n//           for(var j in budget.rubros){\n//             var bud={}\n//             bud[\"_id\"]=budget.rubros[j].rubro._id;\n//             bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n//             bud[\"saldo\"]=budget.rubros[j].saldo;\n//             bud[\"egreso\"]=budget.rubros[j].egreso;\n//             budget.optionBudget.push(bud)\n//           }\n//           budget.activeRub=true\n//           budgets.push(budget);\n//         }\n//         commit('loadBudgets',budgets);\n//       })\n//     },\n//     updateShowRub({commit},showrub){\n//       commit('toggleRub',showrub)\n//     },\n//     addOptionRubro({commit},rub){\n//       commit('addRub',rub)\n//     },\n//     removeOptionRubro({commit},bud){\n//       commit('removeRub',bud)\n//     }\n//   },\n//   mutations:{\n//     loadBudgets(state,budgets){\n//       state.allbudgets=budgets;\n//     },\n//     toggleRub(state){\n//       state.showrub=true\n//     },\n//     addRub(state,rub){\n//       var found = state.allbudgets.findIndex(function(element) {\n//         return rub.presupuesto == element._id;\n//       });\n//       state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n//     },\n//     removeRub(state,budget){\n//       var found = state.allbudgets.findIndex(function(element) {\n//         return budget.presupuesto == element._id;\n//       });\n//       var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n//         return budget.rubro == element._id;\n//       })\n//       var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n//       console.log(tmp);\n//     }\n//   }\n// })\n\nexport default {\n  props: ['stp','object'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      allbudgets:[],\n      shared_options: [\"Si\",\"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      step: this.stp,\n      obj:this.object,\n      budget_request: [],\n      request_value: '',\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      newBudget2:{\n        presupuesto2: '',\n        value2: '',\n        rubros2:[],\n      },\n      submitting: false\n    }\n  },\n  validations: {\n    request_value: { required },\n    shared_resources: { required }\n  },\n  mounted(){\n    this.loadData()\n  },\n  methods:{\n    async loadData(){\n      let budgets;\n      let bud = await requestModulePermit(207,0)\n      for(var k in bud) {\n        var budget = {}\n        budget[\"_id\"] = bud[k]._id;\n        budget[\"name\"] = bud[k].nombre;\n        budget[\"rubros\"] = bud[k].rubros;\n        budget[\"optionBudget\"]=[]\n        budget[\"activeRub\"]=false\n        for(var j in budget.rubros){\n          var budTmp={}\n          budTmp[\"_id\"]=budget.rubros[j].rubro._id;\n          budTmp[\"nombre\"]=budget.rubros[j].rubro.nombre;\n          budTmp[\"saldo\"]=budget.rubros[j].saldo;\n          budTmp[\"egreso\"]=budget.rubros[j].egreso;\n          budget.optionBudget.push(budTmp)\n        }\n        budget.activeRub=true\n        this.allbudgets.push(budget);\n      }\n    },\n    removeBudget(index,budget){\n      var rub={}\n      rub[\"presupuesto\"]=budget.presupuesto\n      rub[\"_id\"]=budget.rubro\n      rub[\"nombre\"]=budget.rubro_name\n      rub[\"saldo\"]=budget.saldo\n      rub[\"egreso\"]=budget.egreso\n      this.budget_request.splice(index,1)\n      this.addRub(rub)\n    },\n    addRub(rub){\n      var found = this.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      this.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n    },\n    removeRub(budget){\n      var found = this.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = this.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = this.allbudgets[found].optionBudget.splice(indexRub,1)\n    },\n    // saveContinue(){\n    //   this.$v.$touch()\n    //   if (this.$v.$invalid) {\n    //     this.$swal({\n    //       title: 'Error!',\n    //       text: 'Debe llenar campos necesarios en el formulario',\n    //       type: 'error',\n    //       confirmButtonText: 'Cerrar'\n    //     });\n    //   } else {\n    //     this.submitting = true;\n    //     axios\n    //     .put(API_IP+\"/request/\"+this.obj._id, {\n    //       auditoria:this.obj.auditoria,\n    //       clausulas:this.obj.clausulas,\n    //       estado:this.obj.estado,\n    //       _id:this.obj._id,\n    //       numero_solicitud:this.obj.numero_solicitud,\n    //       tipo_solicitud:this.obj.tipo_solicitud,\n    //       fecha_inicio:this.obj.fecha_inicio,\n    //       fecha_final:this.obj.fecha_final,\n    //       valor_solicitud:this.request_value,\n    //       justificacion:this.obj.justificacion,\n    //       justificacion_adicional:this.obj.justificacion_adicional,\n    //       objetivo_general:this.obj.objetivo_general,\n    //       especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n    //       obligaciones_especificas:this.obligations,\n    //       rubros:this.budget_request,\n    //       trabajadores:this.obj.trabajadores,\n    //       ciudad:this.obj.ciudad\n    //     })\n    //     .then(response => {\n    //       console.log(response);\n    //       this.$swal({\n    //         title: 'Exito!',\n    //         text: 'Se actualizo la solicitud con exito.',\n    //         type: 'success',\n    //         confirmButtonText: 'Aceptar'\n    //       }).then((result) => {\n    //         if (result.value) {\n    //           this.$emit('saveObject',response.data)\n    //           this.submitting = false;\n    //           this.step++;\n    //           this.$emit('nextStep', this.step);\n    //         }\n    //       });\n    //     })\n    //     .catch(error => {\n    //       console.log(error);\n    //       this.$swal({\n    //         title: 'Error!',\n    //         text: error.response.data.error.msg,\n    //         type: 'error',\n    //         confirmButtonText: 'Cerrar'\n    //       });\n    //       this.submitting = false;\n    //     });\n    //   }\n    // },\n    addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value)\n      && this.newBudget.rubros.value !== \"\") {\n        if(this.newBudget.rubros.value < this.newBudget.rubros.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n          budget[\"rubro\"] = this.newBudget.rubros._id\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value)\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso)\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo)\n          this.budget_request.push(budget)\n          this.removeRub(budget)\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value)\n      && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value < this.newBudget2.rubros2.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name\n          budget[\"rubro\"] = this.newBudget2.rubros2._id\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value)\n          this.budget_request.push(budget)\n          this.removeRub(budget)\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true;\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray(){\n      this.no_value = false\n      if(this.budget_request.length != 0){\n        for(var k in this.budget_request){\n          var rub={}\n          rub[\"presupuesto\"]=this.budget_request[k].presupuesto\n          rub[\"_id\"]=this.budget_request[k].rubro\n          rub[\"nombre\"]=this.budget_request[k].rubro_name\n          rub[\"saldo\"]=this.budget_request[k].saldo\n          rub[\"egreso\"]=this.budget_request[k].egreso\n          this.addRub(rub)\n        }\n        this.budget_request = []\n      }\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["CreateRequestE.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiTA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateRequestE.vue","sourceRoot":"src/components/requests/create","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.request_value.$error }\">\n                    <label for=\"number\">Valor de la solicitud:</label>\n                    <div class=\"input-group mb-3\">\n                      <input v-model.trim=\"$v.request_value.$model\" type=\"number\" min=\"0.01\" step=\"0.01\" class=\"form-control\"  aria-describedby=\"number\" placeholder=\"Valor de solicitud\" @input=\"changeValueRequest\">\n                      <div class=\"input-group-append\">\n                        <span class=\"input-group-text\">$</span>\n                      </div>\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.request_value.$dirty && !$v.request_value.required\">Es requerido el valor de la solicitud</div>\n                    </div>\n                  </div>\n                  <p>\n                    ¿Esta orden se hara con recursos compartidos?\n                  </p>\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.shared_resources.$error }\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <multiselect v-on:input=\"clearArray\" v-model.trim=\"$v.shared_resources.$model\" :options=\"shared_options\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                        </multiselect>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.shared_resources.$dirty && !$v.shared_resources.required\">Es requerido el valor de la solicitud</div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: Si -->\n                  <div v-if=\"shared_resources === 'Si' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <br>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Valor\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h5>\n                      Dependencia aportante\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget2.presupuesto2\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget2.rubros2=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget2.presupuesto2.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget2.presupuesto2.name}}:</label>\n                          <multiselect v-model=\"newBudget2.rubros2\" :options=\"newBudget2.presupuesto2.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget2.rubros2.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget2.rubros2.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget2.rubros2.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget2\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                          <thead style=\"background-color: #003e1e; color:white;\">\n                            <tr>\n                              <th scope=\"col\">Presupuesto</th>\n                              <th scope=\"col\">Rubro</th>\n                              <th scope=\"col\">Valor</th>\n                              <th scope=\"col\">Acción</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for='(budget, index) in budget_request' :key='index'>\n                              <td>{{budget.presupuesto_name}}</td>\n                              <td>{{budget.rubro_name}}</td>\n                              <td>{{budget.valor}}$</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"removeBudget(index,budget)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                                  <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: No -->\n                  <div v-if=\"shared_resources === 'No' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <br>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                              <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                            </div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <div class=\"input-group mb-3\">\n                              <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                              <div class=\"input-group-append\">\n                                <span class=\"input-group-text\">$</span>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <hr>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                          <thead style=\"background-color: #003e1e; color:white;\">\n                            <tr>\n                              <th scope=\"col\">Presupuesto</th>\n                              <th scope=\"col\">Rubro</th>\n                              <th scope=\"col\">Valor</th>\n                              <th scope=\"col\">Acción</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for='(budget, index) in budget_request' :key='index'>\n                              <td>{{budget.presupuesto_name}}</td>\n                              <td>{{budget.rubro_name}}</td>\n                              <td>{{budget.valor}}$</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"removeBudget(index,budget)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                                  <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios,requestModulePermit} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\nconst { mapActions, mapState } = Vuex\n\nVue.use(Vuex)\n// const store = new Vuex.Store({\n//   state:{\n//     allbudgets:[],\n//     showrub:false,\n//     rubrosOptions:[]\n//   },\n//   actions: {\n//     loadData({ commit }, id_params) {\n//       console.log(id_params);\n//       axios\n//       .get(API_IP+'/budget')\n//       .then(response => {\n//         var budgets=[]\n//         for(var k in response.data.data) {\n//           var budget = {}\n//           budget[\"_id\"] = response.data.data[k]._id;\n//           budget[\"name\"] = response.data.data[k].nombre;\n//           budget[\"rubros\"] = response.data.data[k].rubros;\n//           budget[\"optionBudget\"]=[]\n//           budget[\"activeRub\"]=false\n//           for(var j in budget.rubros){\n//             var bud={}\n//             bud[\"_id\"]=budget.rubros[j].rubro._id;\n//             bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n//             bud[\"saldo\"]=budget.rubros[j].saldo;\n//             bud[\"egreso\"]=budget.rubros[j].egreso;\n//             budget.optionBudget.push(bud)\n//           }\n//           budget.activeRub=true\n//           budgets.push(budget);\n//         }\n//         commit('loadBudgets',budgets);\n//       })\n//     },\n//     updateShowRub({commit},showrub){\n//       commit('toggleRub',showrub)\n//     },\n//     addOptionRubro({commit},rub){\n//       commit('addRub',rub)\n//     },\n//     removeOptionRubro({commit},bud){\n//       commit('removeRub',bud)\n//     }\n//   },\n//   mutations:{\n//     loadBudgets(state,budgets){\n//       state.allbudgets=budgets;\n//     },\n//     toggleRub(state){\n//       state.showrub=true\n//     },\n//     addRub(state,rub){\n//       var found = state.allbudgets.findIndex(function(element) {\n//         return rub.presupuesto == element._id;\n//       });\n//       state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n//     },\n//     removeRub(state,budget){\n//       var found = state.allbudgets.findIndex(function(element) {\n//         return budget.presupuesto == element._id;\n//       });\n//       var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n//         return budget.rubro == element._id;\n//       })\n//       var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n//       console.log(tmp);\n//     }\n//   }\n// })\n\nexport default {\n  props: ['stp','object'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      allbudgets:[],\n      shared_options: [\"Si\",\"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      step: this.stp,\n      obj:this.object,\n      budget_request: [],\n      request_value: '',\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      newBudget2:{\n        presupuesto2: '',\n        value2: '',\n        rubros2:[],\n      },\n      submitting: false\n    }\n  },\n  validations: {\n    request_value: { required },\n    shared_resources: { required }\n  },\n  mounted(){\n    this.loadData()\n  },\n  methods:{\n    async loadData(){\n      let budgets;\n      let bud = await requestModulePermit(207,0)\n      for(var k in bud) {\n        var budget = {}\n        budget[\"_id\"] = bud[k]._id;\n        budget[\"name\"] = bud[k].nombre;\n        budget[\"rubros\"] = bud[k].rubros;\n        budget[\"optionBudget\"]=[]\n        budget[\"activeRub\"]=false\n        for(var j in budget.rubros){\n          var budTmp={}\n          budTmp[\"_id\"]=budget.rubros[j].rubro._id;\n          budTmp[\"nombre\"]=budget.rubros[j].rubro.nombre;\n          budTmp[\"saldo\"]=budget.rubros[j].saldo;\n          budTmp[\"egreso\"]=budget.rubros[j].egreso;\n          budget.optionBudget.push(budTmp)\n        }\n        budget.activeRub=true\n        this.allbudgets.push(budget);\n      }\n    },\n    removeBudget(index,budget){\n      var rub={}\n      rub[\"presupuesto\"]=budget.presupuesto\n      rub[\"_id\"]=budget.rubro\n      rub[\"nombre\"]=budget.rubro_name\n      rub[\"saldo\"]=budget.saldo\n      rub[\"egreso\"]=budget.egreso\n      this.budget_request.splice(index,1)\n      this.addRub(rub)\n    },\n    addRub(rub){\n      var found = this.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      this.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n    },\n    removeRub(budget){\n      var found = this.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = this.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = this.allbudgets[found].optionBudget.splice(indexRub,1)\n    },\n    // saveContinue(){\n    //   this.$v.$touch()\n    //   if (this.$v.$invalid) {\n    //     this.$swal({\n    //       title: 'Error!',\n    //       text: 'Debe llenar campos necesarios en el formulario',\n    //       type: 'error',\n    //       confirmButtonText: 'Cerrar'\n    //     });\n    //   } else {\n    //     this.submitting = true;\n    //     axios\n    //     .put(API_IP+\"/request/\"+this.obj._id, {\n    //       auditoria:this.obj.auditoria,\n    //       clausulas:this.obj.clausulas,\n    //       estado:this.obj.estado,\n    //       _id:this.obj._id,\n    //       numero_solicitud:this.obj.numero_solicitud,\n    //       tipo_solicitud:this.obj.tipo_solicitud,\n    //       fecha_inicio:this.obj.fecha_inicio,\n    //       fecha_final:this.obj.fecha_final,\n    //       valor_solicitud:this.request_value,\n    //       justificacion:this.obj.justificacion,\n    //       justificacion_adicional:this.obj.justificacion_adicional,\n    //       objetivo_general:this.obj.objetivo_general,\n    //       especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n    //       obligaciones_especificas:this.obligations,\n    //       rubros:this.budget_request,\n    //       trabajadores:this.obj.trabajadores,\n    //       ciudad:this.obj.ciudad\n    //     })\n    //     .then(response => {\n    //       console.log(response);\n    //       this.$swal({\n    //         title: 'Exito!',\n    //         text: 'Se actualizo la solicitud con exito.',\n    //         type: 'success',\n    //         confirmButtonText: 'Aceptar'\n    //       }).then((result) => {\n    //         if (result.value) {\n    //           this.$emit('saveObject',response.data)\n    //           this.submitting = false;\n    //           this.step++;\n    //           this.$emit('nextStep', this.step);\n    //         }\n    //       });\n    //     })\n    //     .catch(error => {\n    //       console.log(error);\n    //       this.$swal({\n    //         title: 'Error!',\n    //         text: error.response.data.error.msg,\n    //         type: 'error',\n    //         confirmButtonText: 'Cerrar'\n    //       });\n    //       this.submitting = false;\n    //     });\n    //   }\n    // },\n    addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value)\n      && this.newBudget.rubros.value !== \"\") {\n        if(this.newBudget.rubros.value < this.newBudget.rubros.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n          budget[\"rubro\"] = this.newBudget.rubros._id\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value)\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso)\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo)\n          this.budget_request.push(budget)\n          this.removeRub(budget)\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value)\n      && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value < this.newBudget2.rubros2.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name\n          budget[\"rubro\"] = this.newBudget2.rubros2._id\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value)\n          this.budget_request.push(budget)\n          this.removeRub(budget)\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor o igual al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true;\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray(){\n      this.no_value = false\n      if(this.budget_request.length != 0){\n        for(var k in this.budget_request){\n          var rub={}\n          rub[\"presupuesto\"]=this.budget_request[k].presupuesto\n          rub[\"_id\"]=this.budget_request[k].rubro\n          rub[\"nombre\"]=this.budget_request[k].rubro_name\n          rub[\"saldo\"]=this.budget_request[k].saldo\n          rub[\"egreso\"]=this.budget_request[k].egreso\n          this.addRub(rub)\n        }\n        this.budget_request = []\n      }\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}