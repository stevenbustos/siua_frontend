{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestE.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/create/CreateRequestE.vue","mtime":1545321402164},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/home/developer/Documents/SIUA/frontend/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect';\nimport Vuex from 'vuex';\nimport { axios } from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nvar mapActions = Vuex.mapActions,\n    mapState = Vuex.mapState;\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    allbudgets: [],\n    showrub: false,\n    rubrosOptions: []\n  },\n  actions: {\n    loadData: function loadData(_ref, id_params) {\n      var commit = _ref.commit;\n      axios.get(API_IP + '/budget').then(function (response) {\n        var budgets = [];\n\n        for (var k in response.data.data) {\n          var budget = {};\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"] = [];\n          budget[\"activeRub\"] = false;\n\n          for (var j in budget.rubros) {\n            var bud = {};\n            bud[\"_id\"] = budget.rubros[j].rubro._id;\n            bud[\"nombre\"] = budget.rubros[j].rubro.nombre;\n            bud[\"saldo\"] = budget.rubros[j].saldo;\n            bud[\"egreso\"] = budget.rubros[j].egreso;\n            budget.optionBudget.push(bud);\n          }\n\n          budget.activeRub = true;\n          budgets.push(budget);\n        }\n\n        commit('loadBudgets', budgets);\n      });\n    },\n    updateShowRub: function updateShowRub(_ref2, showrub) {\n      var commit = _ref2.commit;\n      commit('toggleRub', showrub);\n    },\n    addOptionRubro: function addOptionRubro(_ref3, rub) {\n      var commit = _ref3.commit;\n      commit('addRub', rub);\n    },\n    removeOptionRubro: function removeOptionRubro(_ref4, bud) {\n      var commit = _ref4.commit;\n      commit('removeRub', bud);\n    }\n  },\n  mutations: {\n    loadBudgets: function loadBudgets(state, budgets) {\n      state.allbudgets = budgets;\n    },\n    toggleRub: function toggleRub(state) {\n      state.showrub = true;\n    },\n    addRub: function addRub(state, rub) {\n      var found = state.allbudgets.findIndex(function (element) {\n        return rub.presupuesto == element._id;\n      });\n      state.allbudgets[found].optionBudget.push({\n        \"_id\": rub._id,\n        \"nombre\": rub.nombre,\n        \"saldo\": rub.saldo,\n        \"egreso\": rub.egreso\n      });\n    },\n    removeRub: function removeRub(state, budget) {\n      var found = state.allbudgets.findIndex(function (element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function (element) {\n        return budget.rubro == element._id;\n      });\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub, 1);\n    }\n  }\n});\nexport default {\n  props: ['stp', 'object'],\n  components: {\n    Multiselect: Multiselect\n  },\n  store: store,\n  data: function data() {\n    return {\n      shared_options: [\"Si\", \"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      step: this.stp,\n      obj: this.object,\n      budget_request: [],\n      request_value: '',\n      newBudget: {\n        presupuesto: '',\n        value: '',\n        rubros: []\n      },\n      newBudget2: {\n        presupuesto2: '',\n        value2: '',\n        rubros2: []\n      },\n      submitting: false\n    };\n  },\n  validations: {\n    request_value: {\n      required: required\n    },\n    shared_resources: {\n      required: required\n    }\n  },\n  computed: _objectSpread({}, mapState(['allbudgets', 'showrub', 'rubrosOptions'])),\n  methods: _objectSpread({}, mapActions(['updateShowRub', 'addOptionRubro']), {\n    removeBudget: function removeBudget(index, budget) {\n      var rub = {};\n      rub[\"presupuesto\"] = budget.presupuesto;\n      rub[\"_id\"] = budget.rubro;\n      rub[\"nombre\"] = budget.rubro_name;\n      rub[\"saldo\"] = budget.saldo;\n      rub[\"egreso\"] = budget.egreso;\n      this.budget_request.splice(index, 1);\n      this.$store.dispatch('addOptionRubro', rub);\n    },\n    saveContinue: function saveContinue() {\n      var _this = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios.put(API_IP + \"/request/\" + this.obj._id, {\n          auditoria: this.obj.auditoria,\n          clausulas: this.obj.clausulas,\n          estado: this.obj.estado,\n          _id: this.obj._id,\n          numero_solicitud: this.obj.numero_solicitud,\n          tipo_solicitud: this.obj.tipo_solicitud,\n          fecha_inicio: this.obj.fecha_inicio,\n          fecha_final: this.obj.fecha_final,\n          valor_solicitud: this.request_value,\n          justificacion: this.obj.justificacion,\n          justificacion_adicional: this.obj.justificacion_adicional,\n          objetivo_general: this.obj.objetivo_general,\n          especificaciones_tecnicas: this.obj.especificaciones_tecnicas,\n          obligaciones_especificas: this.obligations,\n          rubros: this.budget_request,\n          trabajadores: this.obj.trabajadores,\n          ciudad: this.obj.ciudad\n        }).then(function (response) {\n          console.log(response);\n\n          _this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              _this.$emit('saveObject', response.data);\n\n              _this.submitting = false;\n              _this.step++;\n\n              _this.$emit('nextStep', _this.step);\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this.submitting = false;\n        });\n      }\n    },\n    addBudget: function addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value) && this.newBudget.rubros.value !== \"\") {\n        if (this.newBudget.rubros.value <= this.newBudget.rubros.saldo) {\n          this.no_value = false;\n          var budget = {};\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id;\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name;\n          budget[\"rubro\"] = this.newBudget.rubros._id;\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre;\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value);\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso);\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo);\n          this.budget_request.push(budget);\n          this.$store.dispatch('removeOptionRubro', budget);\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          };\n          this.changeBudgetRequest();\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true;\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2: function addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value) && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value <= this.newBudget2.rubros2.saldo) {\n          this.no_value = false;\n          var budget = {};\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id;\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name;\n          budget[\"rubro\"] = this.newBudget2.rubros2._id;\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre;\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value);\n          this.budget_request.push(budget);\n          this.$store.dispatch('removeOptionRubro', budget);\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          };\n          this.changeBudgetRequest();\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true;\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray: function clearArray() {\n      this.no_value = false;\n\n      if (this.budget_request.length != 0) {\n        for (var k in this.budget_request) {\n          var rub = {};\n          rub[\"presupuesto\"] = this.budget_request[k].presupuesto;\n          rub[\"_id\"] = this.budget_request[k].rubro;\n          rub[\"nombre\"] = this.budget_request[k].rubro_name;\n          rub[\"saldo\"] = this.budget_request[k].saldo;\n          rub[\"egreso\"] = this.budget_request[k].egreso;\n          this.$store.dispatch('addOptionRubro', rub);\n        }\n\n        this.budget_request = [];\n      }\n    },\n    changeValueRequest: function changeValueRequest() {\n      this.$emit('changeRequestVal', this.request_value);\n    },\n    changeBudgetRequest: function changeBudgetRequest() {\n      this.$emit('changeBudRequest', this.budget_request);\n    },\n    cancel: function cancel() {\n      var _this2 = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this2.$router.push({\n                name: 'requests'\n              });\n            }\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      var _this3 = this;\n\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this3.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this3.$router.push({\n                name: 'updaterequest',\n                params: {\n                  type: _this3.request_type.toLowerCase(),\n                  id: _this3.obj._id\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }),\n  created: function created() {\n    this.$store.dispatch('loadData');\n  }\n};",{"version":3,"sources":["CreateRequestE.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.request_value.$error }\">\n                    <label for=\"number\">Valor de la solicitud:</label>\n                    <input v-model.trim=\"$v.request_value.$model\" type=\"number\" min=\"0.01\" step=\"0.01\" class=\"form-control\"  aria-describedby=\"number\" placeholder=\"Valor de solicitud\" @input=\"changeValueRequest\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.request_value.$dirty && !$v.request_value.required\">Es requerido el valor de la solicitud</div>\n                  </div>\n                  <p>\n                    ¿Esta orden se hara con recursos compartidos?\n                  </p>\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.shared_resources.$error }\">\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <multiselect v-on:input=\"clearArray\" v-model.trim=\"$v.shared_resources.$model\" :options=\"shared_options\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                        </multiselect>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.shared_resources.$dirty && !$v.shared_resources.required\">Es requerido el valor de la solicitud</div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: Si -->\n                  <div v-if=\"shared_resources === 'Si' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <br>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <h5>\n                      Dependencia aportante\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget2.presupuesto2\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget2.rubros2=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget2.presupuesto2.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget2.presupuesto2.name}}:</label>\n                          <multiselect v-model=\"newBudget2.rubros2\" :options=\"newBudget2.presupuesto2.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget2.rubros2.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <input v-model=\"newBudget2.rubros2.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <input v-model=\"newBudget2.rubros2.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget2\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                          <thead style=\"background-color: #003e1e; color:white;\">\n                            <tr>\n                              <th scope=\"col\">Presupuesto</th>\n                              <th scope=\"col\">Rubro</th>\n                              <th scope=\"col\">Valor</th>\n                              <th scope=\"col\">Acción</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for='(budget, index) in budget_request' :key='index'>\n                              <td>{{budget.presupuesto_name}}</td>\n                              <td>{{budget.rubro_name}}</td>\n                              <td>{{budget.valor}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"removeBudget(index,budget)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                                  <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Recursos compartidos: No -->\n                  <div v-if=\"shared_resources === 'No' \">\n                    <hr>\n                    <h4>\n                      Seleccione los rubros que va a afectar\n                    </h4>\n                    <br>\n                    <h5>\n                      Dependencia principal\n                    </h5>\n                    <br>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <div class=\"form-group\">\n                          <label for=\"budget\">Presupuestos de la dependencia:</label>\n                          <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                          </multiselect>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <div class=\"form-group\" v-if=\"newBudget.presupuesto.activeRub\">\n                          <label for=\"budget\">Rubros de {{newBudget.presupuesto.name}}:</label>\n                          <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                          </multiselect>\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"row\" v-if=\"newBudget.rubros.length !== 0\">\n                      <div class=\"col\">\n                        <div class=\"row\">\n                          <div class=\"col\">\n                            <label for=\"number\">Valor a descontar:</label>\n                            <input v-model=\"newBudget.rubros.value\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"no_value\">Es requerido el valor a descontar</div>\n                          </div>\n                          <div class=\"col\">\n                            <label for=\"number\">Saldo del rubro:</label>\n                            <input v-model=\"newBudget.rubros.saldo\" type=\"number\" class=\"form-control\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col\">\n                        <center>\n                          <button type=\"button\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                            Añadir\n                          </button>\n                        </center>\n                      </div>\n                    </div>\n                    <div>&nbsp;</div>\n                    <hr>\n                    <div class=\"row\">\n                      <div class=\"col\">\n                        <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                          <thead style=\"background-color: #003e1e; color:white;\">\n                            <tr>\n                              <th scope=\"col\">Presupuesto</th>\n                              <th scope=\"col\">Rubro</th>\n                              <th scope=\"col\">Valor</th>\n                              <th scope=\"col\">Acción</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <tr v-for='(budget, index) in budget_request' :key='index'>\n                              <td>{{budget.presupuesto_name}}</td>\n                              <td>{{budget.rubro_name}}</td>\n                              <td>{{budget.valor}}</td>\n                              <td>\n                                <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"removeBudget(index,budget)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                                  <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                                </button>\n                              </td>\n                            </tr>\n                          </tbody>\n                        </table>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\nconst { mapActions, mapState } = Vuex\n\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    allbudgets:[],\n    showrub:false,\n    rubrosOptions:[]\n  },\n  actions: {\n    loadData({ commit }, id_params) {\n      axios\n      .get(API_IP+'/budget')\n      .then(response => {\n        var budgets=[]\n        for(var k in response.data.data) {\n          var budget = {}\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"]=[]\n          budget[\"activeRub\"]=false\n          for(var j in budget.rubros){\n            var bud={}\n            bud[\"_id\"]=budget.rubros[j].rubro._id;\n            bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n            bud[\"saldo\"]=budget.rubros[j].saldo;\n            bud[\"egreso\"]=budget.rubros[j].egreso;\n            budget.optionBudget.push(bud)\n          }\n          budget.activeRub=true\n          budgets.push(budget);\n        }\n        commit('loadBudgets',budgets);\n      })\n    },\n    updateShowRub({commit},showrub){\n      commit('toggleRub',showrub)\n    },\n    addOptionRubro({commit},rub){\n      commit('addRub',rub)\n    },\n    removeOptionRubro({commit},bud){\n      commit('removeRub',bud)\n    }\n  },\n  mutations:{\n    loadBudgets(state,budgets){\n      state.allbudgets=budgets;\n    },\n    toggleRub(state){\n      state.showrub=true\n    },\n    addRub(state,rub){\n      var found = state.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre,\"saldo\":rub.saldo,\"egreso\":rub.egreso})\n    },\n    removeRub(state,budget){\n      var found = state.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n    }\n  }\n})\nexport default {\n  props: ['stp','object'],\n  components: {\n    Multiselect\n  },\n  store,\n  data () {\n    return {\n      shared_options: [\"Si\",\"No\"],\n      shared_resources: \"\",\n      no_value: false,\n      step: this.stp,\n      obj:this.object,\n      budget_request: [],\n      request_value: '',\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      newBudget2:{\n        presupuesto2: '',\n        value2: '',\n        rubros2:[],\n      },\n      submitting: false\n    }\n  },\n  validations: {\n    request_value: { required },\n    shared_resources: { required }\n  },\n  computed:{\n    ...mapState(['allbudgets','showrub','rubrosOptions'])\n  },\n  methods:{\n    ...mapActions(['updateShowRub','addOptionRubro']),\n    removeBudget(index,budget){\n      var rub={}\n      rub[\"presupuesto\"]=budget.presupuesto\n      rub[\"_id\"]=budget.rubro\n      rub[\"nombre\"]=budget.rubro_name\n      rub[\"saldo\"]=budget.saldo\n      rub[\"egreso\"]=budget.egreso\n\n      this.budget_request.splice(index,1)\n      this.$store.dispatch('addOptionRubro',rub)\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+\"/request/\"+this.obj._id, {\n          auditoria:this.obj.auditoria,\n          clausulas:this.obj.clausulas,\n          estado:this.obj.estado,\n          _id:this.obj._id,\n          numero_solicitud:this.obj.numero_solicitud,\n          tipo_solicitud:this.obj.tipo_solicitud,\n          fecha_inicio:this.obj.fecha_inicio,\n          fecha_final:this.obj.fecha_final,\n          valor_solicitud:this.request_value,\n          justificacion:this.obj.justificacion,\n          justificacion_adicional:this.obj.justificacion_adicional,\n          objetivo_general:this.obj.objetivo_general,\n          especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n          obligaciones_especificas:this.obligations,\n          rubros:this.budget_request,\n          trabajadores:this.obj.trabajadores,\n          ciudad:this.obj.ciudad\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.$emit('saveObject',response.data)\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    addBudget() {\n      if (this.newBudget.rubros.value !== undefined && this.newBudget.rubros.value !== null && !isNaN(this.newBudget.rubros.value)\n      && this.newBudget.rubros.value !== \"\") {\n        if(this.newBudget.rubros.value <= this.newBudget.rubros.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n          budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n          budget[\"rubro\"] = this.newBudget.rubros._id\n          budget[\"rubro_name\"] = this.newBudget.rubros.nombre\n          budget[\"valor\"] = parseInt(this.newBudget.rubros.value)\n          budget[\"egreso\"] = parseInt(this.newBudget.rubros.egreso)\n          budget[\"saldo\"] = parseInt(this.newBudget.rubros.saldo)\n\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget = {\n            presupuesto: '',\n            rubros: [],\n            valor: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    addBudget2() {\n      if (this.newBudget2.rubros2.value !== undefined && this.newBudget2.rubros2.value !== null && !isNaN(this.newBudget2.rubros2.value)\n      && this.newBudget2.rubros2.value !== \"\") {\n        if (this.newBudget2.rubros2.value <= this.newBudget2.rubros2.saldo) {\n          this.no_value = false\n          var budget = {}\n          budget[\"presupuesto\"] = this.newBudget2.presupuesto2._id\n          budget[\"presupuesto_name\"] = this.newBudget2.presupuesto2.name\n          budget[\"rubro\"] = this.newBudget2.rubros2._id\n          budget[\"rubro_name\"] = this.newBudget2.rubros2.nombre\n          budget[\"valor\"] = parseInt(this.newBudget2.rubros2.value)\n          this.budget_request.push(budget)\n          this.$store.dispatch('removeOptionRubro',budget)\n          this.newBudget2 = {\n            presupuesto2: '',\n            rubros2: [],\n            valor2: ''\n          }\n          this.changeBudgetRequest()\n        } else {\n          this.$swal({\n            title: 'Error!',\n            text: 'El valor a descontar no debe ser mayor al saldo del rubro',\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n        }\n      } else {\n        this.no_value = true;\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      }\n    },\n    clearArray(){\n      this.no_value = false\n      if(this.budget_request.length != 0){\n        for(var k in this.budget_request){\n          var rub={}\n          rub[\"presupuesto\"]=this.budget_request[k].presupuesto\n          rub[\"_id\"]=this.budget_request[k].rubro\n          rub[\"nombre\"]=this.budget_request[k].rubro_name\n          rub[\"saldo\"]=this.budget_request[k].saldo\n          rub[\"egreso\"]=this.budget_request[k].egreso\n          this.$store.dispatch('addOptionRubro',rub)\n        }\n        this.budget_request = []\n      }\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/create"}]}