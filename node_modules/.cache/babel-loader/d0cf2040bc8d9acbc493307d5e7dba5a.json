{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/create/CreateRequestF.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/create/CreateRequestF.vue","mtime":1546444218000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  props: ['stp', 'object'],\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      payment_types: [\"Fijo\", \"Variable\"],\n      obj: this.object,\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false\n    };\n  },\n  validations: {\n    tipo_pago: {\n      required: required\n    },\n    payment_number: {\n      required: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      }),\n      $each: {\n        fecha: {\n          required: required\n        },\n        valor: {\n          required: required\n        }\n      }\n    }\n  },\n  methods: {\n    addPay: function addPay() {\n      this.payments = [];\n      var payment_value = this.obj.valor_solicitud / this.payment_number;\n\n      if (this.tipo_pago == \"Variable\") {\n        payment_value = \"\";\n      }\n\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.obj._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i + 1\n        });\n      }\n    },\n    clearPayments: function clearPayments() {\n      this.payment_number = \"\", this.payments = [];\n    },\n    saveContinue: function saveContinue() {\n      var _this = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true; // Put a Solicitud\n\n        axios.put(API_IP + \"/request/\" + this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.obj.auditoria,\n          clausulas: this.obj.clausulas,\n          estado: this.obj.estado,\n          _id: this.obj._id,\n          numero_solicitud: this.obj.numero_solicitud,\n          tipo_solicitud: this.obj.tipo_solicitud,\n          fecha_inicio: this.obj.fecha_inicio,\n          fecha_final: this.obj.fecha_final,\n          valor_solicitud: this.obj.valor_solicitud,\n          justificacion: this.obj.justificacion,\n          justificacion_adicional: this.obj.justificacion_adicional,\n          objetivo_general: this.obj.objetivo_general,\n          especificaciones_tecnicas: this.obj.especificaciones_tecnicas,\n          obligaciones_especificas: this.obligations,\n          rubros: this.obj.rubros,\n          trabajadores: this.obj.trabajadores,\n          ciudad: this.obj.ciudad\n        }).then(function (response) {\n          console.log(response);\n\n          _this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then(function (result) {\n            if (result.value) {\n              if (_this.tipo_pago === 'Fijo') {\n                // Post a pagos\n                axios.post(API_IP + \"/payment/\", _this.payments).then(function (response) {\n                  console.log(response);\n                  _this.submitting = false;\n\n                  _this.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then(function (result) {\n                    if (result.value) {\n                      _this.$router.push({\n                        name: 'showrequest',\n                        params: {\n                          type: _this.obj.tipo_solicitud.nombre.toLowerCase(),\n                          id: _this.obj._id\n                        }\n                      });\n                    }\n                  });\n                }).catch(function (error) {\n                  console.log(error.response.data.msg);\n\n                  _this.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n\n                  _this.submitting = false;\n                });\n              } else {\n                _this.submitting = false;\n\n                _this.$router.push({\n                  name: 'showrequest',\n                  params: {\n                    type: _this.obj.tipo_solicitud.nombre.toLowerCase(),\n                    id: _this.obj._id\n                  }\n                });\n              }\n            }\n          });\n        }).catch(function (error) {\n          console.log(error);\n\n          _this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n\n          _this.submitting = false;\n        });\n      }\n    },\n    cancel: function cancel() {\n      var _this2 = this;\n\n      this.$v.$reset();\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this2.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this2.$router.push({\n                name: 'requests'\n              });\n            }\n          });\n        }\n      });\n    },\n    previous: function previous() {\n      var _this3 = this;\n\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No'\n      }).then(function (result) {\n        if (result.value) {\n          _this3.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then(function (result) {\n            if (result.value) {\n              _this3.$router.push({\n                name: 'updaterequest',\n                params: {\n                  type: _this3.request_type.toLowerCase(),\n                  id: _this3.obj._id\n                }\n              });\n            }\n          });\n        }\n      });\n    }\n  }\n};",{"version":3,"sources":["CreateRequestF.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_pago.$error }\">\n                <div class=\"row\">\n                  <div class=\"col-auto\">\n                    <label for=\"payment_type\">Forma de pago:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect @input=\"clearPayments\" v-model.trim=\"$v.tipo_pago.$model\" :options=\"payment_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_pago.$dirty && !$v.tipo_pago.required\">Es requerido un tipo de pago</div>\n                  </div>\n                </div>\n              </div>\n              <div v-if=\"tipo_pago === 'Fijo' \">\n                <hr>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.payment_number.$error }\">\n                  <div class=\"row\">\n                    <div class=\"col-auto\">\n                      <label for=\"payment_number\">Numéro de pagos:</label>\n                    </div>\n                    <div class=\"col-6\">\n                      <input type=\"number\" @input=\"addPay()\" v-model.trim=\"$v.payment_number.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.payment_number.$dirty && !$v.payment_number.required\">Es requerido el numero de pagos</div>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"parseInt(payment_number) !== 0 && tipo_pago != ''\" class=\"form-group\">\n                  <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                    <thead style=\"background-color: #003e1e; color:white;\">\n                      <tr>\n                        <th scope=\"col\"># de pago</th>\n                        <th scope=\"col\">Valor</th>\n                        <th scope=\"col\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(payment, index) in $v.payments.$each.$iter\" :key=\"index\">\n                        <td>\n                          {{parseInt(index)+1}}\n                        </td>\n                        <td>\n                          <div class=\"input-group mb-3\">\n                            <input type=\"number\" :value=\"payment.valor.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\" disabled>\n                            <div class=\"input-group-append\">\n                              <span class=\"input-group-text\">$</span>\n                            </div>\n                          </div>\n                        </td>\n                        <td>\n                          <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                            <input type=\"date\" v-model.trim=\"payment.fecha.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"payment.fecha.$dirty && !payment.fecha.required\">Es requerida una fecha</div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp','object'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      obj: this.object,\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  methods: {\n    addPay(){\n      this.payments = []\n      var payment_value = (this.obj.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this.obj._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    clearPayments(){\n      this.payment_number= \"\",\n      this.payments= []\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria:this.obj.auditoria,\n          clausulas:this.obj.clausulas,\n          estado:this.obj.estado,\n          _id:this.obj._id,\n          numero_solicitud:this.obj.numero_solicitud,\n          tipo_solicitud:this.obj.tipo_solicitud,\n          fecha_inicio:this.obj.fecha_inicio,\n          fecha_final:this.obj.fecha_final,\n          valor_solicitud:this.obj.valor_solicitud,\n          justificacion:this.obj.justificacion,\n          justificacion_adicional:this.obj.justificacion_adicional,\n          objetivo_general:this.obj.objetivo_general,\n          especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n          obligaciones_especificas:this.obligations,\n          rubros:this.obj.rubros,\n          trabajadores:this.obj.trabajadores,\n          ciudad:this.obj.ciudad\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              if(this.tipo_pago === 'Fijo'){\n                // Post a pagos\n                axios\n                .post(API_IP+\"/payment/\", this.payments )\n                .then(response => {\n                  console.log(response);\n                  this.submitting = false;\n                  this.$swal({\n                    title: 'Exito!',\n                    text: 'Se crearon los pagos correctamente',\n                    type: 'success',\n                    confirmButtonText: 'Aceptar'\n                  }).then((result) => {\n                    if (result.value) {\n                      this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n                    }\n                  });\n                })\n                .catch(error => {\n                  console.log(error.response.data.msg);\n                  this.$swal({\n                    title: 'Error!',\n                    text: error.response.data.msg,\n                    type: 'error',\n                    confirmButtonText: 'Cerrar'\n                  });\n                  this.submitting = false;\n                });\n              } else {\n                this.submitting = false;\n                this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n              }\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        })\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'requests' });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'updaterequest', params: { type: this.request_type.toLowerCase() ,id: this.obj._id } });\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/create"}]}