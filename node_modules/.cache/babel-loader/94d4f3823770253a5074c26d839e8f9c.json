{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestF.vue","mtime":1545321402164},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Multiselect from 'vue-multiselect';\nimport { axios } from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      payment_types: [\"Fijo\", \"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: [],\n      obj: {}\n    };\n  },\n  validations: {\n    tipo_pago: {\n      required: required\n    },\n    payment_number: {\n      required: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function () {\n        return this.tipo_pago === 'Fijo';\n      }),\n      $each: {\n        fecha: {\n          required: required\n        },\n        valor: {\n          required: required\n        }\n      }\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    axios.get(API_IP + '/request/' + this.$route.params.id).then(function (response) {\n      _this.obj = response.data.data; // Parametros necesarios en esta vista\n\n      _this.payment_number = response.data.data.cantidad_pagos, _this.tipo_pago = response.data.data.tipo_pago, // Necesarios para hacer el PUT\n      _this.justification = response.data.data.justificacion;\n      _this.aditional_justification = response.data.data.justificacion_adicional;\n      _this.general_objective = response.data.data.objetivo_general;\n      _this.place = response.data.data.ciudad; // Parametros necesarios para el update general\n\n      _this.tipo_solicitud = response.data.data.tipo_solicitud;\n      _this.trabajadores = response.data.data.trabajadores;\n      _this.start_request_date = response.data.data.fecha_inicio.substring(0, 10);\n      _this.end_request_date = response.data.data.fecha_final.substring(0, 10); //Funcion para el total de dias\n\n      var sd = new Date(_this.start_request_date);\n      var ed = new Date(_this.end_request_date);\n      sd.setDate(sd.getDate() + 1);\n      ed.setDate(ed.getDate() + 1);\n      var differentDays = Math.ceil(Math.abs(ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      _this.total_days = differentDays;\n      _this.causal = response.data.data.causal_seleccion;\n      _this.clausulas = response.data.data.clausulas;\n      _this.request_auditoria = response.data.data.auditoria;\n      _this.request_id = response.data.data._id;\n      _this.request_state = response.data.data.estado;\n      _this.request_number = response.data.data.numero_solicitud;\n      _this.valor_solicitud = response.data.data.valor_solicitud;\n      _this.request_obligations = response.data.data.obligaciones_especificas;\n      _this.request_especifications = response.data.data.especificaciones_tecnicas;\n      _this.request_budget = response.data.data.rubros;\n      _this.payment_amount = response.data.data.cantidad_pagos;\n      _this.payment_type = response.data.data.tipo_pago; // Parametros usados en el padre\n\n      _this.request_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase() + \"/\" + response.data.data._id;\n      _this.request_type_url = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase();\n      _this.request_type = response.data.data.tipo_solicitud.nombre;\n\n      _this.$emit('request_id', _this.request_id);\n\n      _this.$emit('request_url', _this.request_url);\n\n      _this.$emit('request_type', _this.request_type);\n\n      _this.$emit('request_type_url', _this.request_type_url);\n\n      axios.get(API_IP + \"/payment/\", {\n        params: _this.request_id\n      }).then(function (response) {\n        for (var k in response.data) {\n          for (var j in response.data[k]) {\n            console.log(response.data[k][j]);\n            var payment = {}; // payment[\"auditoria\"] = response.data[k][j].auditoria\n\n            payment[\"estado\"] = response.data[k][j].estado;\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0, 10);\n            payment[\"numero\"] = response.data[k][j].numero; // payment[\"planillas\"] = response.data[k][j].planillas\n            // payment[\"solicitud\"] = response.data[k][j].solicitud\n\n            payment[\"valor\"] = response.data[k][j].valor;\n            payment[\"_id\"] = response.data[k][j]._id;\n\n            _this.request_payments.push(payment);\n          }\n        }\n      });\n    });\n  },\n  methods: {\n    addPay: function addPay() {\n      this.payments = [];\n      var payment_value = this.valor_solicitud / this.payment_number;\n\n      if (this.tipo_pago == \"Variable\") {\n        payment_value = \"\";\n      }\n\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i + 1\n        });\n      }\n    },\n    clearPayments: function clearPayments() {\n      this.payment_number = \"\", this.payments = [];\n    },\n    saveContinue: function saveContinue() {\n      var _this2 = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\");\n      } else {\n        this.submitting = true; // Put a Solicitud\n\n        axios.put(API_IP + \"/request/\" + this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria: this.obj.auditoria,\n          clausulas: this.obj.clausulas,\n          estado: this.obj.estado,\n          _id: this.obj._id,\n          numero_solicitud: this.obj.numero_solicitud,\n          tipo_solicitud: this.obj.tipo_solicitud,\n          fecha_inicio: this.obj.fecha_inicio,\n          fecha_final: this.obj.fecha_final,\n          valor_solicitud: this.obj.valor_solicitud,\n          justificacion: this.obj.justificacion,\n          justificacion_adicional: this.obj.justificacion_adicional,\n          objetivo_general: this.obj.objetivo_general,\n          especificaciones_tecnicas: this.obj.especificaciones_tecnicas,\n          obligaciones_especificas: this.obligations,\n          rubros: this.obj.rubros,\n          trabajadores: this.obj.trabajadores,\n          ciudad: this.obj.ciudad\n        }).then(function (response) {\n          console.log(response);\n\n          _this2.$modal.show('dialog', {\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud satisfactoriamente',\n            buttons: [{\n              title: 'Cerrar'\n            }]\n          });\n\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n\n          if (_this2.tipo_pago === 'Fijo') {\n            // Post a pagos\n            axios.post(API_IP + \"/payment/\", _this2.payments).then(function (response) {\n              console.log(response);\n              _this2.submitting = false;\n\n              _this2.$modal.show('dialog', {\n                title: 'Exito!',\n                text: 'Se crearon los pagos correctamente',\n                buttons: [{\n                  title: 'Cerrar'\n                }]\n              });\n\n              alert(\"Se crearon los pagos correctamente\");\n\n              _this2.$router.push({\n                name: 'showrequest',\n                params: {\n                  type: _this2.obj.tipo_solicitud.nombre.toLowerCase(),\n                  id: _this2.obj._id\n                }\n              });\n            }).catch(function (error) {\n              console.log(error);\n\n              _this2.$modal.show('dialog', {\n                title: 'Error!',\n                text: error.response.data.msg,\n                buttons: [{\n                  title: 'Cerrar'\n                }]\n              });\n\n              _this2.submitting = false;\n            });\n          } else {\n            _this2.submitting = false;\n\n            _this2.$router.push({\n              name: 'showrequest',\n              params: {\n                type: _this2.obj.tipo_solicitud.nombre.toLowerCase(),\n                id: _this2.obj._id\n              }\n            });\n          }\n        }).catch(function (error) {\n          console.log(error);\n\n          _this2.$modal.show('dialog', {\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            buttons: [{\n              title: 'Cerrar'\n            }]\n          });\n\n          _this2.submitting = false;\n        });\n      }\n    },\n    cancel: function cancel() {\n      var _this3 = this;\n\n      this.$v.$reset();\n      this.$modal.show('dialog', {\n        title: 'Espere!',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        buttons: [{\n          title: 'Si',\n          handler: function handler() {\n            _this3.$router.push({\n              name: 'showrequest',\n              params: {\n                type: _this3.request_type.toLowerCase(),\n                id: _this3.request_id\n              }\n            });\n          }\n        }, {\n          title: 'No'\n        }]\n      });\n    },\n    previous: function previous() {\n      var _this4 = this;\n\n      this.$modal.show('dialog', {\n        title: 'Espere!',\n        text: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        buttons: [{\n          title: 'Si',\n          handler: function handler() {\n            _this4.step--;\n\n            _this4.$emit('prevStep', _this4.step);\n          }\n        }, {\n          title: 'No'\n        }]\n      });\n    }\n  }\n};",{"version":3,"sources":["UpdateRequestF.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        {{value}}\n        <v-dialog/>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_pago.$error }\">\n                <div class=\"row\">\n                  <div class=\"col-auto\">\n                    <label for=\"payment_type\">Forma de pago:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect @input=\"clearPayments\" v-model.trim=\"$v.tipo_pago.$model\" :options=\"payment_types\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un tipo de pago\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_pago.$dirty && !$v.tipo_pago.required\">Es requerido un tipo de pago</div>\n                  </div>\n                </div>\n              </div>\n              <div v-if=\"tipo_pago === 'Fijo' \">\n                <hr>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.payment_number.$error }\">\n                  <div class=\"row\">\n                    <div class=\"col-auto\">\n                      <label for=\"payment_number\">Numéro de pagos:</label>\n                    </div>\n                    <div class=\"col-6\">\n                      <input type=\"number\" @input=\"addPay()\" v-model.trim=\"$v.payment_number.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.payment_number.$dirty && !$v.payment_number.required\">Es requerido el numero de pagos</div>\n                    </div>\n                  </div>\n                </div>\n                <div v-if=\"parseInt(payment_number) !== 0 && tipo_pago != ''\" class=\"form-group\">\n                  <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                    <thead style=\"background-color: #003e1e; color:white;\">\n                      <tr>\n                        <th scope=\"col\"># de pago</th>\n                        <th scope=\"col\">Valor</th>\n                        <th scope=\"col\">Fecha</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr v-for=\"(payment, index) in $v.payments.$each.$iter\" :key=\"index\">\n                        <td>\n                          {{parseInt(index)+1}}\n                        </td>\n                        <td>\n                          <input type=\"number\" v-model=\"payment.valor.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\" disabled>\n                        </td>\n                        <td>\n                          <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                            <input type=\"date\" v-model.trim=\"payment.fecha.$model\" class=\"form-control\" id=\"payment_number\" aria-describedby=\"payment_number\">\n                            <div class=\"alert alert-danger\" role=\"alert\" v-if=\"payment.fecha.$dirty && !payment.fecha.required\">Es requerida una fecha</div>\n                          </div>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n              <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n                <thead style=\"background-color: #003e1e; color:white;\">\n                  <tr>\n                    <th scope=\"col\"># de pago</th>\n                    <th scope=\"col\">Valor</th>\n                    <th scope=\"col\">Fecha</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(payment, index) in request_payments\" :key=\"index\">\n                    <td>\n                      {{payment.numero}}\n                    </td>\n                    <td>\n                      {{payment.valor}}\n                    </td>\n                    <td>\n                      {{payment.fecha}}\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                        Cancelar\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar y continuar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../../helpers/axios';\nimport { required, requiredIf } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp', 'value'],\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      payment_types: [\"Fijo\",\"Variable\"],\n      step: this.stp,\n      tipo_pago: \"\",\n      payment_number: \"\",\n      payments: [],\n      submitting: false,\n      request_payments: [],\n      obj:{}\n    }\n  },\n  validations: {\n    tipo_pago: { required },\n    payment_number: {\n      required: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      })\n    },\n    payments: {\n      requiredIf: requiredIf(function (){\n        return this.tipo_pago === 'Fijo'\n      }),\n      $each: {\n        fecha: { required },\n        valor: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      this.obj=response.data.data\n      // Parametros necesarios en esta vista\n      this.payment_number = response.data.data.cantidad_pagos,\n      this.tipo_pago = response.data.data.tipo_pago,\n      // Necesarios para hacer el PUT\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      // Parametros necesarios para el update general\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.valor_solicitud = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_especifications = response.data.data.especificaciones_tecnicas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      axios.\n      get(API_IP+\"/payment/\",{params:this.request_id})\n      .then(response => {\n        for(var k in response.data){\n          for(var j in response.data[k]){\n            console.log(response.data[k][j]);\n            var payment = {}\n            // payment[\"auditoria\"] = response.data[k][j].auditoria\n            payment[\"estado\"] = response.data[k][j].estado\n            payment[\"fecha\"] = response.data[k][j].fecha.substring(0,10);\n            payment[\"numero\"] = response.data[k][j].numero\n            // payment[\"planillas\"] = response.data[k][j].planillas\n            // payment[\"solicitud\"] = response.data[k][j].solicitud\n            payment[\"valor\"] = response.data[k][j].valor\n            payment[\"_id\"] = response.data[k][j]._id\n            this.request_payments.push(payment);\n          }\n        }\n      });\n    });\n  },\n  methods: {\n    addPay(){\n      this.payments = []\n      var payment_value = (this.valor_solicitud)/(this.payment_number)\n      if( this.tipo_pago == \"Variable\"){\n        payment_value = \"\"\n      }\n      for (var i = 0; i < parseInt(this.payment_number); i++) {\n        this.payments.push({\n          solicitud: this._id,\n          valor: payment_value,\n          fecha: \"\",\n          numero: i+1\n        })\n      }\n    },\n    clearPayments(){\n      this.payment_number= \"\",\n      this.payments= []\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\")\n      } else {\n        this.submitting = true;\n        // Put a Solicitud\n        axios\n        .put(API_IP+\"/request/\"+this.obj._id, {\n          // Parametros enviados por esta vista\n          cantidad_pagos: parseInt(this.payment_number),\n          tipo_pago: this.tipo_pago,\n          // Parametros enviados para completar el update\n          auditoria:this.obj.auditoria,\n          clausulas:this.obj.clausulas,\n          estado:this.obj.estado,\n          _id:this.obj._id,\n          numero_solicitud:this.obj.numero_solicitud,\n          tipo_solicitud:this.obj.tipo_solicitud,\n          fecha_inicio:this.obj.fecha_inicio,\n          fecha_final:this.obj.fecha_final,\n          valor_solicitud:this.obj.valor_solicitud,\n          justificacion:this.obj.justificacion,\n          justificacion_adicional:this.obj.justificacion_adicional,\n          objetivo_general:this.obj.objetivo_general,\n          especificaciones_tecnicas:this.obj.especificaciones_tecnicas,\n          obligaciones_especificas:this.obligations,\n          rubros:this.obj.rubros,\n          trabajadores:this.obj.trabajadores,\n          ciudad:this.obj.ciudad\n        })\n        .then(response => {\n          console.log(response);\n          this.$modal.show('dialog', {\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud satisfactoriamente',\n            buttons: [\n              {\n                title: 'Cerrar'\n              }\n            ]\n          });\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n          if(this.tipo_pago === 'Fijo'){\n            // Post a pagos\n            axios\n            .post(API_IP+\"/payment/\", this.payments )\n            .then(response => {\n              console.log(response);\n              this.submitting = false;\n              this.$modal.show('dialog', {\n                title: 'Exito!',\n                text: 'Se crearon los pagos correctamente',\n                buttons: [\n                  {\n                    title: 'Cerrar'\n                  }\n                ]\n              });\n              alert(\"Se crearon los pagos correctamente\");\n              this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n            })\n            .catch(error => {\n              console.log(error);\n              this.$modal.show('dialog', {\n                title: 'Error!',\n                text: error.response.data.msg,\n                buttons: [\n                  {\n                    title: 'Cerrar'\n                  }\n                ]\n              });\n              this.submitting = false;\n            });\n          } else {\n            this.submitting = false;\n            this.$router.push({ name: 'showrequest', params: { type: this.obj.tipo_solicitud.nombre.toLowerCase() ,id: this.obj._id } });\n          }\n        })\n        .catch(error => {\n          console.log(error);\n          this.$modal.show('dialog', {\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            buttons: [\n              {\n                title: 'Cerrar'\n              }\n            ]\n          });\n          this.submitting = false;\n        })\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$modal.show('dialog', {\n        title: 'Espere!',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        buttons: [\n          {\n            title: 'Si',\n            handler: () => { this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } }); }\n          },\n          {\n            title: 'No'\n          }\n        ]\n      })\n    },\n    previous(){\n      this.$modal.show('dialog', {\n        title: 'Espere!',\n        text: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        buttons: [\n          {\n            title: 'Si',\n            handler: () => {\n              this.step--;\n              this.$emit('prevStep', this.step);\n            }\n          },\n          {\n            title: 'No'\n          }\n        ]\n      })\n    }\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/update"}]}