{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/dependencies/CreateDependency.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/dependencies/CreateDependency.vue","mtime":1547157018858},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../persons/CreatePersonDependencyModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect,\n    'create-person': CreatePerson\n  },\n  data () {\n    return {\n      directors: [],\n      director_types: [\"Electo\", \"Encargado\"],\n      dependence_name:\"\",\n      resolution_number:\"\",\n      resolution_date:\"\",\n      quipu: \"\",\n      description: \"\",\n      director_type:\"\",\n      dependence_director:{},\n      submitting: false,\n      modal_show: false\n    }\n  },\n  validations: {\n    dependence_name: {\n      required\n    },\n    resolution_number: {\n      required\n    },\n    resolution_date: {\n      required\n    },\n    quipu: {\n      required\n    },\n    description: {\n      required\n    }\n    // director_type: {\n    //   required\n    // },\n    // dependence_director: {\n    //   required\n    // }\n  },\n  mounted () {\n    axios\n    .get(API_IP+\"/person/\",{ params: \"planta\" })\n    .then(response => {\n      for (var k in response.data.data){\n        var user_info = {}\n        user_info[\"_id\"] = response.data.data[k]._id;\n        user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n        this.directors.push(user_info);\n      }\n      axios\n      .get(API_IP+\"/person/\",{ params: \"profesor\" })\n      .then(response => {\n        for (var k in response.data.data){\n          var user_info = {}\n          user_info[\"_id\"] = response.data.data[k]._id;\n          user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n          this.directors.push(user_info);\n        }\n      });\n    });\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        axios\n        .post(API_IP+\"/dependence/\", {\n          nombre: this.dependence_name,\n          resolucion_numero: this.resolution_number,\n          resolucion_fecha: this.resolution_date,\n          quipu_codigo: this.quipu,\n          descripcion: this.description\n          // director_tipo: this.director_type,\n          // director: this.dependence_director._id\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo la dependencia satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            console.log(response.data.data._id);\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ path: `/dependencias/${response.data.data._id}/actualizar` });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'dependencies' });\n            }\n          });\n        }\n      });\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    }\n  }\n}\n",{"version":3,"sources":["CreateDependency.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"CreateDependency.vue","sourceRoot":"src/components/dependencies","sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div style=\"margin:40px;background-color:rgba(255, 255, 255, 0.7);\">\n      <div class=\"row\">\n        <nav aria-label=\"breadcrumb\">\n          <ol class=\"breadcrumb\">\n            <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\n            <li class=\"breadcrumb-item\"><a href=\"/dependencias\">Dependencias</a></li>\n            <li class=\"breadcrumb-item active\" aria-current=\"page\">Crear Dependencia</li>\n          </ol>\n        </nav>\n      </div>\n      <div class=\"row\">\n        <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n          <div class=\"row\">\n            <div class=\"col\">\n              <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n              </button>\n            </div>\n          </div>\n          <modal name=\"create-person\" :adaptive=\"true\" :scrollable=\"true\" width=\"50%\" height=\"auto\">\n            <create-person\n            :hide_modal=\"modal_show\"\n            @modalShow=\"closeModalCreatePerson\"\n            ></create-person>\n          </modal>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-5 align-self-center\">\n              <form @submit.prevent=\"submit\" novalidate>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.dependence_name.$error }\">\n                  <label for=\"dependencyName\">Nombre de la dependencia:</label>\n                  <input v-model.trim=\"$v.dependence_name.$model\" type=\"text\" class=\"form-control\" id=\"dependencyName\" aria-describedby=\"dependencyName\" placeholder=\"Nombre\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.dependence_name.$dirty && !$v.dependence_name.required\">Es requerido un nombre</div>\n                </div>\n                <!-- <div class=\"form-group\" :class=\"{ 'form-group--error': $v.dependence_director.$error }\">\n                  <label for=\"dependencyDirector\">Director de la dependencia:</label>\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <multiselect v-model.trim=\"$v.dependence_director.$model\" :options=\"directors\" :multiple=\"false\" :preserve-search=\"true\" placeholder=\"Seleccione el director\" label=\"name\" track-by=\"_id\" :preselect-first=\"false\">\n                      </multiselect>\n                      <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.dependence_director.$dirty && !$v.dependence_director.required\">Es requerido un director</div>\n                    </div>\n                    <div class=\"col-auto\">\n                      <button class=\"btn btn-primary\" type=\"button\" @click=\"showModalCreatePerson()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                        Crear Nuevo\n                      </button>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.director_type.$error }\">\n                  <label for=\"directorType\">Tipo de director:</label>\n                  <multiselect v-model.trim=\"$v.director_type.$model\" :options=\"director_types\" :multiple=\"false\" :preserve-search=\"true\" placeholder=\"Seleccione el tipo del director\" :preselect-first=\"false\">\n                  </multiselect>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.director_type.$dirty && !$v.director_type.required\">Es requerido especificar el tipo de director</div>\n                </div> -->\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.resolution_number.$error }\">\n                  <label for=\"resolutionNumber\">Numero de la resolución:</label>\n                  <input v-model.trim=\"$v.resolution_number.$model\" type=\"text\" class=\"form-control\" id=\"resolutionNumber\" aria-describedby=\"resolutionNumber\" placeholder=\"Resolución\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.resolution_number.$dirty && !$v.resolution_number.required\">Es requerido un numero de resolución</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.resolution_date.$error }\">\n                  <label for=\"resolutionDate\">Fecha de la resolución:</label>\n                  <input v-model.trim=\"$v.resolution_date.$model\" type=\"date\" class=\"form-control\" id=\"resolutionDate\" aria-describedby=\"resolutionDate\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.resolution_date.$dirty && !$v.resolution_date.required\">Es requerida una fecha</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.quipu.$error }\">\n                  <label for=\"quipuCode\">Código de Quipu:</label>\n                  <input v-model.trim=\"$v.quipu.$model\" type=\"text\" class=\"form-control\" id=\"quipuCode\" aria-describedby=\"quipuCode\">\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.quipu.$dirty && !$v.quipu.required\">Es requerido un código</div>\n                </div>\n                <div class=\"form-group\" :class=\"{ 'form-group--error': $v.description.$error }\">\n                  <label for=\"dependenceDescription\">Descripción:</label>\n                  <textarea v-model.trim=\"$v.description.$model\" class=\"form-control\" aria-label=\"dependenceDescription\"\n                  placeholder=\"Descripción\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                  <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.description.$dirty && !$v.description.required\">Es requerida una descripción</div>\n                </div>\n                <div>&nbsp;</div>\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-4 text-center\">\n                    <button class=\"btn btn-primary\" type=\"submit\" :disabled=\"submitting\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear nuevo\n                    </button>\n                  </div>\n                  <div class=\"col-4 text-center\">\n                    <button type=\"button\" @click=\"cancel()\" class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                      Cancelar\n                    </button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Multiselect from 'vue-multiselect'\nimport {axios} from '../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nimport CreatePerson from '../persons/CreatePersonDependencyModal.vue'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  components: {\n    Multiselect,\n    'create-person': CreatePerson\n  },\n  data () {\n    return {\n      directors: [],\n      director_types: [\"Electo\", \"Encargado\"],\n      dependence_name:\"\",\n      resolution_number:\"\",\n      resolution_date:\"\",\n      quipu: \"\",\n      description: \"\",\n      director_type:\"\",\n      dependence_director:{},\n      submitting: false,\n      modal_show: false\n    }\n  },\n  validations: {\n    dependence_name: {\n      required\n    },\n    resolution_number: {\n      required\n    },\n    resolution_date: {\n      required\n    },\n    quipu: {\n      required\n    },\n    description: {\n      required\n    }\n    // director_type: {\n    //   required\n    // },\n    // dependence_director: {\n    //   required\n    // }\n  },\n  mounted () {\n    axios\n    .get(API_IP+\"/person/\",{ params: \"planta\" })\n    .then(response => {\n      for (var k in response.data.data){\n        var user_info = {}\n        user_info[\"_id\"] = response.data.data[k]._id;\n        user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n        this.directors.push(user_info);\n      }\n      axios\n      .get(API_IP+\"/person/\",{ params: \"profesor\" })\n      .then(response => {\n        for (var k in response.data.data){\n          var user_info = {}\n          user_info[\"_id\"] = response.data.data[k]._id;\n          user_info[\"name\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].segundo_nombre+\" \"+response.data.data[k].primer_apellido+\" \"+response.data.data[k].segundo_apellido;\n          this.directors.push(user_info);\n        }\n      });\n    });\n  },\n  methods: {\n    submit() {\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true\n        axios\n        .post(API_IP+\"/dependence/\", {\n          nombre: this.dependence_name,\n          resolucion_numero: this.resolution_number,\n          resolucion_fecha: this.resolution_date,\n          quipu_codigo: this.quipu,\n          descripcion: this.description\n          // director_tipo: this.director_type,\n          // director: this.dependence_director._id\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se creo la dependencia satisfactoriamente.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            console.log(response.data.data._id);\n            if (result.value) {\n              this.submitting = false;\n              this.$router.push({ path: `/dependencias/${response.data.data._id}/actualizar` });\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'dependencies' });\n            }\n          });\n        }\n      });\n    },\n    // Modal para la creación de personas\n    showModalCreatePerson () {\n      this.modal_show = false;\n      this.$modal.show('create-person');\n    },\n    closeModalCreatePerson (value) {\n      this.modal_show = value;\n      if(this.modal_show === true){\n        this.$modal.hide('create-person');\n        location.reload();\n      }\n    }\n  }\n}\n</script>\n"]}]}