{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestE.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestE.vue","mtime":1544137117538},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.function.name\";\nimport _objectSpread from \"/home/developer/Documents/SIUA/frontend/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.array.find-index\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect';\nimport Vuex from 'vuex';\nimport router from '../../../router';\nimport { mapGetters } from 'vuex';\nimport { axios } from '../../../helpers/axios';\nvar API_IP = process.env.VUE_APP_API_IP;\nvar mapActions = Vuex.mapActions,\n    mapState = Vuex.mapState;\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    allbudgets: [],\n    showrub: false,\n    rubrosOptions: [],\n    request: {},\n    request_budgets: []\n  },\n  getters: {\n    getRequestData: function getRequestData(state) {\n      return state.request;\n    },\n    getRequestBudgets: function getRequestBudgets(state) {\n      return state.request_budgets;\n    }\n  },\n  actions: {\n    loadData: function loadData(_ref, id_params) {\n      var commit = _ref.commit;\n      axios.get(API_IP + '/budget').then(function (response) {\n        var budgets = [];\n\n        for (var k in response.data.data) {\n          var budget = {};\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"] = [];\n          budget[\"activeRub\"] = false;\n\n          for (var j in budget.rubros) {\n            var bud = {};\n            bud[\"_id\"] = budget.rubros[j].rubro._id;\n            bud[\"nombre\"] = budget.rubros[j].rubro.nombre;\n            budget.optionBudget.push(bud);\n          }\n\n          budget.activeRub = true;\n          budgets.push(budget);\n        }\n\n        commit('loadBudgets', budgets);\n        var requestData = {};\n        axios.get(API_IP + '/request/' + router.currentRoute.params.id).then(function (response) {\n          // Parametros necesarios en esta vista\n          requestData['obligations'] = response.data.data.obligaciones_especificas; // Parametros necesarios para el update general\n\n          requestData['justification'] = response.data.data.justificacion;\n          requestData['aditional_justification'] = response.data.data.justificacion_adicional;\n          requestData['general_objective'] = response.data.data.objetivo_general;\n          requestData['place'] = response.data.data.ciudad;\n          requestData['tipo_solicitud'] = response.data.data.tipo_solicitud;\n          requestData['trabajadores'] = response.data.data.trabajadores;\n          requestData['start_request_date'] = response.data.data.fecha_inicio.substring(0, 10);\n          requestData['end_request_date'] = response.data.data.fecha_final.substring(0, 10); //Funcion para el total de dias\n\n          requestData['total_days'] = response.data.data.total_dias;\n          requestData['causal'] = response.data.data.causal_seleccion;\n          requestData['clausulas'] = response.data.data.clausulas;\n          requestData['request_auditoria'] = response.data.data.auditoria;\n          requestData['request_id'] = response.data.data._id;\n          requestData['request_state'] = response.data.data.estado;\n          requestData['request_number'] = response.data.data.numero_solicitud;\n          requestData['request_value'] = response.data.data.valor_solicitud;\n          requestData['especifications'] = response.data.data.especificaciones_tecnicas;\n          requestData['request_budget'] = response.data.data.rubros;\n          requestData['payment_amount'] = response.data.data.cantidad_pagos;\n          requestData['payment_type'] = response.data.data.tipo_pago; // Parametros usados en el padre\n\n          requestData['request_url'] = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase() + \"/\" + response.data.data._id;\n          requestData['request_type_url'] = \"/solicitudes/\" + response.data.data.tipo_solicitud.nombre.toLowerCase();\n          commit('loadRequest', requestData);\n        });\n      });\n    },\n    updateShowRub: function updateShowRub(_ref2, showrub) {\n      var commit = _ref2.commit;\n      commit('toggleRub', showrub);\n    },\n    addOptionRubro: function addOptionRubro(_ref3, rub) {\n      var commit = _ref3.commit;\n      commit('addRub', rub);\n    },\n    removeOptionRubro: function removeOptionRubro(_ref4, bud) {\n      var commit = _ref4.commit;\n      commit('removeRub', bud);\n    }\n  },\n  mutations: {\n    loadRequest: function loadRequest(state, request) {\n      state.request = request;\n\n      for (var k in state.request.request_budget) {\n        var budget = state.request.request_budget[k]; // budget[\"presupuesto\"] = request.request_budget[k].presupuesto._id\n\n        budget[\"presupuesto_name\"] = request.request_budget[k].presupuesto.nombre; // budget[\"rubro\"] = request.request_budget[k].rubro._id\n\n        budget[\"rubro_name\"] = request.request_budget[k].rubro.nombre; // budget[\"valor\"] = parseInt(request.request_budget[k].valor)\n\n        state.request_budgets.push(budget);\n      }\n    },\n    loadBudgets: function loadBudgets(state, budgets) {\n      state.allbudgets = budgets;\n    },\n    toggleRub: function toggleRub(state) {\n      state.showrub = true;\n    },\n    addRub: function addRub(state, rub) {\n      var found = state.allbudgets.findIndex(function (element) {\n        return rub.presupuesto == element._id;\n      });\n      console.log(found);\n\n      if (found != undefined && found != -1) {\n        state.allbudgets[found].optionBudget.push({\n          \"_id\": rub._id,\n          \"nombre\": rub.nombre\n        });\n      }\n    },\n    removeRub: function removeRub(state, budget) {\n      var found = state.allbudgets.findIndex(function (element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function (element) {\n        return budget.rubro == element._id;\n      });\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub, 1);\n    }\n  }\n});\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect: Multiselect\n  },\n  store: store,\n  data: function data() {\n    return {\n      allRequestData: {},\n      budget_request: [],\n      request_value: \"\",\n      newBudget: {\n        presupuesto: '',\n        value: '',\n        rubros: []\n      },\n      step: this.stp\n    };\n  },\n  computed: _objectSpread({}, mapState(['allbudgets', 'showrub', 'rubrosOptions', 'request', 'request_budgets']), mapGetters(['getRequestData', 'getRequestBudgets'])),\n  mounted: function mounted() {},\n  methods: _objectSpread({}, mapActions(['updateShowRub', 'addOptionRubro']), {\n    relo: function relo() {\n      console.log(this.$store.state.rubrosOptions);\n      this.$store.state.rubrosOptions = [];\n      console.log(this.$store.state.rubrosOptions);\n    },\n    remove: function remove(index, idbudget, idrub, namerub) {\n      var rub = {};\n      rub[\"presupuesto\"] = idbudget;\n      rub[\"_id\"] = idrub;\n      rub[\"nombre\"] = namerub;\n      this.budget_request.splice(index, 1);\n      this.$store.dispatch('addOptionRubro', rub);\n    },\n    previous: function previous() {\n      this.step--;\n      this.$emit('nextStep', this.step);\n    },\n    saveContinue: function saveContinue(v) {\n      var _this = this;\n\n      var currentRequest = this.getRequestData;\n      console.log(\"currentRequest\");\n      console.log(currentRequest);\n      console.log(\"Rubros\");\n      console.log(this.budget_request);\n      axios.put(API_IP + '/request/' + this.$route.params.id, {\n        auditoria: currentRequest.request_auditoria,\n        clausulas: currentRequest.clausulas,\n        estado: currentRequest.request_state,\n        _id: currentRequest.request_id,\n        numero_solicitud: currentRequest.request_numer,\n        tipo_solicitud: currentRequest.tipo_solicitud,\n        fecha_inicio: currentRequest.start_request_date,\n        fecha_final: currentRequest.end_request_date,\n        valor_solicitud: this.request_value != \"\" ? parseInt(this.request_value) : parseInt(currentRequest.request_value),\n        justificacion: currentRequest.justification,\n        justificacion_adicional: currentRequest.aditional_justification,\n        objetivo_general: currentRequest.general_objective,\n        especificaciones_tecnicas: currentRequest.especifications,\n        obligaciones_especificas: currentRequest.obligations,\n        rubros: this.budget_request,\n        trabajadores: currentRequest.trabajadores,\n        ciudad: currentRequest.place\n      }).then(function (response) {\n        console.log(response);\n        _this.step++;\n\n        _this.$emit('nextStep', _this.step);\n\n        alert(\"Se actualizo satisfactoriamente\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(error.response.data.error.msg);\n        _this.submitting = false;\n      });\n    },\n    addBudget: function addBudget() {\n      for (var k in this.newBudget.rubros) {\n        console.log(this.newBudget.rubros[k]);\n        var budget = {};\n        budget[\"presupuesto\"] = this.newBudget.presupuesto._id;\n        budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name;\n        budget[\"rubro\"] = this.newBudget.rubros[k]._id;\n        budget[\"rubro_name\"] = this.newBudget.rubros[k].nombre;\n        budget[\"valor\"] = parseInt(this.newBudget.rubros[k].value);\n        this.budget_request.push(budget);\n        this.$store.dispatch('removeOptionRubro', budget);\n      }\n\n      this.newBudget = {\n        presupuesto: '',\n        rubros: [],\n        valor: ''\n      };\n      this.changeBudgetRequest();\n    },\n    changeValueRequest: function changeValueRequest() {\n      this.$emit('changeRequestVal', this.request_value);\n    },\n    changeBudgetRequest: function changeBudgetRequest() {\n      this.$emit('changeBudRequest', this.budget_request);\n    }\n  }),\n  created: function created() {\n    this.$store.dispatch('loadData');\n  }\n};",{"version":3,"sources":["UpdateRequestE.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\">\n              <div class=\"row\">\n                <div class=\"col\">\n                  <div class=\"form-group\">\n                    <label for=\"number\">Valor de la solicitud:</label>\n                    <input v-model=\"request_value=getRequestData.request_value\" type=\"number\" class=\"form-control\"  aria-describedby=\"number\" placeholder=\"Valor de solicitud\" @input=\"changeValueRequest\">\n                    {{request_value}}\n                  </div>\n                  <div class=\"form-group\">\n                    <multiselect v-model=\"newBudget.presupuesto\" :options=\"allbudgets\" track-by=\"_id\" label=\"name\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione un prespuesto\" @input=\"newBudget.rubros=[]\">\n                    </multiselect>\n                    <div v-if=\"newBudget.presupuesto.activeRub\">\n                      <multiselect v-model=\"newBudget.rubros\" :options=\"newBudget.presupuesto.optionBudget\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :multiple=\"true\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Seleccione rubros\" >\n                      </multiselect>\n                      <div v-for=\"(presu, index) in newBudget.rubros\" :key=\"index\" class=\"row\">\n                        <div class=\"form-group\">\n                          <label for=\"number\">Valor a descontar de {{presu.nombre}}:</label>\n                          <input v-model=\"presu.value\" type=\"number\" class=\"form-control\"  aria-describedby=\"number\" placeholder=\"Número\">\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              <button type=\"button\" class=\"btn btn-primary\"  style=\"background:#003e1e;border-color:#003e1e;\" v-on:click=\"addBudget\">\n                Añadir\n              </button>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-8 align-self-center\">\n                  <div class=\"row justify-content-center\">\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                        Anterior\n                      </button>\n                    </div>\n                    <div class=\"col-3 text-center\">\n                      <button class=\"btn btn-primary\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                        <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                        Guardar\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <!-- {{allRequestData=request}}\n        {{budget_request=request_budgets}} -->\n        <br>\n        <div class=\"row\">\n          <div class=\"col\">\n            <table class=\"table table-striped\" style=\"text-align:center;background-color:#dddddd;\">\n              <thead style=\"background-color: #003e1e; color:white;\">\n                <tr>\n                  <th scope=\"col\">Presupuesto</th>\n                  <th scope=\"col\">Rubro</th>\n                  <th scope=\"col\">Valor</th>\n                  <th scope=\"col\">Acción</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr v-for='(budget, index) in (budget_request=getRequestBudgets)' :key='index'>\n                  <td>{{budget.presupuesto_name}}</td>\n                  <td>{{budget.rubro_name}}</td>\n                  <td>{{budget.valor}}</td>\n                  <td>\n                    <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"remove(index,budget.presupuesto,budget.rubro,budget.rubro_name)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                      <font-awesome-icon icon=\"trash-alt\" size=\"lg\"></font-awesome-icon>\n                    </button>\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex';\nimport router from '../../../router'\n\nimport { mapGetters } from 'vuex'\nimport {axios} from '../../../helpers/axios';\n\nvar API_IP = process.env.VUE_APP_API_IP\n\nconst { mapActions, mapState } = Vuex\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    allbudgets:[],\n    showrub:false,\n    rubrosOptions:[],\n    request:{},\n    request_budgets:[]\n  },\n  getters:{\n    getRequestData: state =>{\n      return state.request;\n    },\n    getRequestBudgets: state =>{\n      return state.request_budgets;\n    }\n  },\n\n  actions: {\n    loadData({commit},id_params) {\n      axios\n      .get(API_IP+'/budget')\n      .then(response => {\n        var budgets=[]\n        for(var k in response.data.data) {\n          var budget = {}\n          budget[\"_id\"] = response.data.data[k]._id;\n          budget[\"name\"] = response.data.data[k].nombre;\n          budget[\"rubros\"] = response.data.data[k].rubros;\n          budget[\"optionBudget\"]=[]\n          budget[\"activeRub\"]=false\n          for(var j in budget.rubros){\n            var bud={}\n            bud[\"_id\"]=budget.rubros[j].rubro._id;\n            bud[\"nombre\"]=budget.rubros[j].rubro.nombre;\n            budget.optionBudget.push(bud)\n          }\n          budget.activeRub=true\n          budgets.push(budget);\n        }\n        commit('loadBudgets',budgets);\n\n        let requestData = {}\n        axios\n        .get(API_IP+'/request/'+router.currentRoute.params.id)\n        .then(response => {\n          // Parametros necesarios en esta vista\n          requestData['obligations'] = response.data.data.obligaciones_especificas\n          // Parametros necesarios para el update general\n          requestData['justification'] = response.data.data.justificacion\n          requestData['aditional_justification'] = response.data.data.justificacion_adicional\n          requestData['general_objective'] = response.data.data.objetivo_general\n          requestData['place'] = response.data.data.ciudad\n          requestData['tipo_solicitud'] = response.data.data.tipo_solicitud\n          requestData['trabajadores'] = response.data.data.trabajadores\n          requestData['start_request_date']= response.data.data.fecha_inicio.substring(0,10)\n          requestData['end_request_date'] = response.data.data.fecha_final.substring(0,10)\n          //Funcion para el total de dias\n          requestData['total_days']=response.data.data.total_dias;\n          requestData['causal']= response.data.data.causal_seleccion\n          requestData['clausulas'] = response.data.data.clausulas\n          requestData['request_auditoria'] = response.data.data.auditoria\n          requestData['request_id'] = response.data.data._id\n          requestData['request_state'] = response.data.data.estado\n          requestData['request_number'] = response.data.data.numero_solicitud\n          requestData['request_value'] = response.data.data.valor_solicitud\n          requestData['especifications'] = response.data.data.especificaciones_tecnicas\n          requestData['request_budget'] = response.data.data.rubros\n          requestData['payment_amount'] = response.data.data.cantidad_pagos\n          requestData['payment_type'] = response.data.data.tipo_pago\n          // Parametros usados en el padre\n          requestData['request_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n          requestData['request_type_url'] = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n\n          commit('loadRequest',requestData);\n        });\n      })\n    },\n\n    updateShowRub({commit},showrub){\n      commit('toggleRub',showrub)\n    },\n    addOptionRubro({commit},rub){\n      commit('addRub',rub)\n    },\n    removeOptionRubro({commit},bud){\n      commit('removeRub',bud)\n    }\n  },\n  mutations:{\n    loadRequest(state,request){\n      state.request=request;\n      for(var k in state.request.request_budget){\n        var budget = state.request.request_budget[k]\n        // budget[\"presupuesto\"] = request.request_budget[k].presupuesto._id\n        budget[\"presupuesto_name\"] = request.request_budget[k].presupuesto.nombre\n        // budget[\"rubro\"] = request.request_budget[k].rubro._id\n        budget[\"rubro_name\"] = request.request_budget[k].rubro.nombre\n        // budget[\"valor\"] = parseInt(request.request_budget[k].valor)\n        state.request_budgets.push(budget)\n      }\n    },\n    loadBudgets(state,budgets){\n      state.allbudgets=budgets;\n    },\n    toggleRub(state){\n      state.showrub=true\n    },\n    addRub(state,rub){\n      var found = state.allbudgets.findIndex(function(element) {\n        return rub.presupuesto == element._id;\n      });\n      console.log(found);\n      if (found != undefined && found != -1) {\n        state.allbudgets[found].optionBudget.push({\"_id\":rub._id,\"nombre\":rub.nombre})\n      }\n    },\n    removeRub(state,budget){\n      var found = state.allbudgets.findIndex(function(element) {\n        return budget.presupuesto == element._id;\n      });\n      var indexRub = state.allbudgets[found].optionBudget.findIndex(function(element) {\n        return budget.rubro == element._id;\n      })\n      var tmp = state.allbudgets[found].optionBudget.splice(indexRub,1)\n    }\n  }\n})\n\n\n\nexport default {\n  props: ['stp'],\n  components: {\n    Multiselect\n  },\n  store,\n  data () {\n    return {\n      allRequestData:{},\n      budget_request: [],\n      request_value: \"\",\n      newBudget:{\n        presupuesto: '',\n        value: '',\n        rubros:[],\n      },\n      step: this.stp\n    }\n  },\n  computed:{\n    ...mapState(['allbudgets','showrub','rubrosOptions','request','request_budgets']),\n    ...mapGetters(['getRequestData','getRequestBudgets'])\n  },\n  mounted(){\n  },\n  methods:{\n    ...mapActions(['updateShowRub','addOptionRubro']),\n\n    relo(){\n      console.log(this.$store.state.rubrosOptions);\n      this.$store.state.rubrosOptions=[]\n      console.log(this.$store.state.rubrosOptions);\n    },\n    remove(index,idbudget,idrub,namerub){\n      var rub={}\n      rub[\"presupuesto\"]=idbudget\n      rub[\"_id\"]=idrub\n      rub[\"nombre\"]=namerub\n      this.budget_request.splice(index,1)\n      this.$store.dispatch('addOptionRubro',rub)\n    },\n    previous(){\n      this.step--\n      this.$emit('nextStep', this.step)\n    },\n    saveContinue(v){\n      var currentRequest= this.getRequestData;\n      console.log(\"currentRequest\");\n      console.log(currentRequest);\n\n      console.log(\"Rubros\");\n      console.log(this.budget_request);\n\n      axios\n      .put(API_IP+'/request/'+this.$route.params.id, {\n        auditoria: currentRequest.request_auditoria,\n        clausulas: currentRequest.clausulas,\n        estado: currentRequest.request_state,\n        _id: currentRequest.request_id,\n        numero_solicitud: currentRequest.request_numer,\n        tipo_solicitud: currentRequest.tipo_solicitud,\n        fecha_inicio: currentRequest.start_request_date,\n        fecha_final: currentRequest.end_request_date,\n        valor_solicitud: (this.request_value != \"\")? parseInt(this.request_value) : parseInt(currentRequest.request_value),\n        justificacion: currentRequest.justification,\n        justificacion_adicional:currentRequest.aditional_justification,\n        objetivo_general:currentRequest.general_objective,\n        especificaciones_tecnicas:currentRequest.especifications,\n        obligaciones_especificas:currentRequest.obligations,\n        rubros:this.budget_request,\n        trabajadores: currentRequest.trabajadores,\n        ciudad:currentRequest.place\n      })\n      .then(response => {\n        console.log(response);\n        this.step++\n        this.$emit('nextStep', this.step)\n        alert(\"Se actualizo satisfactoriamente\");\n      })\n      .catch(error => {\n        console.log(error);\n        alert(error.response.data.error.msg);\n        this.submitting = false;\n      });\n    },\n\n    addBudget() {\n      for(var k in this.newBudget.rubros){\n        console.log(this.newBudget.rubros[k]);\n        var budget = {}\n        budget[\"presupuesto\"] = this.newBudget.presupuesto._id\n        budget[\"presupuesto_name\"] = this.newBudget.presupuesto.name\n        budget[\"rubro\"] = this.newBudget.rubros[k]._id\n        budget[\"rubro_name\"] = this.newBudget.rubros[k].nombre\n        budget[\"valor\"] = parseInt(this.newBudget.rubros[k].value)\n        this.budget_request.push(budget)\n        this.$store.dispatch('removeOptionRubro',budget)\n      }\n      this.newBudget = {\n        presupuesto: '',\n        rubros: [],\n        valor: ''\n      }\n      this.changeBudgetRequest()\n    },\n    changeValueRequest(){\n      this.$emit('changeRequestVal',this.request_value)\n    },\n    changeBudgetRequest(){\n      this.$emit('changeBudRequest',this.budget_request)\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n\n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/update"}]}