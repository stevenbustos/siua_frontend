{"remainingRequest":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js!/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestA.vue?vue&type=script&lang=js","dependencies":[{"path":"/home/developer/Documents/SIUA/frontend/src/components/requests/update/UpdateRequestA.vue","mtime":1544227114787},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":1538083629208},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/home/developer/Documents/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import _objectSpread from \"/home/developer/Documents/SIUA/frontend/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect';\nimport Vuex from 'vuex';\nimport { axios } from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators';\nvar API_IP = process.env.VUE_APP_API_IP;\nvar mapActions = Vuex.mapActions,\n    mapState = Vuex.mapState,\n    mapGetters = Vuex.mapGetters;\nimport router from '../../../router';\nVue.use(Vuex);\nvar store = new Vuex.Store({\n  state: {\n    profesores: [],\n    contratistas: [],\n    planta: [],\n    interventorStore: {},\n    contratistaStore: {},\n    responsableStore: {},\n    valuex: \"\",\n    valuey: \"\",\n    allpersonas: [],\n    personasInterventor: [],\n    personasContratista: [],\n    personasResponsable: [],\n    personasInterventorOriginal: [],\n    personasContratistaOriginal: [],\n    personasResponsableOriginal: [],\n    clauses: [],\n    causals: [],\n    types_request: [],\n    request_data: {}\n  },\n  actions: {\n    loadData: function loadData(_ref) {\n      var commit = _ref.commit;\n      axios.get(API_IP + \"/person/\").then(function (response) {\n        var personas = [];\n\n        for (var k in response.data.data) {\n          var person = {};\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"nombre\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].primer_apellido;\n          personas.push(person);\n        }\n\n        commit('loadPersonas', personas);\n        axios.get(API_IP + \"/person/\", {\n          params: \"profesor\"\n        }).then(function (response) {\n          var profesores = [];\n\n          for (var k in response.data.data) {\n            var profesor = {};\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"nombre\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].primer_apellido;\n            profesores.push(profesor);\n          }\n\n          commit('loadProfesores', profesores);\n          axios.get(API_IP + \"/person/\", {\n            params: \"contratista\"\n          }).then(function (response) {\n            var contratistas = [];\n\n            for (var k in response.data.data) {\n              var contratista = {};\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"nombre\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].primer_apellido;\n              contratistas.push(contratista);\n            }\n\n            commit('loadContratistas', contratistas);\n            axios.get(API_IP + \"/person/\", {\n              params: \"planta\"\n            }).then(function (response) {\n              var plantas = [];\n\n              for (var k in response.data.data) {\n                var planta = {};\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"nombre\"] = response.data.data[k].primer_nombre + \" \" + response.data.data[k].primer_apellido;\n                plantas.push(planta);\n              }\n\n              commit('loadPlanta', plantas);\n              axios.get(API_IP + \"/clause/\").then(function (response) {\n                var clauses = [];\n\n                for (var k in response.data.data) {\n                  var clause = {};\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"nombre\"] = response.data.data[k].nombre;\n                  clauses.push(clause);\n                }\n\n                axios.get(API_IP + '/request/' + router.currentRoute.params.id).then(function (response) {\n                  var request_data = response.data.data;\n\n                  for (var k in request_data.trabajadores) {\n                    var trabajador = {};\n\n                    if (request_data.trabajadores[k].tipo == \"Interventor\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id;\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre + \" \" + request_data.trabajadores[k].persona.primer_apellido;\n                      commit('loadInterventor', trabajador);\n                    } else if (request_data.trabajadores[k].tipo == \"Contratista\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id;\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre + \" \" + request_data.trabajadores[k].persona.primer_apellido;\n                      commit('loadContratista', trabajador);\n                    } else if (request_data.trabajadores[k].tipo == \"Responsable\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id;\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre + \" \" + request_data.trabajadores[k].persona.primer_apellido;\n                      commit('loadResponsable', trabajador);\n                    }\n                  }\n\n                  commit('loadRequestData', response.data.data);\n                  commit('loadClauses', clauses);\n                  axios.get(API_IP + \"/causalSelection/\").then(function (response) {\n                    var causals = [];\n\n                    for (var k in response.data.data) {\n                      var causal = {};\n                      causal[\"_id\"] = response.data.data[k]._id;\n                      causal[\"nombre\"] = response.data.data[k].nombre;\n                      causals.push(causal);\n                    }\n\n                    commit('loadCausals', causals);\n                    axios.get(API_IP + \"/requesttype/\").then(function (response) {\n                      var types_request = [];\n\n                      for (var k in response.data.data) {\n                        var type = {};\n                        type[\"_id\"] = response.data.data[k]._id;\n                        type[\"nombre\"] = response.data.data[k].nombre;\n                        types_request.push(type);\n                      }\n\n                      commit('loadTypesRequest', types_request);\n                    });\n                  });\n                });\n              });\n            });\n          });\n        });\n      });\n    },\n    updateValueXAction: function updateValueXAction(_ref2, valuex) {\n      var commit = _ref2.commit;\n      commit('updateValuex', valuex);\n    },\n    updateValueYAction: function updateValueYAction(_ref3, valuey) {\n      var commit = _ref3.commit;\n      commit('updateValuey', valuey);\n    },\n    updatePersonasInterventorAction: function updatePersonasInterventorAction(_ref4, interventorStore) {\n      var commit = _ref4.commit;\n      commit('updatePersonasInterventor', interventorStore);\n    },\n    updatePersonasContratistaAction: function updatePersonasContratistaAction(_ref5, contratistaStore) {\n      var commit = _ref5.commit;\n      commit('updatePersonasContratista', contratistaStore);\n    },\n    updatePersonasResponsableAction: function updatePersonasResponsableAction(_ref6, responsableStore) {\n      var commit = _ref6.commit;\n      commit('updatePersonasCargo', responsableStore);\n    }\n  },\n  getters: {\n    getRequestData: function getRequestData(state) {\n      return state.request_data;\n    }\n  },\n  mutations: {\n    loadInterventor: function loadInterventor(state, interventor) {\n      state.interventorStore = interventor;\n    },\n    loadContratista: function loadContratista(state, contratista) {\n      state.contratistaStore = contratista;\n    },\n    loadResponsable: function loadResponsable(state, responsable) {\n      state.responsableStore = responsable;\n    },\n    loadProfesores: function loadProfesores(state, profesores) {\n      state.profesores = profesores;\n    },\n    loadContratistas: function loadContratistas(state, contratistas) {\n      state.contratistas = contratistas;\n    },\n    loadPlanta: function loadPlanta(state, planta) {\n      // console.log(\"Load options\");\n      state.planta = planta;\n      state.personasInterventorOriginal = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal = state.contratistas;\n      state.personasResponsableOriginal = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasInterventor = state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista = state.contratistas;\n      state.personasResponsable = state.profesores.concat(state.contratistas).concat(state.planta);\n    },\n    loadClauses: function loadClauses(state, clauses) {\n      state.clauses = clauses;\n    },\n    loadCausals: function loadCausals(state, causals) {\n      state.causals = causals;\n    },\n    loadRequestData: function loadRequestData(state, request_data) {\n      state.request_data = request_data;\n    },\n    loadTypesRequest: function loadTypesRequest(state, types_request) {\n      state.types_request = types_request;\n    },\n    loadPersonas: function loadPersonas(state, personas) {\n      state.allpersonas = personas;\n      state.personasInterventor = personas;\n      state.personasContratista = personas;\n    },\n    updatePersonasInterventor: function updatePersonasInterventor(state, interventorStore) {\n      // console.log(\"original Interventor\");\n      // console.log(state.personasInterventor);\n      state.interventorStore = interventorStore != null ? interventorStore : \"\";\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person._id != state.contratistaStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.contratistaStore._id;\n      });\n    },\n    updatePersonasContratista: function updatePersonasContratista(state, contratistaStore) {\n      // console.log(\"original Contratistas\");\n      // console.log(state.personasContratistaOriginal);\n      state.contratistaStore = contratistaStore != null ? contratistaStore : \"\";\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person._id != state.contratistaStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.contratistaStore._id;\n      });\n    },\n    updatePersonasCargo: function updatePersonasCargo(state, responsableStore) {\n      // console.log(\"original responsables\");\n      // console.log(state.personasResponsable);\n      state.responsableStore = responsableStore != null ? responsableStore : \"\";\n      state.personasInterventor = state.personasInterventorOriginal.filter(function (person) {\n        return person._id != state.contratistaStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasContratista = state.personasContratistaOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.responsableStore._id;\n      });\n      state.personasResponsable = state.personasResponsableOriginal.filter(function (person) {\n        return person._id != state.interventorStore._id && person._id != state.contratistaStore._id;\n      });\n    }\n  }\n});\nexport default {\n  props: ['stp'],\n  store: store,\n  components: {\n    Multiselect: Multiselect\n  },\n  data: function data() {\n    return {\n      interventoresSelect: \"\",\n      contratistasSelect: \"\",\n      interventor: {},\n      contratista: {},\n      person_charge: {},\n      start_request_date: \"\",\n      end_request_date: \"\",\n      total_days: \"\",\n      causal: {},\n      clausulas: [],\n      clausulas_request: [],\n      message: \"\",\n      tipo_solicitud: \"\",\n      trabajadores: [],\n      step: this.stp\n    };\n  },\n  validations: {\n    tipo_solicitud: {\n      required: required\n    },\n    interventor: {\n      required: required\n    },\n    contratista: {\n      required: required\n    },\n    clausulas: {\n      required: required\n    },\n    start_request_date: {\n      required: required\n    },\n    end_request_date: {\n      required: required\n    },\n    causal: {\n      required: required\n    }\n  },\n  computed: _objectSpread({}, mapGetters(['getRequestData']), mapState(['personasInterventorOriginal', 'personasContratistaOriginal', 'personasResponsableOriginal', 'allpersonas', 'personasInterventor', 'valuex', 'valuey', 'contratistaStore', 'interventorStore', 'personasContratista', 'clauses', 'causals', 'types_request', 'personasResponsable', 'responsableStore', 'request_data'])),\n  watch: {\n    interventorStore: function interventorStore() {\n      this.interventor = this.$store.state.interventorStore;\n      this.$store.dispatch('updatePersonasInterventorAction', this.interventor);\n    },\n    contratistaStore: function contratistaStore() {\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.contratista = this.$store.state.contratistaStore;\n    },\n    responsableStore: function responsableStore() {\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.person_charge = this.$store.state.responsableStore;\n    },\n    getRequestData: function getRequestData(requestData, oldValue) {\n      this.tipo_solicitud = requestData.tipo_solicitud;\n      this.start_request_date = requestData.fecha_inicio.substring(0, 10);\n      this.end_request_date = requestData.fecha_final.substring(0, 10); //Funcion para el total de dias\n\n      var sd = new Date(this.start_request_date);\n      var ed = new Date(this.end_request_date);\n      sd.setDate(sd.getDate() + 1);\n      ed.setDate(ed.getDate() + 1);\n      var differentDays = Math.ceil(Math.abs(ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days = differentDays;\n      this.causal = requestData.causal_seleccion;\n      this.clausulas = requestData.clausulas; // Parametros usados en el padre\n\n      this.request_id = requestData._id;\n      this.request_url = \"/solicitudes/\" + requestData.tipo_solicitud.nombre.toLowerCase() + \"/\" + requestData._id;\n      this.request_type_url = \"/solicitudes/\" + requestData.tipo_solicitud.nombre.toLowerCase();\n      this.request_type = requestData.tipo_solicitud.nombre;\n      this.$emit('request_id', this.request_id);\n      this.$emit('request_url', this.request_url);\n      this.$emit('request_type', this.request_type);\n      this.$emit('request_type_url', this.request_type_url); // Parametros necesarios para el update genera\n\n      this.request_auditoria = requestData.auditoria;\n      this.request_state = requestData.estado;\n      this.request_number = requestData.numero_solicitud;\n      this.request_value = requestData.valor_solicitud; // if(requestData.ciudad._id !== undefined && requestData.ciudad._id !== null){\n      //   this.request_city = requestData.ciudad._id\n      // }\n\n      this.request_justification = requestData.justificacion;\n      this.request_aditional_justification = requestData.justificacion_adicional;\n      this.request_objetivo = requestData.objetivo_general;\n      this.request_obligations = requestData.obligaciones_especificas;\n      this.request_especifications = requestData.especificaciones_tecnicas;\n      this.request_budget = requestData.rubros;\n      this.payment_amount = requestData.cantidad_pagos;\n      this.payment_type = requestData.tipo_pago;\n    }\n  },\n  mounted: function mounted() {},\n  methods: _objectSpread({}, mapActions(['getPersonas', 'updatePersonasInterventorAction', 'updatePersonasContratistaAction', 'updatePersonasResponsableAction']), {\n    saveContinue: function saveContinue() {\n      var _this = this;\n\n      this.$v.$touch();\n\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\");\n      } else {\n        for (var k in this.clausulas) {\n          this.clausulas_request.push(this.clausulas[k]._id);\n        }\n\n        axios.put(API_IP + '/request/' + this.$route.params.id, {\n          // Parametros enviados por esta vista\n          tipo_solicitud: this.tipo_solicitud._id,\n          trabajadores: [{\n            persona: this.contratista._id,\n            tipo: \"Contratista\"\n          }, {\n            persona: this.interventor._id,\n            tipo: \"Interventor\"\n          }, {\n            persona: this.person_charge._id,\n            tipo: \"Responsable\"\n          }],\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion: this.causal._id,\n          clausulas: this.clausulas_request,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          estado: this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud: this.request_value,\n          ciudad: this.request_city,\n          justificacion: this.request_justification,\n          justificacion_adicional: this.request_aditional_justification,\n          objetivo_general: this.request_objetivo,\n          especificaciones_tecnicas: this.request_especifications,\n          obligaciones_especificas: this.request_obligations,\n          rubros: this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        }).then(function (response) {\n          console.log(response);\n          _this.step++;\n\n          _this.$emit('nextStep', _this.step);\n\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n        });\n      }\n    }\n  }),\n  created: function created() {\n    this.$store.dispatch('loadData');\n  }\n};",{"version":3,"sources":["UpdateRequestA.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:50px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"/solicitudes\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </a>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"row justify-content-center\">\n          <div class=\"col-10 align-self-center\">\n            <form v-on:submit.prevent=\"saveContinue\" novalidate>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.tipo_solicitud.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"request_type\">Seleccione tipo de solicitud:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <input type=\"text\" class=\"form-control\" id=\"request_type\" aria-describedby=\"request_type\" :placeholder=\"tipo_solicitud.nombre\" disabled>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.tipo_solicitud.$dirty && !$v.tipo_solicitud.required\">Es requerido un tipo de solicitud</div>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.interventor.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Seleccione interventor:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"\" v-model.trim=\"$v.interventor.$model\" :options=\"personasInterventor\" :value=\"interventorStore\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\"  @input=\"updatePersonasInterventorAction\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.interventor.$dirty && !$v.interventor.required\">Es requerido un interventor</div>\n                  </div>\n                  <div class=\"col\">\n                    <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"/personas/crear\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.contratista.$error }\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"contratistas\">Seleccione contratista:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect id=\"box2\" v-model.trim=\"$v.contratista.$model\" :options=\"personasContratista\" :value=\"contratistaStore\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasContratistaAction\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.contratista.$dirty && !$v.contratista.required\">Es requerido un contratista</div>\n                  </div>\n                  <div class=\"col\">\n                    <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"/personas/crear\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Plazo </h3>\n              <div>&nbsp;</div>\n              <div class=\"row\">\n                <div class=\"col\">\n                  <label for=\"startDate\">Fecha inicio:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.start_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.start_request_date.$model\" class=\"form-control\" id=\"startDate\" aria-describedby=\"startDate\">\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.start_request_date.$dirty && !$v.start_request_date.required\">Es requerida una fecha de inicio</div>\n                  </div>\n                </div>\n                <div class=\"col\">\n                  <label for=\"endDate\">Fecha final:</label>\n                </div>\n                <div class=\"col-4\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.end_request_date.$error }\">\n                    <input type=\"date\" v-model.trim=\"$v.end_request_date.$model\" class=\"form-control\" id=\"endDate\" aria-describedby=\"endDate\" >\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.end_request_date.$dirty && !$v.end_request_date.required\">Es requerida una fecha final</div>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"form-group\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"totalDays\">Total en dias:</label>\n                  </div>\n                  <div class=\"col-5\">\n                    <input type=\"text\" v-model=\"total_days\" class=\"form-control\" id=\"totalDays\" aria-describedby=\"totalDays\" placeholder=\"Total\" disabled>\n                  </div>\n                </div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.causal.$error }\">\n                <div class=\"row justify-content-center\">\n                  <div class=\"col-auto\">\n                    <label for=\"selectionCausal\">Causal de selección:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model.trim=\"$v.causal.$model\" :options=\"causals\" track-by=\"_id\" label=\"nombre\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Causal\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.causal.$dirty && !$v.causal.required\">Es requerido un causal de selección</div>\n                  </div>\n                </div>\n              </div>\n              <h3 style=\"color:#003e1e\"> Clausulas adicionales (marcar) </h3>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-6\">\n                  <div class=\"form-group\" :class=\"{ 'form-group--error': $v.clausulas.$error }\">\n                    <multiselect v-model.trim=\"$v.clausulas.$model\" :options=\"clauses\" :multiple=\"true\" :close-on-select=\"true\" :clear-on-select=\"false\" :hide-selected=\"true\" :preserve-search=\"true\" placeholder=\"Escoja las clausulas\" label=\"nombre\" track-by=\"_id\" :preselect-first=\"false\">\n                    </multiselect>\n                    <div class=\"alert alert-danger\" role=\"alert\" v-if=\"$v.clausulas.$dirty && !$v.clausulas.required\">Es requerida al menos una clausula</div>\n                  </div>\n                </div>\n                <div class=\"col-auto\">\n                  <a class=\"btn btn-primary\" href=\"/clausulas/crear\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"plus\" size=\"lg\"></font-awesome-icon>\n                    Adicionar otras\n                  </a>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <h3 style=\"color:#003e1e; text-align:center;\"> Si tiene clausula de responsabilidad de bienes por favor seleccione el responsable de los bienes </h3>\n              <div>&nbsp;</div>\n              <div class=\"form-group\" >\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <label for=\"interventors\">Personas a cargo:</label>\n                  </div>\n                  <div class=\"col-6\">\n                    <multiselect v-model=\"person_charge\" :options=\"personasResponsable\" track-by=\"_id\" label=\"nombre\" :value=\"responsableStore\" :searchable=\"false\" :close-on-select=\"true\" :show-labels=\"true\" placeholder=\"Escoja un interventor\" @input=\"updatePersonasResponsableAction\">\n                    </multiselect>\n                  </div>\n                  <div class=\"col\">\n                    <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"#/ods/crear/1\">\n                      <font-awesome-icon icon=\"pencil-alt\" size=\"lg\"></font-awesome-icon>\n                      Crear Nuevo\n                    </a>\n                  </div>\n                </div>\n              </div>\n              <div>&nbsp;</div>\n              <div class=\"row justify-content-center\">\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                    Guardar y continuar\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <a class=\"btn btn-primary\" style=\"background:#003e1e;border-color:#003e1e;\" href=\"/solicitudes\">\n                    <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                    Cancelar\n                  </a>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from 'vue';\nimport Multiselect from 'vue-multiselect'\nimport Vuex from 'vuex'\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nconst { mapActions, mapState ,mapGetters } = Vuex\n\nimport router from '../../../router'\n\nVue.use(Vuex)\nconst store = new Vuex.Store({\n  state:{\n    profesores:[],\n    contratistas:[],\n    planta:[],\n    interventorStore:{},\n    contratistaStore:{},\n    responsableStore:{},\n    valuex:\"\",\n    valuey:\"\",\n    allpersonas:[],\n    personasInterventor:[],\n    personasContratista:[],\n    personasResponsable:[],\n    personasInterventorOriginal:[],\n    personasContratistaOriginal:[],\n    personasResponsableOriginal:[],\n    clauses:[],\n    causals:[],\n    types_request:[],\n    request_data:{}\n  },\n  actions: {\n    loadData({commit}) {\n      axios.get(API_IP+\"/person/\").then(response => {\n        var personas=[]\n        for (var k in response.data.data){\n          var person = {}\n          person[\"_id\"] = response.data.data[k]._id;\n          person[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].primer_apellido;\n          personas.push(person);\n        }\n        commit('loadPersonas',personas);\n\n        axios.get(API_IP+\"/person/\",{params:\"profesor\"}).then(response => {\n          var profesores=[]\n          for (var k in response.data.data){\n            var profesor = {}\n            profesor[\"_id\"] = response.data.data[k]._id;\n            profesor[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].primer_apellido;\n            profesores.push(profesor);\n          }\n\n          commit('loadProfesores',profesores);\n\n          axios.get(API_IP+\"/person/\",{params:\"contratista\"}).then(response => {\n            var contratistas=[]\n            for (var k in response.data.data){\n              var contratista = {}\n              contratista[\"_id\"] = response.data.data[k]._id;\n              contratista[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].primer_apellido;\n              contratistas.push(contratista);\n            }\n            commit('loadContratistas',contratistas);\n\n            axios.get(API_IP+\"/person/\",{params:\"planta\"}).then(response => {\n              var plantas=[]\n              for (var k in response.data.data){\n                var planta = {}\n                planta[\"_id\"] = response.data.data[k]._id;\n                planta[\"nombre\"] = response.data.data[k].primer_nombre+\" \"+response.data.data[k].primer_apellido;\n                plantas.push(planta);\n              }\n              commit('loadPlanta',plantas);\n\n              axios\n              .get(API_IP+\"/clause/\").then(response => {\n                var clauses=[]\n                for (var k in response.data.data){\n                  var clause = {}\n                  clause[\"_id\"] = response.data.data[k]._id;\n                  clause[\"nombre\"] = response.data.data[k].nombre\n                  clauses.push(clause);\n                }\n\n                axios\n                .get(API_IP+'/request/'+router.currentRoute.params.id)\n                .then(response => {\n                  let request_data=response.data.data\n                  for(var k in request_data.trabajadores){\n                    let trabajador={}\n                    if (request_data.trabajadores[k].tipo == \"Interventor\") {\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido\n                      commit('loadInterventor', trabajador)\n                    } else if(request_data.trabajadores[k].tipo == \"Contratista\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido\n                      commit('loadContratista', trabajador)\n                    } else if (request_data.trabajadores[k].tipo == \"Responsable\"){\n                      trabajador[\"_id\"] = request_data.trabajadores[k].persona._id\n                      trabajador[\"nombre\"] = request_data.trabajadores[k].persona.primer_nombre+\" \"+request_data.trabajadores[k].persona.primer_apellido\n                      commit('loadResponsable', trabajador)\n                    }\n                  }\n                  commit('loadRequestData',response.data.data);\n\n                  commit('loadClauses',clauses);\n                  axios\n                  .get(API_IP+\"/causalSelection/\").then(response => {\n                    var causals=[]\n                    for (var k in response.data.data){\n                      var causal= {}\n                      causal[\"_id\"] = response.data.data[k]._id;\n                      causal[\"nombre\"] = response.data.data[k].nombre\n                      causals.push(causal);\n                    }\n                    commit('loadCausals',causals)\n\n                    axios\n                    .get(API_IP+\"/requesttype/\").then(response => {\n                      var types_request=[]\n                      for (var k in response.data.data){\n                        var type= {}\n                        type[\"_id\"] = response.data.data[k]._id;\n                        type[\"nombre\"] = response.data.data[k].nombre;\n                        types_request.push(type);\n                      }\n                      commit('loadTypesRequest',types_request)\n\n                    })\n                  })\n                })\n              })\n            })\n          })\n        })\n      })\n    },\n    updateValueXAction({commit},valuex){\n      commit('updateValuex',valuex)\n    },\n    updateValueYAction({commit},valuey){\n      commit('updateValuey',valuey)\n    },\n    updatePersonasInterventorAction({commit},interventorStore){\n      commit('updatePersonasInterventor',interventorStore)\n    },\n    updatePersonasContratistaAction({commit},contratistaStore){\n      commit('updatePersonasContratista',contratistaStore)\n    },\n    updatePersonasResponsableAction({commit},responsableStore){\n      commit('updatePersonasCargo',responsableStore)\n    }\n  },\n  getters:{\n    getRequestData: (state) => {\n      return state.request_data\n    }\n  },\n  mutations:{\n    loadInterventor(state,interventor){\n      state.interventorStore=interventor\n    },\n    loadContratista(state,contratista){\n      state.contratistaStore=contratista\n    },\n    loadResponsable(state,responsable){\n      state.responsableStore=responsable\n    },\n    loadProfesores(state,profesores){\n      state.profesores=profesores\n    },\n    loadContratistas(state,contratistas){\n      state.contratistas=contratistas\n    },\n    loadPlanta(state,planta){\n      // console.log(\"Load options\");\n      state.planta=planta\n\n      state.personasInterventorOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratistaOriginal=state.contratistas;\n      state.personasResponsableOriginal=state.profesores.concat(state.contratistas).concat(state.planta);\n\n      state.personasInterventor=state.profesores.concat(state.contratistas).concat(state.planta);\n      state.personasContratista=state.contratistas;\n      state.personasResponsable=state.profesores.concat(state.contratistas).concat(state.planta);\n\n    },\n    loadClauses(state,clauses){\n      state.clauses=clauses;\n    },\n    loadCausals(state,causals){\n      state.causals=causals;\n    },\n    loadRequestData(state,request_data){\n      state.request_data=request_data\n    },\n    loadTypesRequest(state,types_request){\n      state.types_request=types_request;\n    },\n    loadPersonas(state,personas){\n      state.allpersonas=personas;\n      state.personasInterventor=personas;\n      state.personasContratista=personas;\n    },\n    updatePersonasInterventor(state,interventorStore){\n\n      // console.log(\"original Interventor\");\n      // console.log(state.personasInterventor);\n\n      state.interventorStore=((interventorStore != null) ? interventorStore : \"\")\n\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n\n\n    updatePersonasContratista(state,contratistaStore){\n      // console.log(\"original Contratistas\");\n      // console.log(state.personasContratistaOriginal);\n\n      state.contratistaStore=((contratistaStore != null) ? contratistaStore : \"\")\n\n\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    },\n    updatePersonasCargo(state,responsableStore){\n      // console.log(\"original responsables\");\n      // console.log(state.personasResponsable);\n\n      state.responsableStore=((responsableStore != null) ? responsableStore : \"\")\n\n      state.personasInterventor=state.personasInterventorOriginal.filter(person=> (person._id!=state.contratistaStore._id && person._id!=state.responsableStore._id));\n      state.personasContratista=state.personasContratistaOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.responsableStore._id));\n      state.personasResponsable=state.personasResponsableOriginal.filter(person=> (person._id!=state.interventorStore._id && person._id!=state.contratistaStore._id));\n    }\n  }\n})\nexport default {\n  props: ['stp'],\n  store,\n  components: {\n    Multiselect\n  },\n  data () {\n    return {\n      interventoresSelect:\"\",\n      contratistasSelect:\"\",\n      interventor:{},\n      contratista:{},\n      person_charge:{},\n      start_request_date:\"\",\n      end_request_date:\"\",\n      total_days:\"\",\n      causal: {},\n      clausulas: [],\n      clausulas_request:[],\n      message:\"\",\n      tipo_solicitud:\"\",\n      trabajadores:[],\n      step: this.stp\n    }\n  },\n  validations: {\n    tipo_solicitud:{required}, interventor:{required}, contratista:{required}, clausulas:{required},\n    start_request_date:{required}, end_request_date:{required},\n    causal:{required}\n  },\n  computed:{\n    ...mapGetters(['getRequestData']),\n    ...mapState(['personasInterventorOriginal','personasContratistaOriginal','personasResponsableOriginal','allpersonas','personasInterventor','valuex','valuey','contratistaStore','interventorStore','personasContratista','clauses','causals','types_request','personasResponsable','responsableStore','request_data'])\n  },\n  watch: {\n    interventorStore(){\n      this.interventor=this.$store.state.interventorStore\n      this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n\n    },\n    contratistaStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.contratista=this.$store.state.contratistaStore\n    },\n\n    responsableStore(){\n      // this.$store.dispatch('updatePersonasInterventorAction',this.interventor)\n      this.person_charge=this.$store.state.responsableStore\n    },\n    getRequestData(requestData,oldValue){\n      this.tipo_solicitud = requestData.tipo_solicitud\n      this.start_request_date= requestData.fecha_inicio.substring(0,10)\n      this.end_request_date = requestData.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= requestData.causal_seleccion\n      this.clausulas = requestData.clausulas\n      // Parametros usados en el padre\n      this.request_id = requestData._id\n      this.request_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()+\"/\"+requestData._id\n      this.request_type_url = \"/solicitudes/\"+requestData.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = requestData.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n      // Parametros necesarios para el update genera\n      this.request_auditoria = requestData.auditoria\n      this.request_state = requestData.estado\n      this.request_number = requestData.numero_solicitud\n      this.request_value = requestData.valor_solicitud\n      // if(requestData.ciudad._id !== undefined && requestData.ciudad._id !== null){\n      //   this.request_city = requestData.ciudad._id\n      // }\n      this.request_justification = requestData.justificacion\n      this.request_aditional_justification = requestData.justificacion_adicional\n      this.request_objetivo = requestData.objetivo_general\n      this.request_obligations = requestData.obligaciones_especificas\n      this.request_especifications = requestData.especificaciones_tecnicas\n      this.request_budget = requestData.rubros\n      this.payment_amount = requestData.cantidad_pagos\n      this.payment_type = requestData.tipo_pago\n\n    }\n  },\n  mounted() {\n  },\n  methods:{\n    ...mapActions(['getPersonas','updatePersonasInterventorAction','updatePersonasContratistaAction','updatePersonasResponsableAction']),\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        alert(\"Error en el formulario\")\n      } else {\n        for(var k in this.clausulas){\n          this.clausulas_request.push(this.clausulas[k]._id)\n        }\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          tipo_solicitud: this.tipo_solicitud._id,\n          trabajadores: [\n            {\n              persona:this.contratista._id,tipo:\"Contratista\"\n            },\n            {\n              persona:this.interventor._id,tipo:\"Interventor\"\n            },\n            {\n              persona:this.person_charge._id,tipo:\"Responsable\"\n            }\n          ],\n          fecha_inicio:this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion:this.causal._id,\n          clausulas:this.clausulas_request,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          estado:this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud:this.request_value,\n          ciudad: this.request_city,\n          justificacion:this.request_justification,\n          justificacion_adicional:this.request_aditional_justification,\n          objetivo_general:this.request_objetivo,\n          especificaciones_tecnicas:this.request_especifications,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.step++\n          this.$emit('nextStep', this.step)\n          alert(\"Se actualizo la solicitud satisfactoriamente\");\n        })\n      }\n    }\n  },\n  created(){\n    this.$store.dispatch('loadData')\n    \n  }\n}\n</script>\n"],"sourceRoot":"src/components/requests/update"}]}