{"remainingRequest":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestC.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/stevenbustos/Downloads/SIUA/frontend/src/components/requests/update/UpdateRequestC.vue","mtime":1546012018000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/stevenbustos/Downloads/SIUA/frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp'],\n  data () {\n    return {\n      especifications: [{\n        descripcion: '',\n        numero: '',\n        cantidad: ''\n      }],\n      submitting: false,\n      step: this.stp\n    }\n  },\n  validations: {\n    especifications: {\n      required,\n      $each: {\n        descripcion: { required },\n        numero: { required },\n        cantidad: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      if (response.data.data.especificaciones_tecnicas.length !== 0) {\n        this.especifications = response.data.data.especificaciones_tecnicas\n      }\n      // Parametros necesarios para el update general\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.request_value = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n    });\n  },\n  methods: {\n    addForm() {\n      let newObject = {\n        descripcion: '',\n        numero: '',\n        cantidad: ''\n      }\n      this.especifications.push(newObject)\n    },\n    delForm(index) {\n      this.especifications.splice(index,1)\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          especificaciones_tecnicas: this.especifications,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          tipo_solicitud: this.tipo_solicitud,\n          trabajadores: this.trabajadores,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion: this.causal,\n          clausulas: this.clausulas,\n          justificacion: this.justification,\n          justificacion_adicional: this.aditional_justification,\n          objetivo_general: this.general_objective,\n          ciudad: this.place._id,\n          estado: this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud: this.request_value,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n",{"version":3,"sources":["UpdateRequestC.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"UpdateRequestC.vue","sourceRoot":"src/components/requests/update","sourcesContent":["<template>\n  <div>\n    <div class=\"row\">\n      <div class=\"col-md-8 offset-md-2\" style=\"margin-bottom:80px;\">\n        <div class=\"row\">\n          <div class=\"col\">\n            <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n              <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n            </button>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <div class=\"card text-center\" style=\"background-color: rgba(255, 255, 255, 0.4);\">\n          <div class=\"card-body\">\n            <h1 class=\"card-title\">Especificaciones técnicas de los bienes o servicios requeridos.</h1>\n            <p class=\"card-text\">NOTA: ESPECIFIQUE: NOMBRE, MODELO, PRESENTACIÓN, REQUISITOS MÍNIMOS, LUGAR DE INSTALACIÓN,\n              ENTRE OTROS.\n            </p>\n          </div>\n        </div>\n        <div>&nbsp;</div>\n        <form v-on:submit.prevent=\"saveContinue\" novalidate>\n          <div v-for=\"(ob, index) in $v.especifications.$each.$iter\" :key=\"index\" class=\"row\">\n            <div class=\"col\">\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                <label for=\"description\">Descripción:</label>\n                <textarea v-model.trim=\"ob.descripcion.$model\" class=\"form-control\" aria-label=\"description\"\n                placeholder=\"Descripción\" :rows=\"6\" :max-rows=\"10\"></textarea>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"ob.descripcion.$dirty && !ob.descripcion.required\">Es requerida una fecha de inicio</div>\n              </div>\n            </div>\n            <div class=\"col\">\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                <label for=\"number\">Número:</label>\n                <input :value=\"ob.numero.$model = parseInt(index)+1\" type=\"number\" class=\"form-control\" id=\"number\" aria-describedby=\"number\" placeholder=\"Número\" disabled>\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"ob.numero.$dirty && !ob.numero.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <div class=\"form-group\" :class=\"{ 'form-group--error': $v.$error }\">\n                <label for=\"amount\">Cantidad:</label>\n                <input v-model=\"ob.cantidad.$model\" type=\"number\" class=\"form-control\" id=\"amount\" aria-describedby=\"amount\" placeholder=\"Cantidad\">\n                <div class=\"alert alert-danger\" role=\"alert\" v-if=\"ob.cantidad.$dirty && !ob.cantidad.required\">Es requerida una fecha de inicio</div>\n              </div>\n              <button v-if=\"especifications.length > 1\" type=\"button\" class=\"btn btn-primary\" v-on:click=\"delForm(index)\" style=\"background:#003e1e;border-color:#003e1e;\">\n                Quitar especificación técnica\n              </button>\n            </div>\n          </div>\n          <button type=\"button\" class=\"btn btn-primary\" v-on:click=\"addForm()\" style=\"background:#003e1e;border-color:#003e1e;\">\n            Añadir especificación técnica\n          </button>\n          <div>&nbsp;</div>\n          <div class=\"row\">\n            <div class=\"col-md-8 offset-md-2\">\n              <div class=\"card\" style=\"background-color: rgba(0, 0, 255, 0.2;\">\n                <div class=\"card-body\">\n                  <h1 class=\"card-title text-center\">Nota:</h1>\n                  <p class=\"card-text\">\n                    <ul>\n                      <li>\n                        La solicitud debe tener mínimo una especificación técnica\n                      </li>\n                      <li>\n                        En el reporte se mantendra las primeras 5  especificaciones, las demás se presentaran en una hoja como anexo.\n                      </li>\n                    </ul>\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div>&nbsp;</div>\n          <div class=\"row justify-content-center\">\n            <div class=\"col-8 align-self-center\">\n              <div class=\"row justify-content-center\">\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"cancel()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"times-circle\" size=\"lg\"></font-awesome-icon>\n                    Cancelar\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" type=\"button\" @click=\"previous()\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"arrow-left\" size=\"lg\"></font-awesome-icon>\n                    Anterior\n                  </button>\n                </div>\n                <div class=\"col-3 text-center\">\n                  <button class=\"btn btn-primary\" :disabled=\"submitting\" type=\"submit\" style=\"background:#003e1e;border-color:#003e1e;\">\n                    <font-awesome-icon icon=\"save\" size=\"lg\"></font-awesome-icon>\n                    Guardar y continuar\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {axios} from '../../../helpers/axios';\nimport { required } from 'vuelidate/lib/validators'\nvar API_IP = process.env.VUE_APP_API_IP\n\nexport default {\n  props: ['stp'],\n  data () {\n    return {\n      especifications: [{\n        descripcion: '',\n        numero: '',\n        cantidad: ''\n      }],\n      submitting: false,\n      step: this.stp\n    }\n  },\n  validations: {\n    especifications: {\n      required,\n      $each: {\n        descripcion: { required },\n        numero: { required },\n        cantidad: { required }\n      }\n    }\n  },\n  mounted () {\n    axios\n    .get(API_IP+'/request/'+this.$route.params.id)\n    .then(response => {\n      // Parametros necesarios en esta vista\n      if (response.data.data.especificaciones_tecnicas.length !== 0) {\n        this.especifications = response.data.data.especificaciones_tecnicas\n      }\n      // Parametros necesarios para el update general\n      this.justification = response.data.data.justificacion\n      this.aditional_justification = response.data.data.justificacion_adicional\n      this.general_objective = response.data.data.objetivo_general\n      this.place = response.data.data.ciudad\n      this.tipo_solicitud = response.data.data.tipo_solicitud\n      this.trabajadores = response.data.data.trabajadores\n      this.start_request_date= response.data.data.fecha_inicio.substring(0,10)\n      this.end_request_date = response.data.data.fecha_final.substring(0,10)\n      //Funcion para el total de dias\n      var sd=new Date(this.start_request_date);\n      var ed=new Date(this.end_request_date);\n      sd.setDate(sd.getDate()+1)\n      ed.setDate(ed.getDate()+1)\n      var differentDays = Math.ceil(Math.abs( ed.getTime() - sd.getTime()) / (1000 * 3600 * 24));\n      this.total_days=differentDays;\n      this.causal= response.data.data.causal_seleccion\n      this.clausulas = response.data.data.clausulas\n      this.request_auditoria = response.data.data.auditoria\n      this.request_id = response.data.data._id\n      this.request_state = response.data.data.estado\n      this.request_number = response.data.data.numero_solicitud\n      this.request_value = response.data.data.valor_solicitud\n      this.request_obligations = response.data.data.obligaciones_especificas\n      this.request_budget = response.data.data.rubros\n      this.payment_amount = response.data.data.cantidad_pagos\n      this.payment_type = response.data.data.tipo_pago\n      // Parametros usados en el padre\n      this.request_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()+\"/\"+response.data.data._id\n      this.request_type_url = \"/solicitudes/\"+response.data.data.tipo_solicitud.nombre.toLowerCase()\n      this.request_type = response.data.data.tipo_solicitud.nombre\n      this.$emit('request_id', this.request_id)\n      this.$emit('request_url', this.request_url)\n      this.$emit('request_type', this.request_type)\n      this.$emit('request_type_url', this.request_type_url)\n    });\n  },\n  methods: {\n    addForm() {\n      let newObject = {\n        descripcion: '',\n        numero: '',\n        cantidad: ''\n      }\n      this.especifications.push(newObject)\n    },\n    delForm(index) {\n      this.especifications.splice(index,1)\n    },\n    saveContinue(){\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.$swal({\n          title: 'Error!',\n          text: 'Debe llenar campos necesarios en el formulario',\n          type: 'error',\n          confirmButtonText: 'Cerrar'\n        });\n      } else {\n        this.submitting = true;\n        axios\n        .put(API_IP+'/request/'+this.$route.params.id, {\n          // Parametros enviados por esta vista\n          especificaciones_tecnicas: this.especifications,\n          // Parametros enviados para completar el update\n          auditoria: this.request_auditoria,\n          _id: this.request_id,\n          tipo_solicitud: this.tipo_solicitud,\n          trabajadores: this.trabajadores,\n          fecha_inicio: this.start_request_date,\n          fecha_final: this.end_request_date,\n          causal_seleccion: this.causal,\n          clausulas: this.clausulas,\n          justificacion: this.justification,\n          justificacion_adicional: this.aditional_justification,\n          objetivo_general: this.general_objective,\n          ciudad: this.place._id,\n          estado: this.request_state,\n          numero_solicitud: this.request_number,\n          valor_solicitud: this.request_value,\n          obligaciones_especificas:this.request_obligations,\n          rubros:this.request_budget,\n          cantidad_pagos: this.payment_amount,\n          tipo_pago: this.payment_type\n        })\n        .then(response => {\n          console.log(response);\n          this.$swal({\n            title: 'Exito!',\n            text: 'Se actualizo la solicitud con exito.',\n            type: 'success',\n            confirmButtonText: 'Aceptar'\n          }).then((result) => {\n            if (result.value) {\n              this.submitting = false;\n              this.step++;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        })\n        .catch(error => {\n          console.log(error);\n          this.$swal({\n            title: 'Error!',\n            text: error.response.data.error.msg,\n            type: 'error',\n            confirmButtonText: 'Cerrar'\n          });\n          this.submitting = false;\n        });\n      }\n    },\n    cancel(){\n      this.$v.$reset()\n      this.$swal({\n        title: 'Espere',\n        text: '¿Esta seguro que quiere cancelar la operación?',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Cancelado',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.$router.push({ name: 'showrequest', params: { type: this.request_type.toLowerCase() ,id: this.request_id } });\n            }\n          });\n        }\n      });\n    },\n    previous(){\n      this.$swal({\n        title: 'Espere',\n        html: '¿Esta seguro que quiere volver?<br>Los cambios hechos aqui no se guardaran.',\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Si',\n        cancelButtonText: 'No',\n      }).then((result) => {\n        if (result.value) {\n          this.$swal({\n            title: 'Volviendo',\n            type: 'success'\n          }).then((result) => {\n            if (result.value) {\n              this.step--;\n              this.$emit('nextStep', this.step);\n            }\n          });\n        }\n      });\n    }\n  }\n}\n</script>\n"]}]}